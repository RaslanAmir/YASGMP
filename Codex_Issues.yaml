
- id: I-001
  file: docs/codex_plan.md
  module: Environment
  context: Current Compile Status
  type: BuildEnv
  severity: "❌ High"
  description: |
    .NET SDK 9.0.100 is now installed in the container, but the Windows 10 SDK 19041+ and MAUI workloads are still missing.
    Restore/build/test for Windows-targeted projects fail with NETSDK1100/NETSDK1147 and the WPF build hits unresolved YasGMP.Helpers/Diagnostics references and signature DTO types.
    Use a Windows host with the Windows desktop SDK/workloads to unblock the release build/test cadence.
  references:
    - docs/codex_plan.md
    - docs/codex_progress.json
  suggested_fix: |
    Install the Windows 10 SDK (19041+) and required MAUI workloads on a Windows environment, then rerun `dotnet restore`, `dotnet build YasGMP.Wpf/YasGMP.Wpf.csproj -c Release -p:EnableWindowsTargeting=true`, and `dotnet test YasGMP.Wpf.Tests --filter DockLayoutPersistenceServiceTests`.
  status: open
  resolved_in: null
  tags: [buildenv, net9]
- id: I-002
  file: docs/codex_plan.md
  module: Planning
  context: Increment 1 backlog
  type: Planning
  severity: "⚠️ Medium"
  description: |
    Repository-wide folder/module inventory and entity traceability maps required for SAP B1 parity and compliance are still outstanding.
    Increment 1 logged the backlog but no concrete mappings exist yet.
  references:
    - docs/codex_plan.md
    - docs/codex_progress.json
  suggested_fix: |
    Produce the per-folder inventory and entity traceability map during Increment 2, aligning Views/ViewModels/Services/DB artifacts.
  status: closed
  resolved_in: docs/codex_plan.md
  tags: [planning, parity, compliance]

- id: I-003
  file: Services/DatabaseService
  module: Compliance
  context: Audit hash-chain implementation
  type: Compliance
  severity: "⚠️ Medium"
  description: |
    Increment 2 documentation outlines the AuditEnvelopeHash model and AppendAuditHashAsync workflow, but the DatabaseService extensions,
    signature manifest updates, and verification routines remain unimplemented.
    Implement the outlined hash-chain persistence and expose verification cues in the inspector/status bar once SDK validation is possible.
  references:
    - docs/codex_plan.md
    - docs/codex_progress.json
  suggested_fix: |
    Add the AuditEnvelopeHash storage schema, extend DatabaseService with AppendAuditHashAsync, update IElectronicSignatureDialogService consumers
    to include hash metadata, and surface the resulting tokens through relevant view-models and dashboards.
  status: open
  resolved_in: null
  tags: [audit, signature, backlog]

