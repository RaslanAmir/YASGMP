<UserControl x:Class="YasGMP.Wpf.Views.AuditModuleView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:controls="clr-namespace:YasGMP.Wpf.Controls"
             mc:Ignorable="d"
             d:DesignHeight="400"
             d:DesignWidth="600"
             AutomationProperties.Name="{DynamicResource Module_AuditTrail_Title}"
             ToolTipService.ToolTip="{DynamicResource Module_AuditTrail_Tooltip}">
    <UserControl.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        <Style x:Key="BusyAwareToolbarButtonStyle" TargetType="Button">
            <Setter Property="Margin" Value="4,0,0,0" />
            <Setter Property="Padding" Value="12,4" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsBusy}" Value="True">
                    <Setter Property="IsEnabled" Value="False" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>
    <DockPanel>
        <ToolBar DockPanel.Dock="Top">
            <ItemsControl ItemsSource="{Binding Toolbar}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel Orientation="Horizontal" />
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <ToggleButton Content="{Binding Caption}"
                                      Command="{Binding Command}"
                                      IsChecked="{Binding IsChecked}"
                                      Margin="0,0,4,0" />
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
            <Separator />
            <Button Content="CFL" Command="{Binding ShowCflCommand}" AutomationProperties.AutomationId="CflButton" />
            <controls:GoldenArrowButton Command="{Binding GoldenArrowCommand}" Margin="8,0,0,0" AutomationProperties.AutomationId="GoldenArrowButton" />
            <Separator />
            <Button Content="Export PDF"
                    Command="{Binding ExportToPdfCommand}"
                    Style="{StaticResource BusyAwareToolbarButtonStyle}" />
            <Button Content="Export Excel"
                    Command="{Binding ExportToExcelCommand}"
                    Style="{StaticResource BusyAwareToolbarButtonStyle}" />
        </ToolBar>
        <Grid Margin="8">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <StackPanel Grid.Row="0" Margin="0,0,0,8">
                <WrapPanel Margin="0,0,0,8">
                    <StackPanel Width="200" Margin="0,0,12,0">
                        <TextBlock Text="{DynamicResource Label_User}" FontWeight="SemiBold" />
                        <TextBox Text="{Binding FilterUser, UpdateSourceTrigger=PropertyChanged}" />
                    </StackPanel>
                    <StackPanel Width="200" Margin="0,0,12,0">
                        <TextBlock Text="{DynamicResource Label_Entity}" FontWeight="SemiBold" />
                        <TextBox Text="{Binding FilterEntity, UpdateSourceTrigger=PropertyChanged}" />
                    </StackPanel>
                    <StackPanel Width="180" Margin="0,0,12,0">
                        <TextBlock Text="{DynamicResource Label_Action}" FontWeight="SemiBold" />
                        <ComboBox ItemsSource="{Binding ActionOptions}"
                                  SelectedItem="{Binding SelectedAction, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    </StackPanel>
                    <StackPanel Width="180" Margin="0,0,12,0">
                        <TextBlock Text="{DynamicResource Label_From}" FontWeight="SemiBold" />
                        <DatePicker SelectedDate="{Binding FilterFrom, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, TargetNullValue={x:Null}, FallbackValue={x:Null}}" />
                    </StackPanel>
                    <StackPanel Width="180" Margin="0,0,12,0">
                        <TextBlock Text="{DynamicResource Label_To}" FontWeight="SemiBold" />
                        <DatePicker SelectedDate="{Binding FilterTo, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, TargetNullValue={x:Null}, FallbackValue={x:Null}}" />
                    </StackPanel>
                </WrapPanel>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="220" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <TextBlock Text="{DynamicResource Label_Search}" VerticalAlignment="Center" Margin="0,0,8,0" />
                    <TextBox Grid.Column="1" Text="{Binding SearchText, UpdateSourceTrigger=PropertyChanged}" ToolTip="{DynamicResource Tooltip_SearchBox}" />
                    <Button Grid.Column="2"
                            Content="Apply Filters"
                            Command="{Binding RefreshCommand}"
                            Margin="12,0,0,0"
                            Padding="12,4" />
                </Grid>
            </StackPanel>
            <Grid Grid.Row="1">
                <DataGrid ItemsSource="{Binding RecordsView}"
                          SelectedItem="{Binding SelectedRecord, Mode=TwoWay}"
                          AutoGenerateColumns="False"
                          IsReadOnly="True"
                          CanUserAddRows="False"
                          CanUserDeleteRows="False">
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="Timestamp" Binding="{Binding InspectorFields[0].Value}" Width="160" />
                        <DataGridTextColumn Header="User" Binding="{Binding InspectorFields[1].Value}" Width="200" />
                        <DataGridTextColumn Header="Entity" Binding="{Binding Title}" Width="200" />
                        <DataGridTextColumn Header="Action" Binding="{Binding Code}" Width="120" />
                        <DataGridTextColumn Header="Status" Binding="{Binding Status}" Width="120" />
                        <DataGridTextColumn Header="IP Address" Binding="{Binding InspectorFields[4].Value}" Width="160" />
                        <DataGridTextColumn Header="Device" Binding="{Binding InspectorFields[5].Value}" Width="2*" />
                        <DataGridTextColumn Header="Digital Signature" Binding="{Binding InspectorFields[7].Value}" Width="200" />
                        <DataGridTextColumn Header="Signature Hash" Binding="{Binding InspectorFields[8].Value}" Width="200" />
                        <DataGridTextColumn Header="Reason" Binding="{Binding Description}" Width="2*" />
                    </DataGrid.Columns>
                </DataGrid>
                <Border Background="#80FFFFFF"
                        Visibility="{Binding IsBusy, Converter={StaticResource BooleanToVisibilityConverter}}"
                        IsHitTestVisible="True">
                    <StackPanel HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Orientation="Vertical"
                                Margin="24">
                        <ProgressBar IsIndeterminate="True" Width="200" Height="20" />
                        <TextBlock Text="{DynamicResource Label_Loading}"
                                   Margin="0,12,0,0"
                                   HorizontalAlignment="Center"
                                   Foreground="Gray"
                                   FontStyle="Italic" />
                    </StackPanel>
                </Border>
            </Grid>
            <TextBlock Grid.Row="2" Text="{Binding StatusMessage}" FontStyle="Italic" Margin="0,8,0,0">
                <TextBlock.Style>
                    <Style TargetType="TextBlock">
                        <Setter Property="Foreground" Value="Gray" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding HasError}" Value="True">
                                <Setter Property="Foreground" Value="Firebrick" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>
        </Grid>
    </DockPanel>
</UserControl>
