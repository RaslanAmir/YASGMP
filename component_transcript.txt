[Models]
Models/AdminActivityLog.cs: AdminActivityLog Ultra-robust, forensic-level log of all privileged/admin actions and configuration changes. Fully GMP, CSV, and 21 CFR Part 11 compliant (forensics, rollback, traceability). Every change is auditable, signed, and traceable by session, device, and user context. Enables advanced incident, CAPA, and GDPR audit for all system-level events.
Models/ApiAuditLog.cs: Database entity that records each API call for audit, linking to the key/user, action, and request context.
Models/ApiKey.cs: Represents an API key used to authenticate API requests.
Models/ApiUsageLog.cs: ApiUsageLog Logs every API key usage and call for full audit, security, compliance, and analytics. Tracks: who, when, what endpoint/method, params, response, error, timing, IP, session, and device. Critical for GMP, 21 CFR Part 11, GDPR, security and integration monitoring.
Models/Asset.cs: Asset / equipment model.
Models/Attachment.cs: Attachment Ultra-robust digital record for any file (PDF, image, scan, doc, certificate, etc.) linked to GMP/CMMS entities (WorkOrder, Machine, Component, CAPA, Calibration, Inspection, etc). Fully auditable (upload, approval, expiry, rollback, versioning, chain-of-custody, e-sign). Supports multi-entity links, digital signature, hash, OCR, session, device, IP, ML/AI. Inspector, regulatory, and future-proof: ALL FIELDS for forensic, analytics, rollback, audit, and more.
Models/AttachmentAuditLog.cs: AttachmentAuditLog Full forensic GMP/Annex 11 audit record for each attachment action (upload, approve, rollback, etc.). Immutable, includes signature, device, IP, user, action, and timestamp.
Models/AttachmentLink.cs: Represents a link between an and an arbitrary entity within the system (machine, component, work order, etc.).
Models/AuditLog.cs: AuditLog Central system audit/activity log for every user and system action (CRUD, login, export, print, rollback, digital signature, etc.). Fully GMP, 21 CFR Part 11, EU Annex 11, and HALMED compliant. Tracks: who, when, what action, what data/entity, what field, before/after values, device, IP, context, severity, digital signature, and rollback version. Every change (incl. failed attempts) must be logged here for regulatory, forensics, and legal defense. All digital signature events should be cryptographically validated and traceable. Use for all CRUD, user, integration, and critical system actions!
Models/AuditLogEntry.cs: AuditLogEntry Universal, forensics-grade audit log entry used across entities/modules. Designed to be tolerant with historic code: exposes both the new, consistent property names (, , , , , ) and legacy synonyms (, , , ).
Models/BackupHistory.cs: BackupHistory Forensic log of every backup and restore operation in the system. Every backup, restore, verify, and audit: who, when, type, hash, file, outcome, restore, note! Absolutely critical for GMP/CSV compliance, HALMED, and regulatory audit/inspection.
Models/Building.cs: Represents a building within a site, storing identification codes, names, and timestamps.
Models/Calibration.cs: Calibration Represents a single calibration event for any machine component, sensor, or GMP asset. SUPER-MEGA-ULTRA ROBUST: Tracks everything needed for forensic compliance, audit, recall, digital signatures, chaining, workflow, e-signature, and regulatory reporting (GMP, CSV, 21 CFR Part 11, HALMED, ISO).
Models/CalibrationAudit.cs: CalibrationAudit Forensic audit trail for every calibration change (GMP, 21 CFR Part 11). Records: who, when, what changed, digital signature, old/new value, IP, device, and full traceability.
Models/CalibrationAuditLog.cs: CalibrationAuditLog Tracks all audit trail events for calibrations (create, update, delete, export). Forensic GMP record: who, when, action type, old/new values, device/IP, note. Fully supports 21 CFR Part 11, EU GMP Annex 11, and HALMED inspection requirements.
Models/CalibrationExportLog.cs: CalibrationExportLog Records every calibration export event for full audit, GMP, and regulatory traceability. Tracks: who, when, export format, filter criteria, file, and IP. Essential for 21 CFR Part 11, EU GMP, HALMED audits, and inspection readiness.
Models/CalibrationSensor.cs: Describes calibration metadata for a sensor tied to a component, including ranges, units, and upkeep cadence.
Models/CAPA.cs: CAPA Alias for to support legacy references and ViewModel compatibility. Use for all new code. This type enables ViewModel and data compatibility for any code using "CAPA" as the class name.
Models/CapaAction.cs: Represents an individual CAPA action, covering description, timing, ownership, and completion state.
Models/CapaActionLog.cs: CapaActionLog Tracks every action on a CAPA case for GMP/CSV/21 CFR Part 11 compliance. Forensic, auditable: who, what, when, action type, status, findings, digital signature, device, and event chain.
Models/CapaAudit.cs: CapaAudit Full GMP/21 CFR Part 11/Annex 11-compliant audit entry for CAPA (Corrective and Preventive Actions). Tracks every CAPA action: who, what, when, why, device, digital signature, tamper detection, rollback, incident/work order linkage, context, and inspection notes. Chosen by auditors, trusted by inspectors!
Models/CapaCase.cs: CapaCase (Corrective and Preventive Action) Ultra-robust central entity for tracking any CAPA in GMP/CMMS. Full traceability: audit, workflow, signatures, timeline, comments, forensics, attachments, workflow history, and advanced risk features. Maximum extensibility for digital, AI, IoT, ML, inspection, and regulatory future needs.
Models/CapaStatusHistory.cs: CapaStatusHistory Full trace of all status changes for every CAPA case. Ultra-auditable: captures every status transition, user, time, note, device/IP, digital signature, and event version. 100% GMP/CSV/21 CFR Part 11 compliant, ready for forensic, audit, and inspection.
Models/ChangeControl.cs: ChangeControl Ultra-robust, GMP/ISO/21 CFR Part 11/Annex 11 compliant entity for recording change controls (requests, reviews, approvals, implementation). Tracks entire change lifecycle, reason, impact, risk, linked equipment, SOPs, CAPA, digital signatures, attachments, workflow, audit, and more. ViewModel-ready: Includes all extension/virtual properties for dashboard, reporting, and ML/IoT integrations.
Models/ChartData.cs: ChartData Represents a data point or series for dashboard charting/analytics in GMP/CMMS systems. Flexible for any chart type: time-series, bar, pie, line, column, etc. Supports grouping, series, categories, dynamic data, value, label, color, drilldown. Extensible for regulatory analytics, IoT data, and bonus dashboard widgets.
Models/ChecklistItem.cs: Defines a single checklist item/question within a template with ordering and required flags.
Models/ChecklistTemplate.cs: Represents a reusable checklist template definition used across inspections and workflows.
Models/Comment.cs: Generic comment entity that links user-authored text to any tracked entity with timestamps.
Models/Component.cs: Component Represents a machine component in the GMP/CMMS system. SUPER-MEGA-ULTRA ROBUST: Audit, traceability, forensics, digital signature, SOP/document linkage, lifecycle, status, warranty, supplier, all navigation and compliance fields for total regulatory defense and inspection readiness.
Models/ComponentDevice.cs: Entity model for the `component_devices` table.
Models/ComponentModel.cs: Entity model for the `component_models` table.
Models/ComponentPart.cs: Entity model for the `component_parts` table.
Models/ComponentQualification.cs: Entity model for the `component_qualifications` table.
Models/ComponentType.cs: Entity model for the `component_types` table.
Models/ConfigChangeLog.cs: Entity model for the `config_change_log` table.
Models/ContractorIntervention.cs: ContractorIntervention GMP/CSV/21 CFR Part 11 compliant record for external contractor interventions. Links contractor (), component, asset, reason, outcome, full audit, GMP status, digital signatures, forensics, versioning, document linkage, and future extensibility.
Models/ContractorInterventionAudit.cs: Forensic audit entry describing how a contractor intervention was created or modified, with user/device context.
Models/Dashboard.cs: Entity model for the `dashboards` table.
Models/DashboardChart.cs: Minimal chart model used by DashboardViewModel and the dashboard DatabaseService extensions. Extend as needed for your UI.
Models/DashboardEvent.cs: DashboardEvent Represents a dashboard event, notification, or recent activity for GMP/CMMS dashboards. Used for "recent actions", "alerts", "audit events", user notifications, and status feeds. Supports linking to users, modules, records, audit severity, status, timestamp, and deep linking. Extensible for forensic logs, regulatory audit, escalation, and user assignments.
Models/DataMigrationLog.cs: DataMigrationLog Full GMP/CSV/21 CFR Part 11/Annex 11-compliant log for every data migration (import, export, update, delete). SUPER-MEGA-ULTRA ROBUST: Tracks all actors, tables, record counts, timestamps, results, files, forensics, digital signatures, chain/version, rollback notes, and extensibility for future compliance.
Models/DelegatedPermission.cs: DelegatedPermission Forensic, GMP/21 CFR Part 11 compliant record describing a permission delegated from one user to another (proxy, escalation, coverage, incident handling, RBAC+). Designed for MAUI + MVVM + MySQL and Entity Framework Core. Captures: delegator/delegatee, window (start/end), approver, reason, device/IP/session, digital signature, active/revoked state, and change version. Intended to be the single authoritative EF entity (avoid duplicate class definitions). To prevent compiler errors CS0101, CS0229, and CS0579, ensure there is only one EF entity class named in the YasGMP.Models namespace. If you keep any additional partials, they must not redeclare properties nor repeat the .
Models/DeleteLog.cs: Entity model for the `delete_log` table.
Models/Department.cs: Entity model for the `departments` table.
Models/Deviation.cs: Deviation Ultra-mega robust GMP deviation/non-conformance record (audit, workflow, root cause, CAPA, digital signature, AI-ready). Supports complete GMP/Annex 11/21 CFR Part 11 requirements, forensics, workflow, advanced escalation, custom fields, attachments, and AI/ML hooks.
Models/DeviationAudit.cs: Ultra-robust GMP audit entry for a single deviation, aligned to the deviation_audit SQL table. Maps one row per action (CREATE/UPDATE/APPROVE/REJECT/ASSIGN/ESCALATE/EXPORT/ROLLBACK/etc.), including forensics.
Models/DigitalSignature.cs: Digital signature record, schema-aligned with Region 17 in DatabaseService. Includes convenience, not-mapped properties for UI consumption.
Models/Document.cs: Represents a stored document or attachment. Mirrors the documents table.
Models/DocumentationVersion.cs: DocumentationVersion Tracks all versions of documents (SOP, manuals, protocols, reports, etc.) for full GMP/CSV/21 CFR Part 11 compliance. SUPER-MEGA-ULTRA ROBUST: Versioning, audit, digital signature, file hash, workflow/approval, user navigation, rollback, forensics, soft delete, and unlimited extensibility for inspections and legal defensibility.
Models/DocumentControl.cs: DocumentControl Ultra-robust, audit-ready document/SOP master record for GMP/CMMS/QMS systems. Supports versioning, workflow, approvals, digital signatures, users/roles, and full traceability. Designed for 21 CFR Part 11, EU GMP Annex 11, HALMED, FDA, and ISO 9001/13485. Forensic logging: every change, review, approval, and digital event can be tracked and reconstructed. Extensible for electronic signatures, change control, lifecycle, and user-specific views.
Models/DTO/AuditEntryDto.cs: AuditEntryDto Ultra-robust Data Transfer Object for displaying and processing audit logs, forensics, and rollback entries. Used for rollback preview, forensic investigation, audit dashboards, and regulatory review. Captures full before/after values, user, action, entity, timestamp, device, IP, session, attachments. Extensible for digital signature, change group, approval, comments, escalation, ML/AI, fraud, and regulatory fields.
Models/DTO/CapaAuditLog.cs: Forensic log entry for CAPA case actions (GMP, 21 CFR Part 11).
Models/DTO/ChangeControlSummaryDto.cs: Lightweight DTO representing a change control entry used for selection dialogs. Provides enough information for users to identify the record without loading the entire aggregate.
Models/EntityAuditLog.cs: Entity model for the `entity_audit_log` table.
Models/EntityTag.cs: Entity model for the `entity_tags` table.
Models/Enums/AttachmentType.cs: AttachmentType Enumerates all allowed types of attachments/documents in YasGMP. Enables filtering, security, and regulatory enforcement for uploads and linking files. Used by: WorkOrderAttachment, SopDocument, Validation, Inspection, Photo, and all doc control modules.
Models/Enums/AuditLogType.cs: AuditLogType Defines the type/category of an audit log entry. Enables precise forensic tracking and regulatory filtering across all YasGMP modules. Used in all log/audit tables (system_event_log, forensic_user_change_log, capa_audit, etc).
Models/Enums/CalibrationActionType.cs: Enumeration of all possible calibration audit actions for full GMP/ISO 17025 traceability.
Models/Enums/CalibrationResult.cs: CalibrationResult Standardized outcome of any calibration or metrological verification process. Usage: Used in , , reports, and audit logs. Supports GMP/GLP/ISO 17025 digital traceability.
Models/Enums/CapaActionType.cs: CapaActionType Enumerates all standardized action types for CAPA (Corrective and Preventive Actions) audit logging. Used in CAPA modules, audit trails, regulatory reporting, and CAPA workflow automation. Fully aligned with GMP, ISO 13485, ICH Q10, and 21 CFR Part 11. Extensible for any future CAPA/QA/CSV scenario!
Models/Enums/CapaStatus.cs: CapaStatus Status for Corrective and Preventive Actions (CAPA) cases, fully GMP/ISO/21 CFR Part 11 compliant. Used in , , dashboards, workflow automation, and compliance reports. Includes all legacy, UI, and extensibility aliases for maximum compatibility.
Models/Enums/DeviationActionType.cs: DeviationActionType All possible actions/events in deviation (non-conformance) lifecycle for audit/logging. Used in and throughout the DeviationService and deviation management workflow. Fully extensible for regulatory compliance, analytics, AI/ML, and reporting.
Models/Enums/DeviationStatus.cs: DeviationStatus All workflow states for deviations/non-conformances. Follows full GMP/Annex 11/ICH Q10/21 CFR Part 11 workflow: OPEN INVESTIGATION ROOT_CAUSE CAPA_LINKED CLOSED (+ extras for full tracking)
Models/Enums/DigitalSignatureStatus.cs: DigitalSignatureMethod Enumerates all methods for digital or electronic signatures in GMP/CSV/21 CFR Part 11 contexts. Fully auditable, extensible for any authentication/signature scheme.
Models/Enums/DocumentStatus.cs: DocumentStatus Workflow status for any controlled document, SOP, or record in the system. Fully supports versioning, archiving, GMP audit, digital signature, and compliance checks.
Models/Enums/EventSeverity.cs: EventSeverity Classification of the severity/importance of system, audit, security, and compliance events. Usage: Used in system event logs, audit trails, notification systems, dashboard alerts, SIEM integrations, and forensic compliance reports. Compliant with: FDA 21 CFR Part 11, EU GMP Annex 11, ISO 27001, GAMP5.
Models/Enums/ExportFormat.cs: ExportFormat Supported export, print, and reporting formats in YasGMP. Used for document exports, report generation, audit trails, regulatory submissions, and interoperability. Extensible for new digital standards and hybrid formats. Compliant with GxP, GMP, CSV, and FDA 21 CFR Part 11 requirements for traceable data output.
Models/Enums/IncidentActionType.cs: Audit/action verbs used for incident workflow logging.
Models/Enums/IncidentSeverity.cs: IncidentSeverity Enumerates all risk and impact levels for incidents, deviations, or CAPA events. Used for criticality scoring, CAPA triggers, reporting, and dashboard prioritization.
Models/Enums/IncidentStatus.cs: Status values used by the Incident workflow.
Models/Enums/IncidentType.cs: IncidentType Categorizes all types of incidents/events for regulatory, EHS, GMP, CAPA, and operational tracking. Enables analytics, risk scoring, workflow automation, escalation, and compliance dashboards. Extensible for future types and localization.
Models/Enums/InspectionType.cs: InspectionType Specifies types of inspections or audits performed in YasGMP. Used in inspection scheduling, audit trails, analytics, compliance reporting, and workflow automation. Extensible for regulatory, internal, supplier, customer, or special inspections.
Models/Enums/InventoryTransactionType.cs: InventoryTransactionType Types of transactions supported by the inventory module. Provides audit-compliant tracking for every change in inventory/stock.
Models/Enums/MachineStatus.cs: MachineStatus Comprehensive status for machines/equipment/assets in a GMP/CMMS environment. Supports maintenance planning, OEE, lifecycle management, regulatory tracking, dashboards, and downtime analytics.
Models/Enums/PermissionType.cs: PermissionType All possible granular actions available in the YasGMP system. Used for RBAC (Role-Based Access Control), security, audit trail, menu/UI display, automation, and compliance mapping. Every action can be assigned to a role or a specific user, and logged for audit/compliance.
Models/Enums/PhotoType.cs: PhotoType Enumerates all types of photos/images used in the GMP/CMMS system. Used for work orders, inspections, incidents, audits, documentation, before/after, and more. Supports full traceability, AI analysis, and regulatory forensics.
Models/Enums/PpmActionType.cs: PpmActionType Ultra-robust GMP-compliant action type enum for Preventive Maintenance Plan (PPM) audits. Tracks every possible PPM lifecycle action: creation, update, execution, closure, suspension, escalation, etc. Extensible for future digital, IoT, AI, and advanced workflow scenarios.
Models/Enums/SensorType.cs: SensorType All sensor types supported in IoT, calibration, and environmental monitoring. Use for mapping sensor data logs, calibration, asset tracking, and anomaly detection.
Models/Enums/SessionStatus.cs: SessionStatus Full lifecycle status for user login sessions in the YasGMP platform. Supports security audit, SSO, SAML/OAuth, multi-device management, and regulatory traceability (GMP/CSV/21 CFR).
Models/Enums/SopActionType.cs: SopActionType Enumerates all possible actions/events on a Standard Operating Procedure document. Drives audit logs, change control, versioning, approvals, and full traceability.
Models/Enums/SopStatus.cs: SopStatus Full lifecycle status for SOPs and controlled documents. Supports regulatory compliance (GMP, ISO, FDA), multi-stage approval, archival, and replacement.
Models/Enums/SupplierActionType.cs: SupplierActionType Defines all actions on a supplier that require audit and digital signature.
Models/Enums/SupplierStatus.cs: SupplierStatus Statuses representing the full lifecycle and qualification state of a supplier/vendor. Enables advanced audit, risk management, procurement, and regulatory compliance (GMP, ISO 9001/13485, CSV).
Models/Enums/TrainingType.cs: TrainingType Enumerates all training, education, and competency types for GMP/CMMS users. Used for staff qualification, compliance tracking, and audit reporting.
Models/Enums/UserRole.cs: UserRole All possible system roles for the GMP/CMMS/YasGMP platform. Structured, extensible, and audit-ready role definitions. Compliant with GMP, 21 CFR Part 11, CSV, Annex 11, FDA/EU. To add a new role: 1. Add it here with XML summary. 2. Update the RBAC/permission mapping. 3. Sync workflow, audit, and UI code.
Models/Enums/UserRoleType.cs: UserRoleType UI- and logic-facing user roles for workflow, permissions, audit, and analytics. - Used for system logic, RBAC, workflow routing, reporting, UI display (supports multi-language via ). - Enables mapping to `UserRole` (technical), permissions, and auditing. - GMP, CSV, Annex 11, and 21 CFR Part 11 ready. - Designed for extensibility (add, localize, or map custom roles). How to extend: Add new roles with for UI localization. Keep Custom and reserved ranges for future-proofing and client-specific roles.
Models/Enums/UserStatus.cs: UserStatus User account state (full lifecycle: access, workflow, audit, forensics, regulatory compliance). Use to control login, API, workflow, and user administration. Suitable for GMP/CSV/Annex 11 and 21 CFR Part 11.
Models/Enums/ValidationActionType.cs: ValidationActionType Standardized types of actions performed on GMP validation records. Fully audit-ready: every creation, update, execution, approval, rollback, export, and custom/unknown operation. Used in and for digital signature/audit trail compliance. Recommended by: EU GMP Annex 15, ICH Q2, 21 CFR Part 11, FDA guidance.
Models/Enums/ValidationStatus.cs: ValidationStatus All possible states of a GMP validation/qualification record. Fully compliant with EU GMP Annex 15, ISO 13485, 21 CFR Part 11. Future-proof for digital workflow, audit, dashboard, reporting.
Models/Enums/ValidationType.cs: ValidationType Enumerates all types of GMP qualification/validation records. Used for assets, equipment, components, and system compliance. Directly supports 21 CFR Part 11, EU GMP, ISO 13485.
Models/Enums/WarehouseEventType.cs: WarehouseEventType All transaction/event types in warehouse, inventory, and stock operations. Supports traceability, audit, reporting, and real-time inventory dashboard logic.
Models/Enums/WorkOrderActionType.cs: WorkOrderActionType All possible actions on a work order, for audit, workflow, reporting, AI, API, and automation. Extensible, future-proof, and aligned with GMP/CMMS/21 CFR Part 11 requirements. Suitable for regulatory, AI, digital signature, integration, and advanced audit needs. All values are localized for Croatian/English UI.
Models/Enums/WorkOrderExportFormat.cs: WorkOrderExportFormat Supported file formats for exporting, printing, reporting, and interoperability of work orders. Includes standard, regulatory, and extensible (custom/automation) types.
Models/Enums/WorkOrderPriority.cs: WorkOrderPriority Priority level for work orders, interventions, and maintenance tasks. Supports dashboards, auto-escalation, notification, and SLA response metrics.
Models/Enums/WorkOrderSignatureType.cs: WorkOrderSignatureType All possible types of signatures for a work order step. Enables strict audit, multi-stage approval, automation, and full GMP/CSV/21 CFR Part 11 traceability. Extensible for emerging tech (AI, mobile, remote, etc.).
Models/Enums/WorkOrderStatus.cs: WorkOrderStatus All possible statuses for a maintenance, calibration, validation, or inspection work order. Fully regulated for GMP, CAPA, 21 CFR Part 11, ISO, HALMED and future expansion (automation, AI, mobile).
Models/Enums/WorkOrderType.cs: WorkOrderType Categorizes every type of work order/task for the full asset lifecycle, CAPA, GMP, and regulatory compliance. Supports all modern CMMS/asset management operations, inspections, audits, automation, and custom extensions.
Models/ExportAuditLog.cs: Entity model for the `export_audit_log` table.
Models/ExportPrintLog.cs: Entity model for the `export_print_log` table.
Models/ExternalContractor.cs: ExternalContractor Super ultra mega robust GMP/CMMS master record for every external contractor, service provider, or vendor. Tracks all companies, individuals, and teams that perform maintenance, calibration, validation, audits, or services. Stores full regulatory compliance, certificates, blacklist status, intervention history, scoring, audit, digital signatures. Extensible for attachments, contract docs, insurance, roles, risk audit, external/internal mapping, bonus options.
Models/ExternalServicer.cs: ExternalServicer Master data for every external contractor (laboratory, calibration, maintenance, validation, audit, IT ). SUPER-MEGA-ULTRA ROBUST: - Tracks all provider/lab info, ID, status, contracts, certificates, contacts - Full audit chain, digital signature, forensics - Workflow, status, dates, comments, soft delete, and extensibility - Regulatory bulletproof for any global GMP/CSV/21 CFR Part 11/HALMED/FDA inspection
Models/FailureMode.cs: Entity model for the `failure_modes` table.
Models/FieldAccessControl.cs: Field-level user permission model for absolute regulatory and enterprise control.
Models/FieldPermissionChangeLog.cs: FieldPermissionChangeLog Ultra-granular audit log for all changes to field-level access rights. SUPER-MEGA-ULTRA ROBUST: - Tracks who, when, where, how, and why every permission change was made - Captures before/after, reason, forensics, chain/version, digital signature, IP/device, extensibility for future AI, GDPR, legal defense.
Models/ForensicUserChangeLog.cs: ForensicUserChangeLog Forensic, auditable log of all user-related changes: create, role/status change, password reset, delete, force logout. SUPER-MEGA-ULTRA ROBUST: - Tracks who, when, what, on whom, before/after (role, status), reason, digital signature, IP/device, event chain, soft delete, and full navigation for AI/analytics/GMP/CSV/21 CFR Part 11.
Models/Generated/AdminActivityLog.cs: Hyper-robust entity mapping for the `admin_activity_log` table, engineered for extreme enterprise/GxP analytics. Generated AdminActivityLog ensures every column is surfaced for audits, AI, and compliance reporting.
Models/Generated/ApiKeys.cs: Hyper-robust entity mapping for the `api_keys` table, engineered for extreme enterprise/GxP analytics. Generated ApiKeys ensures every column is surfaced for audits, AI, and compliance reporting.
Models/Generated/ChangeControls.cs: Hyper-robust entity mapping for the `change_controls` table, engineered for extreme enterprise/GxP analytics. Generated ChangeControls ensures every column is surfaced for audits, AI, and compliance reporting.
Models/Generated/ContractorInterventionAudit.cs: Hyper-robust entity mapping for the `contractor_intervention_audit` table, engineered for extreme enterprise/GxP analytics. Generated ContractorInterventionAudit ensures every column is surfaced for audits, AI, and compliance reporting.
Models/Generated/Deviations.cs: Hyper-robust entity mapping for the `deviations` table, engineered for extreme enterprise/GxP analytics. Generated Deviations ensures every column is surfaced for audits, AI, and compliance reporting.
Models/Generated/DocumentLinks.cs: Hyper-robust entity mapping for the `document_links` table, engineered for extreme enterprise/GxP analytics. Generated DocumentLinks ensures every column is surfaced for audits, AI, and compliance reporting.
Models/Generated/Documents.cs: Hyper-robust entity mapping for the `documents` table, engineered for extreme enterprise/GxP analytics. Generated Documents ensures every column is surfaced for audits, AI, and compliance reporting.
Models/Generated/DocumentVersions.cs: Hyper-robust entity mapping for the `document_versions` table, engineered for extreme enterprise/GxP analytics. Generated DocumentVersions ensures every column is surfaced for audits, AI, and compliance reporting.
Models/Generated/Efmigrationshistory.cs: Hyper-robust entity mapping for the `__efmigrationshistory` table, engineered for extreme enterprise/GxP analytics. Generated Efmigrationshistory ensures every column is surfaced for audits, AI, and compliance reporting.
Models/Generated/ExternalContractors.cs: Hyper-robust entity mapping for the `external_contractors` table, engineered for extreme enterprise/GxP analytics. Generated ExternalContractors ensures every column is surfaced for audits, AI, and compliance reporting.
Models/Generated/ForensicUserChangeLog.cs: Hyper-robust entity mapping for the `forensic_user_change_log` table, engineered for extreme enterprise/GxP analytics. Generated ForensicUserChangeLog ensures every column is surfaced for audits, AI, and compliance reporting.
Models/Generated/IncidentLog.cs: Hyper-robust entity mapping for the `incident_log` table, engineered for extreme enterprise/GxP analytics. Generated IncidentLog ensures every column is surfaced for audits, AI, and compliance reporting.
Models/Generated/Inspections.cs: Hyper-robust entity mapping for the `inspections` table, engineered for extreme enterprise/GxP analytics. Generated Inspections ensures every column is surfaced for audits, AI, and compliance reporting.
Models/Generated/IntegrationLog.cs: Hyper-robust entity mapping for the `integration_log` table, engineered for extreme enterprise/GxP analytics. Generated IntegrationLog ensures every column is surfaced for audits, AI, and compliance reporting.
Models/Generated/InventoryLocations.cs: Hyper-robust entity mapping for the `inventory_locations` table, engineered for extreme enterprise/GxP analytics. Generated InventoryLocations ensures every column is surfaced for audits, AI, and compliance reporting.
Models/Generated/InventoryTransactions.cs: Hyper-robust entity mapping for the `inventory_transactions` table, engineered for extreme enterprise/GxP analytics. Generated InventoryTransactions ensures every column is surfaced for audits, AI, and compliance reporting.
Models/Generated/LkpMachineTypes.cs: Hyper-robust entity mapping for the `lkp_machine_types` table, engineered for extreme enterprise/GxP analytics. Generated LkpMachineTypes ensures every column is surfaced for audits, AI, and compliance reporting.
Models/Generated/LkpStatus.cs: Hyper-robust entity mapping for the `lkp_status` table, engineered for extreme enterprise/GxP analytics. Generated LkpStatus ensures every column is surfaced for audits, AI, and compliance reporting.
Models/Generated/LkpWorkOrderTypes.cs: Hyper-robust entity mapping for the `lkp_work_order_types` table, engineered for extreme enterprise/GxP analytics. Generated LkpWorkOrderTypes ensures every column is surfaced for audits, AI, and compliance reporting.
Models/Generated/MachineComponents.cs: Hyper-robust entity mapping for the `machine_components` table, engineered for extreme enterprise/GxP analytics. Generated MachineComponents ensures every column is surfaced for audits, AI, and compliance reporting.
Models/Generated/MachineLifecycleEvent.cs: Hyper-robust entity mapping for the `machine_lifecycle_event` table, engineered for extreme enterprise/GxP analytics. Generated MachineLifecycleEvent ensures every column is surfaced for audits, AI, and compliance reporting.
Models/Generated/Parts.cs: Hyper-robust entity mapping for the `parts` table, engineered for extreme enterprise/GxP analytics. Generated Parts ensures every column is surfaced for audits, AI, and compliance reporting.
Models/Generated/PartStocks.cs: Hyper-robust entity mapping for the `part_stocks` table, engineered for extreme enterprise/GxP analytics. Generated PartStocks ensures every column is surfaced for audits, AI, and compliance reporting.
Models/Generated/PartSupplierPrices.cs: Hyper-robust entity mapping for the `part_supplier_prices` table, engineered for extreme enterprise/GxP analytics. Generated PartSupplierPrices ensures every column is surfaced for audits, AI, and compliance reporting.
Models/Generated/Photos.cs: Hyper-robust entity mapping for the `photos` table, engineered for extreme enterprise/GxP analytics. Generated Photos ensures every column is surfaced for audits, AI, and compliance reporting.
Models/Generated/PreventiveMaintenancePlans.cs: Hyper-robust entity mapping for the `preventive_maintenance_plans` table, engineered for extreme enterprise/GxP analytics. Generated PreventiveMaintenancePlans ensures every column is surfaced for audits, AI, and compliance reporting.
Models/Generated/QualityEvents.cs: Hyper-robust entity mapping for the `quality_events` table, engineered for extreme enterprise/GxP analytics. Generated QualityEvents ensures every column is surfaced for audits, AI, and compliance reporting.
Models/Generated/RequalificationSchedule.cs: Hyper-robust entity mapping for the `requalification_schedule` table, engineered for extreme enterprise/GxP analytics. Generated RequalificationSchedule ensures every column is surfaced for audits, AI, and compliance reporting.
Models/Generated/RiskAssessments.cs: Hyper-robust entity mapping for the `risk_assessments` table, engineered for extreme enterprise/GxP analytics. Generated RiskAssessments ensures every column is surfaced for audits, AI, and compliance reporting.
Models/Generated/RowAuditLog.cs: Hyper-robust entity mapping for the `row_audit_log` table, engineered for extreme enterprise/GxP analytics. Generated RowAuditLog ensures every column is surfaced for audits, AI, and compliance reporting.
Models/Generated/ScheduledJobs.cs: Hyper-robust entity mapping for the `scheduled_jobs` table, engineered for extreme enterprise/GxP analytics. Generated ScheduledJobs ensures every column is surfaced for audits, AI, and compliance reporting.
Models/Generated/SchemaMigrationLog.cs: Hyper-robust entity mapping for the `schema_migration_log` table, engineered for extreme enterprise/GxP analytics. Generated SchemaMigrationLog ensures every column is surfaced for audits, AI, and compliance reporting.
Models/Generated/SensitiveDataAccessLog.cs: Hyper-robust entity mapping for the `sensitive_data_access_log` table, engineered for extreme enterprise/GxP analytics. Generated SensitiveDataAccessLog ensures every column is surfaced for audits, AI, and compliance reporting.
Models/Generated/SensorDataLogs.cs: Hyper-robust entity mapping for the `sensor_data_logs` table, engineered for extreme enterprise/GxP analytics. Generated SensorDataLogs ensures every column is surfaced for audits, AI, and compliance reporting.
Models/Generated/SessionLog.cs: Hyper-robust entity mapping for the `session_log` table, engineered for extreme enterprise/GxP analytics. Generated SessionLog ensures every column is surfaced for audits, AI, and compliance reporting.
Models/Generated/Settings.cs: Hyper-robust entity mapping for the `settings` table, engineered for extreme enterprise/GxP analytics. Generated Settings ensures every column is surfaced for audits, AI, and compliance reporting.
Models/Generated/SopDocuments.cs: Hyper-robust entity mapping for the `sop_documents` table, engineered for extreme enterprise/GxP analytics. Generated SopDocuments ensures every column is surfaced for audits, AI, and compliance reporting.
Models/Generated/StockLevels.cs: Hyper-robust entity mapping for the `stock_levels` table, engineered for extreme enterprise/GxP analytics. Generated StockLevels ensures every column is surfaced for audits, AI, and compliance reporting.
Models/Generated/SupplierAudit.cs: Hyper-robust entity mapping for the `supplier_audit` table, engineered for extreme enterprise/GxP analytics. Generated SupplierAudit ensures every column is surfaced for audits, AI, and compliance reporting.
Models/Generated/ValidationAudit.cs: Hyper-robust entity mapping for the `validation_audit` table, engineered for extreme enterprise/GxP analytics. Generated ValidationAudit ensures every column is surfaced for audits, AI, and compliance reporting.
Models/Generated/ValidationRecords.cs: Hyper-robust entity mapping for the `validation_records` table, engineered for extreme enterprise/GxP analytics. Generated ValidationRecords ensures every column is surfaced for audits, AI, and compliance reporting.
Models/Generated/ValidationSets.cs: Hyper-robust entity mapping for the `validation_sets` table, engineered for extreme enterprise/GxP analytics. Generated ValidationSets ensures every column is surfaced for audits, AI, and compliance reporting.
Models/Generated/Vendors.cs: Hyper-robust entity mapping for the `vendors` table, engineered for extreme enterprise/GxP analytics. Generated Vendors ensures every column is surfaced for audits, AI, and compliance reporting.
Models/Generated/Warehouses.cs: Hyper-robust entity mapping for the `warehouses` table, engineered for extreme enterprise/GxP analytics. Generated Warehouses ensures every column is surfaced for audits, AI, and compliance reporting.
Models/Generated/WorkOrderComments.cs: Hyper-robust entity mapping for the `work_order_comments` table, engineered for extreme enterprise/GxP analytics. Generated WorkOrderComments ensures every column is surfaced for audits, AI, and compliance reporting.
Models/Generated/WorkOrderParts.cs: Hyper-robust entity mapping for the `work_order_parts` table, engineered for extreme enterprise/GxP analytics. Generated WorkOrderParts ensures every column is surfaced for audits, AI, and compliance reporting.
Models/Generated/WorkOrderPhotos.cs: Hyper-robust entity mapping for the `work_order_photos` table, engineered for extreme enterprise/GxP analytics. Generated WorkOrderPhotos ensures every column is surfaced for audits, AI, and compliance reporting.
Models/Generated/WorkOrderSignatures.cs: Hyper-robust entity mapping for the `work_order_signatures` table, engineered for extreme enterprise/GxP analytics. Generated WorkOrderSignatures ensures every column is surfaced for audits, AI, and compliance reporting.
Models/Incident.cs: End-to-end incident record capturing event details, severity, related entities, and closure metadata.
Models/IncidentAction.cs: IncidentAction Represents a single corrective/preventive step in a GMP/CMMS incident workflow. SUPER-MEGA-ULTRA ROBUST: - Tracks performer, time, action type, full description, result, root cause - Full navigation to users, attachments, digital signature, device/IP, modification chain - 100% audit ready, supports timeline analytics and Part 11 forensics
Models/IncidentAudit.cs: Use IncidentActionType (not WorkOrderActionType)
Models/IncidentLog.cs: IncidentLog Forenzi ka evidencija svih incidenata, nepravilnosti i GMP prijava. Prati sve to inspektor mo e tra iti: detekciju, izvje ivanje, CAPA, status, korisnik, audit, rollback, signature! Complete regulatory, forensic, and audit logging Every field needed for inspection, rollback, legal defense Digital signatures, user linkage, CAPA actions, and device/IP forensics
Models/IncidentReport.cs: IncidentReport Modern incident reporting DTO/entity with legacy-compatible fields. Fully instrumented for dashboards, workflows, and audit trails.
Models/Inspection.cs: Represents a record of any GMP inspection (HALMED, internal, external, validation, etc.). Tracks results, documentation, audit trail, digital signatures, and links to related equipment or CAPA cases.
Models/IntegrationLog.cs: IntegrationLog Logovi integracija s vanjskim sustavima, API poziva i webhookova. Prati zahtjeve, odgovore, status i vrijeme obrade. Logs every integration/API/webhook request/response Full traceability of request/response and outcome Audit and forensics ready
Models/InventoryTransaction.cs: InventoryTransaction Ultra robust record of every inventory movement for a part. Fully audit-ready: links part, warehouse, user, transaction type, docs, notes. Supports GMP/CSV traceability, regulatory audit, attachments, and forensic analysis.
Models/IotAnomalyLog.cs: Entity model for the `iot_anomaly_log` table.
Models/IotDevice.cs: Entity model for the `iot_devices` table.
Models/IotEventAudit.cs: Entity model for the `iot_event_audit` table.
Models/IotGateway.cs: Entity model for the `iot_gateways` table.
Models/IotSensorData.cs: Entity model for the `iot_sensor_data` table.
Models/IrregularitiesLog.cs: Entity model for the `irregularities_log` table.
Models/JobTitle.cs: Entity model for the `job_titles` table.
Models/KpiWidget.cs: KpiWidget Represents a dashboard Key Performance Indicator (KPI) widget for real-time analytics in GMP/CMMS/QMS systems. Used for dashboards, analytics panels, status overviews. Supports dynamic value, trend, color coding, icons, drilldown, alert status, last update. Extensible for charting, regulatory metrics, IoT feeds, or any dashboard scenario.
Models/Location.cs: Physical location where a machine resides.
Models/LogEntry.cs: LogEntry THE most robust, AI/ML-ready, forensic, and future-proof audit log for all user and system actions. Complies with GMP, 21 CFR Part 11, ISO, ITIL, Banking, pharma, and future digital/AI regulations. Designed for digital inspectors, data science, compliance, blockchain, and legal evidence.
Models/LoginAttemptLog.cs: LoginAttemptLog THE most robust, forensic, fully auditable login attempt log for user/system access. Tracks every login attempt (success/failure), user, device, reason, forensic evidence, risk score, geo, AI/ML fields. Fully compliant with GMP, CSV, 21 CFR Part 11, ISO, SOX, ITIL, banking, and future cyber/AI regulations.
Models/LookupDomain.cs: Entity model for the `lookup_domain` table.
Models/LookupValue.cs: Entity model for the `lookup_value` table.
Models/Machine.cs: Machine Ultra-mega robust GMP/CMMS digital twin for any machine, line, equipment, or asset. All ultra and bonus fields for maximum integration (GMP/ERP/AI/IoT/Inspection) Maps to machines SQL table with bonus fields for legacy/UI/compatibility.
Models/MachineComponent.cs: MachineComponent Digital twin model for a machine/asset component. Full lifecycle tracking (calibration, validation, CAPA, docs, photos, signatures, IoT) Maximum traceability (audit, forensics, inspector/validation-ready) Ready for Industry 4.0 (AI/ML analytics, digital workflow, smart maintenance) Extended for forward compatibility with extra fields and relationships
Models/MachineLifecycleEvent.cs: MachineLifecycleEvent GMP/CMMS record of all key lifecycle events for a machine/asset. Covers procurement, installation, maintenance, repair, upgrade, move, decommission, scrap, and more. Fully audit-ready (user, timestamp, docs, notes). Designed for regulatory compliance (21 CFR Part 11, Annex 11). Extensible for attachments, IoT, evidence, and full change traceability.
Models/MachineModel.cs: Entity model for the `machine_models` table.
Models/MachineStatus.cs: Lookup for machine operational statuses.
Models/MachineType.cs: Lookup entity representing a machine type/category.
Models/MaintenanceExecutionLog.cs: MaintenanceExecutionLog Ultimate forensic log for preventive/corrective maintenance execution. Tracks every detail: what, when, who, result, doc, root cause, photos, IoT, signature, device, IP Inspector-ready: audit, rollback, comments, traceability Ready for AI/ML analytics, IoT integration, validation, and regulatory inspection
Models/Manufacturer.cs: Represents a machine manufacturer.
Models/MeasurementUnit.cs: Entity model for the `measurement_units` table.
Models/MobileDeviceLog.cs: Entity model for the `mobile_device_log` table.
Models/Notification.cs: Notification advanced, forensic-friendly notification entity with full context. Tracks priority, status, targeting, sender/recipient details, timestamps, device/session info, and supports attachments. Designed to work across in-app, email, SMS, push, Teams, webhooks, etc.
Models/NotificationLog.cs: NotificationLog THE ultimate, full-audit, multi-channel log of all user/system notifications. Tracks every field for regulatory, forensic, and analytics compliance.
Models/NotificationQueue.cs: Entity model for the `notification_queue` table.
Models/NotificationTemplate.cs: Entity model for the `notification_templates` table.
Models/Part.cs: Part Master record for every spare part in the GMP/CMMS system. Full audit, digital signatures, multi-supplier, price history, attachments Barcode/RFID/serial/lot/expiry/warranty/certificates Linked to warehouses, work orders, change logs, regulatory notes Includes legacy-compat properties (, , , ) so older pages and view models continue to compile and run.
Models/PartBom.cs: Entity model for the `part_bom` table.
Models/PartChangeLog.cs: PartChangeLog Full forensic, regulatory, and business audit log for all changes to spare part master data. 21 CFR Part 11, HALMED, EU GMP, FDA, ISO 9001/13485, ERP/AI/ML ready Tracks every field change: who, when, what, before/after, signature, IP/device Ready for rollback, compliance review, inspector export, and AI anomaly detection
Models/PartSupplierPrice.cs: PartSupplierPrice Super ultra mega robust price and contract record for a supplier-part relationship. Full price history, audit, digital signature, multi-currency, region, and contract validity Tracks VAT, discounts, surcharges, min order, lead time, recall/block, ML price scoring Inspector/ERP/analytics-ready, fully GMP/CSV/21 CFR Part 11/ISO compliant
Models/PartUsage.cs: PartUsage Super ultra mega robust record for every spare part used in maintenance, calibration, repair, or GMP/CMMS intervention. Tracks which parts were used, in what quantity, by whom, on what work order/machine/component. Supports batch/lot, serial, expiry, cost, supplier, warranty, attachments, and full audit. Regulatory-ready: forensics, traceability, stock deduction, and real-time inventory.
Models/Permission.cs: Permission Defines an atomic system right/ability for ultra-robust, forensic RBAC. Fully GMP/CSV/21 CFR Part 11/Annex 11 ready. Extensible, auditable, regulatory-tagged, and hierarchy-enabled. Supports compliance dashboards, risk analysis, audit, change tracking, and inspector reporting. - Maps to roles via . - Supports parent/child hierarchy and groupings. - Add new permissions here and sync your UI, logic, and reporting modules.
Models/PermissionChangeLog.cs: Entity model for the `permission_change_log` table.
Models/PermissionRequest.cs: Entity model for the `permission_requests` table.
Models/PermissionType.cs: Legacy placeholder retained so older migrations referencing a PermissionType model compile. Actual permission taxonomy lives in Models.Enums.PermissionType.
Models/Photo.cs: Photo Super ultra mega robust, forensic model for all photographic evidence: before/after, AI/ML, audit, compliance. Full audit, digital signature, hash, session, approval, chain-of-custody, AI tags, geo, device info Tracks every who, what, when, where, why, how , with regulatory and forensic fields Ready for inspector export, blockchain, e-sign, watermark, multi-resolution, versioning, and analytics
Models/PpmAudit.cs: PpmAudit Ultra-robust, GMP-compliant immutable audit log entry for Preventive Maintenance Plans (PPM). Tracks every action, user, digital signature, forensic details, AI scoring, regulatory/export/rollback, and IoT links.
Models/PpmPlan.cs: Entity model for the `ppm_plans` table.
Models/PreventiveMaintenancePlan.cs: PreventiveMaintenancePlan Ultra robust, inspector-ready model for Preventive Maintenance Plans (PPM). GMP/CSV/Annex 11/21 CFR Part 11 compliant fields Versioning, e-signature, auditability, and analytics fields (risk/anomaly/AI) Backward-compatibility aliases for common UI/ViewModel expectations (Title, DueDate) Designed for schema tolerance when mapping from MySQL rows
Models/ProductRecallLog.cs: ProductRecallLog Ultra robust, full-featured GMP/CSV/ISO audit log for all product/part recalls. Tracks every regulatory, root-cause, traceability, and closure step. Digital signature, attachments, chain-of-custody, inspector audit, AI/ML ready.
Models/Qualification.cs: Qualification Ultra-robust GMP/CMMS qualification record (IQ, OQ, PQ, Supplier, Component, Requalification, etc.) Tracks initial and periodic qualifications, status, expiry, digital signatures, audit logs, escalation. Full regulatory compliance (21 CFR Part 11, Annex 11, HALMED, ISO 9001/13485). Forensically links to equipment, users, suppliers, documents, and change events.
Models/QualityEvent.cs: QualityEvent Comprehensive GMP/CMMS record of all quality-related events (deviations, complaints, recalls, OOS, change control, audit, training, etc). Tracks all required data for root cause analysis, compliance, audit, recall, and reporting. Fully supports attachments, signatures, cross-linking to machines/components, and workflow.
Models/RefDomain.cs: Entity model for the `ref_domain` table.
Models/RefValue.cs: Entity model for the `ref_value` table.
Models/Report.cs: Report Ultra robust, all-purpose audit/analytics/compliance report model. GMP/CSV/21 CFR Part 11/ISO/AI ready: includes forensic chain, versioning, filter params, signature, attachments, ML, regulatory links. Base for specialized report types (inherit or extend as needed).
Models/ReportSchedule.cs: Entity model for the `report_schedule` table.
Models/RequalificationSchedule.cs: RequalificationSchedule Ultra robust requalification/revalidation plan for a GMP component. Covers all regulatory, forensics, AI/analytics, digital traceability, audit, e-signature, and extensibility requirements.
Models/ResponsibleParty.cs: Represents a person, department, or external party responsible for a machine.
Models/RetentionPolicy.cs: Describes the retention requirements for a stored attachment. Each upload receives a retention record capturing policy metadata and target disposition.
Models/RiskAssessment.cs: RiskAssessment Ultra-robust record for GMP/CMMS/QMS risk analysis, mitigation, audit, and compliance. Tracks risk assessment events: title, category/area, detailed description, scoring (S P D), mitigation/action plan, owner/approval workflow, attachments and workflow history. Regulatory-ready (ICH Q9, 21 CFR Part 11, Annex 11, ISO 14971, HALMED). Full audit, digital signatures, escalation, document linkage, periodic review, forensics fields (IP/device/session).
Models/Role.cs: Role Ultra-robust, auditable user role for GMP/CSV/21 CFR/Annex 11/ITIL-compliant RBAC. Fully supports multi-level RBAC, workflow, escalation, legal/audit traceability, SoD (Segregation of Duties), delegation, and incident forensics. Used for permission mapping, user-role assignments, workflow routing, and regulatory reporting. Recommended: Map to (assignment), (access), and (role-right mapping). - Extend for multi-org, jurisdiction, contract/vendor, and special regulatory modules. - Safe for legal trace, incident defense, compliance, and audit dashboarding. - All changes should be tracked via the audit log.
Models/RoleAudit.cs: Entity model for the `role_audit` table.
Models/RolePermission.cs: RolePermission Assigns a to a (RBAC many-to-many mapping). Fully GMP/CSV/21 CFR Part 11/Annex 11/forensic/audit-ready. Tracks assignment, expiration, digital signature, session, device, audit, and rollback support. Designed for legal traceability, SOD, escalation, and compliance dashboards. - Use with and to enforce and audit RBAC. - Extend for SOD (Segregation of Duties), external authorities, or incident escalation.
Models/Room.cs: Entity model for the `rooms` table.
Models/ScheduledJob.cs: ScheduledJob Universal job/task scheduling model for all automated, recurring, and ad-hoc jobs. Supports: maintenance, calibration, notifications, exports, reports, custom scripts, IoT sync. Designed for GMP/Annex 11/21 CFR Part 11 compliance (full audit, digital signature, escalation, traceability).
Models/ScheduledJobAuditLog.cs: Entity model for the `scheduled_job_audit_log` table.
Models/SchemaMigrationLog.cs: SchemaMigrationLog Ultra-robust audit log for all database schema migrations.
Models/SensitiveDataAccessLog.cs: SensitiveDataAccessLog Ultra-robust forensic log for every access to sensitive data.
Models/SensorDataLog.cs: SensorDataLog Ultra-robust forensic history of all IoT/sensor measurements in the GMP system. Tracks measurement details such as type, value, unit, device, timestamp, integrity hashes, AI anomaly flags, approval metadata, geolocation, and more for comprehensive audit and regulatory compliance.
Models/SensorModel.cs: Entity model for the `sensor_models` table.
Models/SensorType.cs: Entity model for the `sensor_types` table.
Models/SessionLog.cs: SessionLog Advanced log of user sessions, forensics, impersonation, temporary escalation, and device/IP tracking.
Models/Setting.cs: Setting Super ultra mega robust GMP/CMMS/QMS application/system parameter record.
Models/Site.cs: Entity model for the `sites` table.
Models/SopDocument.cs: SopDocument Ultra-robust model for Standard Operating Procedure (SOP) documentation. Covers every detail for GMP/CSV/21 CFR Part 11: PDF, metadata, versioning, lifecycle, signatures, blockchain, e-sign, workflow, attachments, and AI/ML readiness.
Models/SopDocumentLog.cs: Entity model for the `sop_document_log` table.
Models/SparePart.cs: SparePart Ultra robust master record for all parts in the GMP/CMMS inventory system. Supports full audit, digital signatures, multi-supplier, price history, attachments, regulatory traceability. Includes barcode/QR, status, warranty, linked stock levels, work orders, and advanced supply chain analytics.
Models/SqlQueryAuditLog.cs: SqlQueryAuditLog Ultra-robust audit log for every SQL query/operation. Tracks SELECT, INSERT, UPDATE, DELETE, DDL, EXPORT, API, IMPORT, REPORT, and more. Full GMP, HALMED, FDA, and forensic compliance: who, what, when, where, how, result, rollback, hash chain, digital signature, and AI/ML anomaly support.
Models/StockChangeLog.cs: StockChangeLog Full audit, forensic, and analytics-ready log for every inventory movement, change, or event. 21 CFR Part 11, HALMED, EU GMP, FDA, ISO 9001/13485 compliant Captures every addition, removal, transfer, adjustment, quarantine, recall, correction, and block Forensic: user, time, device/IP, signature, incident/ref, attachments AI/ML supply chain analytics ready; full ERP/SAP integration; rollback, recall, and traceability
Models/StockLevel.cs: StockLevel Ultimate robust stock-tracking for every part in every warehouse. GMP/CSV/21 CFR Part 11 ready: alarms, audit, IoT/automation, digital signature, hash chain, ML-anomaly and full inspection trace!
Models/Supplier.cs: Supplier GMP/CSV/21 CFR Part 11 compliant vendor/partner model with compatibility aliases. Includes rich metadata, qualification lifecycle, digital signatures and hash chain.
Models/SupplierAudit.cs: Immutable audit trail entry for Supplier changes (21 CFR Part 11 / Annex 11).
Models/SupplierEntity.cs: Entity model for the `suppliers` table.
Models/SupplierRiskAudit.cs: Entity model for the `supplier_risk_audit` table.
Models/SystemEventLog.cs: Ultimate, ultra-robust GMP/CSV/Annex 11/21 CFR Part 11-compliant audit & event log. Tracks: who, what, when, where, how, old/new values, device, session, severity, AI/ML flags, compliance, chain-of-custody, rollback, digital signature, and more. Forensic, regulatory, and analytics ready!
Models/SystemParameter.cs: Entity model for the `system_parameters` table.
Models/Tag.cs: Entity model for the `tags` table.
Models/Tenant.cs: Entity model for the `tenants` table.
Models/TrainingLog.cs: TrainingLog Ultra-robust record of all user training, certification, and re-certification. Tracks training type, name, trainers, pass/fail, certification docs, expiration, re-training, audit trail, digital signatures, reminders, and forensics. Full GMP/CSV/21 CFR Part 11, HALMED, and ISO compliance for user competence tracking!
Models/TrainingRecord.cs: TrainingRecord Super ultra mega robust master record for employee training, GMP/CMMS compliance, and e-learning. Tracks all regulatory, technical, safety, SOP, and equipment trainings (internal/external, e-learning, on-site). Supports full linkage to users, roles, departments, trainers, training modules, SOPs, certificates, audit, and digital signatures. Forensic-ready: attendance, attachments, session history, skill matrix, expiry, re-training, escalation, and regulatory inspection. Extensible for e-learning (quiz, result, media), group/individual, workflow (approval, acknowledgment), multi-language, and mobile. This class also exposes a set of [NotMapped] bridge properties so older/newer ViewModels with slightly different names compile without any schema change (e.g. Title Name, TrainingType Type, etc.).
Models/User.cs: User Ultra-robust, forensic user entity for GMP, CSV, 21 CFR Part 11, GDPR, SSO, ITIL, and banking-grade compliance.
Models/UserActivityLog.cs: UserActivityLog Ultra-robust, forensic, AI-ready audit log for ALL user activities in the system. Covers action traceability, timestamp, session/device, digital signatures, entity mapping, and context for GMP, 21 CFR Part 11, HALMED, ISO, GDPR, and future AI/ML analytics.
Models/UserAudit.cs: Entity model for the `user_audit` table.
Models/UserEsignature.cs: Entity model for the `user_esignatures` table.
Models/UserLoginLog.cs: UserLoginLog Ultra-robust, forensic log for user login and logout activity. Covers full audit, device/session/IP tracing, 2FA/SSO/biometric status, geolocation, risk/AI fields, and security event mapping for GMP/CSV/21 CFR/ISO/IT/Banking.
Models/UserPermission.cs: UserPermission Maps a directly to a (RBAC override table). Ultra-robust: GMP, 21 CFR Part 11, CSV, forensics, escalation, digital signature, expiry, and device/session trace. Used for direct overrides (escalations, incident response, temporary access) that bypass role-based permission matrix. All grants, revokes, and changes should be logged in the audit trail for full legal and regulatory traceability. - Enables granular, temporary, or emergency user rights for incident, investigation, or legal reasons. - Ideal for highly regulated and forensic-grade environments. - Supports audit, rollback, SOD, and regulator queries.
Models/UserPermissionOverride.cs: UserPermissionOverride Individual, per-user permission grants or denials. Can override role-based permissions for escalation, emergencies, or fine-tuning. Full GMP/CSV audit (who, when, why, duration) Used for emergency escalation, incident, or per-user compliance exceptions Forensic chain: reason, granter, timestamp, expiry
Models/UserRoleAssignment.cs: UserRoleAssignment Maps a user to a role, supporting GMP/CSV/21 CFR/Annex 11 traceability. Multi-role, escalation, incident or temporary roles (expiry), digital signature, advanced audit. Use with RBAC/permission services for workflow, access, reporting.
Models/UserRoleHistory.cs: UserRoleHistory Ultra-robust audit trail of all user role changes. Tracks old/new role, who changed, when, reason, digital signatures, IP, device, and compliance metadata for GMP/CSV/21 CFR/ISO/IT/security.
Models/UserRoleMapping.cs: UserRoleMapping Represents the assignment of a to a (many-to-many, RBAC mapping table). Ultra-robust: supports full GMP, CSV, 21 CFR Part 11, Annex 11, forensics, digital signature, audit, expiry, and rollback/versioning.
Models/UserSubscription.cs: Entity model for the `user_subscriptions` table.
Models/UserTraining.cs: Entity model for the `user_training` table.
Models/UserWindowLayout.cs: Entity model for the `user_window_layouts` table.
Models/Validation.cs: Validation record (IQ/OQ/PQ/URS/DQ/FAT/SAT...).
Models/Warehouse.cs: Warehouse Ultra-robust model for all warehouse/storage locations, with full GMP/CSV/audit traceability. Tracks responsibility, access, audit, compliance, digital signatures, IoT readiness, legal requirements, forensics, and ML/AI support.
Models/WarehouseStock.cs: WarehouseStock The most robust inventory record for any part in any warehouse/location. Covers GMP, CAPA, traceability, full forensic audit, recalls, serialization, compliance, and more. Supports all regulatory/inspection demands (21 CFR, HALMED, EU GMP).
Models/WorkOrder.cs: WorkOrder Ultra-robust GMP-compliant maintenance, calibration, and inspection entity. All core and bonus fields for maximum compatibility and futureproofing Full forensic audit, rollback, AI/ML support, signatures, attachments, CAPA, incidents Compatible with all past/future UIs, reporting, and data migration needs
Models/WorkOrderAttachment.cs: WorkOrderAttachment Svi prilozi, dokumenti, slike, zapisi vezani za radni nalog. Svaki attachment je 100% auditiran, forenzi ki za ti en (hash, watermark, potpis, tip, verzija, rollback). Omogu uje upload i vezu na PDF, slike, video, audio, e-mail, XML, Excel... (GMP/CSV compliant). Podr ava sve: digitalne potpise, verifikacije, rollback, forenzi ke podatke, AI/ML/OCR, virus scan, i Cloud/IoT ready!
Models/WorkOrderAudit.cs: WorkOrderAudit GMP/21 CFR Part 11 compliant forensic record for all work order actions. Tracks every CREATE, UPDATE, DELETE, CLOSE, SIGN, EXPORT, and ROLLBACK action. Contains full forensic metadata (IP, device, session, timestamps) and cryptographic integrity mechanisms. Supports rollback, inspection, CAPA linkage, and audit trail compliance.
Models/WorkOrderChecklistItem.cs: Entity model for the `work_order_checklist_item` table.
Models/WorkOrderComment.cs: WorkOrderComment Comment or revision for a work order. Each comment/change is fully auditable: who, when, what, why (GMP, CAPA, inspection!). Used for work order history, CAPA revisions, inspection notes, status changes, and full timeline review.
Models/WorkOrderPart.cs: WorkOrderPart Represents a part used on a specific Work Order. Tracks quantities, units, pricing, CAPA/incident linkages, and forensics for GMP compliance. Fully audit-ready and future-proof for all advanced CMMS scenarios.
Models/WorkOrderSignature.cs: WorkOrderSignature Digital or manual signature for any work order step. Tracks user, signature type, digital hash, PIN, device, IP address, incident flag, notes, and more. Every signature is forensically traceable for GMP, CSV, and 21 CFR Part 11 inspection!
Models/WorkOrderStatusLog.cs: WorkOrderStatusLog History of all work order status changes. Forensic GMP record: who, when, from/to status, reason, incident flag, device, IP, audit note.

[Services]
Services/AttachmentService.cs: EF Core backed implementation for streaming attachment uploads. Files are persisted to the local AppData folder while metadata is stored in MySQL via inside a single transaction.
Services/AuditService.cs: AuditService Centralized GMP/21 CFR Part 11 compliant service for managing audit logs across all YasGMP modules. Tracks every user/system action with full forensic details: user, IP, device, timestamp, action, and context.
Services/AuthService.cs: AuthService GMP compliant central authentication/orchestration for YasGMP users. Performs credential verification using , logs every attempt via , and tracks minimal session/device forensics.
Services/BackgroundScheduler.cs: Background scheduler that runs small periodic checks in-app: - PPM generator: create work orders for due preventive plans - Calibration alerts: 30/14/7 days before next_due - PQ renewal alerts: before validation_sets.pq_renewal_due - Low stock alerts: parts where stock < min_stock_alert Notes: - Designed to be idempotent: uses external_ref markers to avoid duplicate WOs - Safe: catches all exceptions; never crashes UI - Lightweight: one pass on startup, then every 30 minutes
Services/CalibrationService.cs: CalibrationService Ultra robust, GMP & ISO 17025 compliant service for managing calibrations. Implements full CRUD, certificate management, digital signatures, audit trail, AI prediction, IoT, and CAPA integration. All actions are digitally signed and audit-logged.
Services/CAPAAuditService.cs: CapaAuditService Ultra robust, GMP/21 CFR Part 11 compliant CAPA audit service. Provides full digital signature, audit trail, advanced querying, and data integrity checks.
Services/CAPAService.cs: CAPAService Ultra robust, GMP-compliant master service for Corrective and Preventive Actions (CAPA). Full CRUD, multi-level workflow, AI-ready risk scoring, digital signatures, GMP/Annex 11/21 CFR Part 11 audit trail, notifications, escalation. Fully aligned with ISO 13485, ICH Q10, 21 CFR Part 11, EU GMP Annex 11. Bonus: Partial hooks for multi-signature, attachments, ML/AI analytics, forensic logging.
Services/CodeGeneratorService.cs: Simple code generator for creating unique machine identifiers.
Services/ComponentService.cs: ComponentService GMP/Annex 11 & 21 CFR Part 11 aligned service for managing machine components. Full CRUD with validation and digital signatures. All actions recorded via for complete traceability. Calls are aligned with Region 03 MACHINE / COMPONENT .
Services/Database/DbCommandWrapper.cs: Executes MySQL commands with telemetry hooks, parameter preparation, and slow-query tracking.
Services/Database/DbSlowQueryRegistry.cs: Maintains a rolling buffer of slow query signatures for diagnostics dashboards.
Services/Database/DbTelemetry.cs: Helper telemetry functions for database calls including sampling decisions and N+1 detection.
Services/Database/ShadowReplicator.cs: Optionally replays write commands against a shadow database to validate changes without impact.
Services/DatabaseService.Assets.Extensions.cs: DatabaseService extensions that load and persist asset (machine) records.
Services/DatabaseService.Attachments.Extensions.cs: DatabaseService extensions for attachment CRUD, linking, and metadata lookups.
Services/DatabaseService.Audit.Helpers.cs: Collision-free audit helpers for . These use unique method names to avoid extension overload clashes with other domains (e.g., Asset).
Services/DatabaseService.Audit.QueryExtensions.cs: Returns audit entries for a given entity table and record id. Prefers system_event_log and maps to AuditEntryDto.
Services/DatabaseService.Calibrations.Extensions.cs: DatabaseService extensions for calibration records, ranges, and scheduling.
Services/DatabaseService.Capa.Cases.Extensions.cs: DatabaseService extensions focused on CAPA cases and related data.
Services/DatabaseService.CapaExtensions.cs: DatabaseService extensions providing general CAPA queries and updates.
Services/DatabaseService.ChangeControls.Extensions.cs: Returns a lightweight list of change controls (id/code/title/status/date) suitable for selection dialogs. The query only pulls essential fields to keep the dialog fast even on large datasets.
Services/DatabaseService.ComponentExtensions.cs: Extension methods for component CRUD invoked from ComponentService/ViewModel.
Services/DatabaseService.ComponentOverloads.cs: Partial extension of providing **compatibility overloads** for component CRUD. These forward to robust, schema-tolerant implementations here, removing any dependency on other overloads that may not exist in the current build. Intentionally uses positional parameters to avoid CS1739 issues with named args. Logs extended-context actions via for traceability. Uses reflection-safe getters defined on to stay tolerant to model drift.
Services/DatabaseService.Components.QueryExtensions.cs: Returns all machine components.
Services/DatabaseService.ContractorInterventionExtensions.cs: Legacy shim for old contractor-intervention calls. Important: This class intentionally exposes non-extension methods with a Legacy suffix so they don t conflict with the real extension methods in .
Services/DatabaseService.ContractorInterventions.Extensions.cs: Extension methods for that provide CRUD, audit, rollback, and export helpers for Contractor Interventions. All methods are schema-tolerant: they only read columns that exist and quietly ignore missing ones to keep compatibility across databases.
Services/DatabaseService.cs: Core ADO.NET gateway for MySQL with parameterized helpers and canonical audit writer. Partial class; other functional areas live in separate extension/partial files.
Services/DatabaseService.DashboardExtensions.cs: Extension methods for dashboard widgets/charts/events used by DashboardViewModel.
Services/DatabaseService.DeviationAudit.Extensions.cs: DatabaseService extensions that read and write deviation audit trails.
Services/DatabaseService.Deviations.Extensions.cs: DatabaseService extensions for deviation entities and workflows.
Services/DatabaseService.DigitalSignatures.Extensions.cs: DatabaseService extensions covering digital signature persistence and retrieval.
Services/DatabaseService.Docs.cs: High level overview and usage guide for .
Services/DatabaseService.Documents.Extensions.cs: DatabaseService extensions for document control records and versions.
Services/DatabaseService.ExternalServicers.Extensions.cs: DatabaseService extensions for managing external service providers.
Services/DatabaseService.IncidentAudits.Extensions.cs: DatabaseService extensions that expose incident audit history.
Services/DatabaseService.IncidentReports.Extensions.cs: DatabaseService extensions dedicated to incident report fetch/save operations.
Services/DatabaseService.Incidents.Extensions.cs: DatabaseService extensions for core incident records and relations.
Services/DatabaseService.Inventory.Extensions.cs: DatabaseService extensions supporting inventory locations, stock, and movements.
Services/DatabaseService.MachineExtensions.cs: Strongly typed extension helpers for that route calls unambiguously to the Machine-typed overloads. Using these removes CS1503 ( cannot convert from 'Machine' to 'Asset' ) at call sites once and for all.
Services/DatabaseService.MachineLookups.Extensions.cs: DatabaseService extensions that expose lightweight machine reference lookups.
Services/DatabaseService.Machines.CoreExtensions.cs: DatabaseService extensions supplying primary machine CRUD and helper queries.
Services/DatabaseService.Migrations.cs: Small, surgical, runtime migrations we can apply safely at app start. Specifically: reconcile machines triggers so "code" is never NULL.
Services/DatabaseService.Notifications.Extensions.cs: DatabaseService extensions for notification templates, queues, and dispatch logs.
Services/DatabaseService.Ppm.Extensions.cs: DatabaseService extensions for preventive maintenance planning entities.
Services/DatabaseService.Qualifications.Extensions.cs: DatabaseService extensions that manage qualification records and lookups.
Services/DatabaseService.Rbac.CoreExtensions.cs: Extension helpers that light up RBAC features on while keeping older builds source-compatible.
Services/DatabaseService.Rbac.Extensions.cs: Extension methods that hang off to provide RBAC + user-management functionality used by ViewModels and services. Note: Core Users/Auth APIs such as , , , live in DatabaseService.Users.Extensions.cs to prevent CS0121 ambiguity.
Services/DatabaseService.RiskAssessments.Extensions.cs: DatabaseService extensions dealing with risk assessment records and schedules.
Services/DatabaseService.Rollback.Extensions.cs: DatabaseService extensions implementing rollback helpers for audited entities.
Services/DatabaseService.Scheduler.Extensions.cs: DatabaseService extensions for scheduled job definitions and execution logs.
Services/DatabaseService.Settings.Extensions.cs: DatabaseService extensions that read and update system settings.
Services/DatabaseService.Sop.Extensions.cs: Extension methods over for interacting with the legacy sop_documents and sop_document_log tables.
Services/DatabaseService.SpareParts.Extensions.cs: DatabaseService extensions for spare part catalog, pricing, and stock.
Services/DatabaseService.Suppliers.Extensions.cs: DatabaseService extensions interacting with supplier master data and audits.
Services/DatabaseService.SystemEvents.QueryExtensions.cs: DatabaseService extensions surfacing system event log queries for diagnostics.
Services/DatabaseService.TestHooks.cs: Lightweight testing hooks that allow unit/integration harnesses to intercept database operations without requiring a live MySQL server. These are internal so they remain invisible to production code.
Services/DatabaseService.TrainingRecords.Extensions.cs: Extension methods that hang off for Training Records. All methods are schema tolerant and perform best-effort mapping.
Services/DatabaseService.Transactions.cs: Executes the provided async delegate within a single MySQL transaction using the internal connection factory. Commits on success, rolls back on exception.
Services/DatabaseService.UserOps.Extensions.cs: Extension helpers for related to User operations. This file intentionally does not re-declare the canonical audit writer (LogUserAuditAsync) that already exists in . Doing so prevents CS0121 ambiguous call errors across view-models and services. What remains here are uniquely-named convenience wrappers that simply forward to the RBAC extensions. They re safe to use from views/view-models without risking signature collisions.
Services/DatabaseService.Users.Extensions.cs: DatabaseServiceUsersExtensions Users & Authentication helpers exposed as extension methods on . All SQL is parameterized and column access is schema-tolerant (older dumps won t break the app).
Services/DatabaseService.Validations.Extensions.cs: Validation CRUD + audit helpers for . Non-invasive: keeps your main DatabaseService.cs unchanged.
Services/DatabaseService.Warehouse.Extensions.cs: DatabaseService extensions working with warehouse definitions and stock levels.
Services/DatabaseService.WorkOrders.Extensions.cs: DatabaseService extensions for retrieving and persisting work order aggregates.
Services/DeviationAuditService.cs: DeviationAuditService GMP/21 CFR Part 11 compliant audit service for deviation records. Provides immutable audit logging, digital signatures and export helpers.
Services/DeviationService.cs: Service for managing Deviations / Non-Conformances (GMP-compliant). Handles CRUD, workflow, and writes unified audit log entries.
Services/Diagnostics/UiInstrumentationService.cs: UI Instrumentation attaches lightweight event handlers to common controls as pages appear and emits detailed traces (button taps, text edits, picker changes ). Sensitive text inputs are masked.
Services/DocumentControlLinkException.cs: Represents a recoverable failure when attempting to link a change control to a document.
Services/ExportService.cs: Exports calibrations and audit logs to Excel/PDF with audit logging. EPPlus v8 compatible (deprecation warnings suppressed locally). Null-safe for inputs and MAUI access. Writes fallback audit to DB if is not injected.
Services/ExternalServicerService.cs: ExternalServicerService Manages all external calibration service providers. Includes: CRUD for suppliers, integrations, contact management, and audit logging.
Services/IncidentAuditService.cs: IncidentAuditService robust service for managing incident audit records. Creates signed audit entries (SHA-256). Reads by Id, by Incident, and by User. 100% traceable (Annex 11 / 21 CFR Part 11 friendly).
Services/IncidentService.cs: IncidentService GMP compliant incident workflow + audit integration.
Services/Interfaces/IAttachmentService.cs: Contract for streaming attachment uploads, metadata retrieval and integrity lookups based on the stored SHA-256 hash.
Services/Interfaces/IAuthContext.cs: Minimal authentication context abstraction that exposes the currently authenticated user and associated forensic/session metadata required by audit logging.
Services/Interfaces/ICalibrationAuditService.cs: Interface for managing GMP-compliant calibration audit logs.
Services/Interfaces/ICalibrationService.cs: ICalibrationService Interface for robust GMP/ISO 17025 compliant calibration management services. Defines contract for calibration CRUD, certificates, audit trail, IoT, AI integration, and compliance logic.
Services/Interfaces/ICapaAuditService.cs: ICapaAuditService GMP/21 CFR Part 11 compliant interface for CAPA audit logging services. Defines contract for full traceability of CAPA actions (CREATE, UPDATE, CLOSE, DELETE, etc.). Supports forensic data, digital signatures, and advanced queries for inspections. Ensures every CAPA-related event is captured for regulatory compliance and analytics.
Services/Interfaces/ICAPAService.cs: ICAPAService Interface for GMP-compliant Corrective and Preventive Actions (CAPA) service. Defines all core CAPA operations: CRUD, workflow, audit, risk, digital signatures, notifications, and extensibility hooks.
Services/Interfaces/IDeviationAuditService.cs: IDeviationAuditService GMP/21 CFR Part 11 compliant interface for deviation audit logging and analytics. Defines contract for all traceability of deviation (non-conformance) actions: create, update, investigation, closure, CAPA, export, and more. Supports forensic data, digital signatures, AI/ML anomaly, advanced queries for regulatory/analytics use. Ensures every deviation event is logged for full compliance, audit, and business intelligence.
Services/Interfaces/IIncidentAuditService.cs: Interface for GMP-compliant audit service related to Incident management. Provides audit logging for all Incident-related actions.
Services/Interfaces/INotificationService.cs: INotificationService su elje za napredne notifikacije (email, SMS, MS Teams, Slack). Koristi se za eskalacije visoko-rizi nih CAPA slu ajeva i GMP upozorenja.
Services/Interfaces/IPpmAuditService.cs: IPpmAuditService Ultra-robust, GMP/21 CFR Part 11-compliant interface for logging all Preventive Maintenance Plan (PPM) audit actions. Supports immutable audit trails, digital signatures, role-based approvals, AI anomaly scoring, and full forensic traceability. Integrates with and supports batch, advanced filtering, regulatory export, rollback, and IoT-linked events.
Services/Interfaces/IRBACService.cs: IRBACService Interface for GMP/21CFR11-compliant Role-Based Access Control in YasGMP. Provides user/role/permission/assignment/delegation/approval workflow and enforcement checks.
Services/Interfaces/ISupplierAuditService.cs: Interface for GMP-compliant audit service for Supplier actions.
Services/Interfaces/IUserService.cs: Interface for robust, GMP-compliant user management including authentication, secure password hashing, CRUD, role/permission checks, digital signatures, two-factor, and audit logging.
Services/Interfaces/IValidationAuditService.cs: IValidationAuditService Interface defining the contract for GMP-compliant validation audit logging. Ensures traceability of every action related to validations (create, update, execute, delete). Supports full integration with digital signatures, forensic tracking, and regulatory compliance.
Services/Interfaces/IWorkOrderAuditService.cs: IWorkOrderAuditService GMP/21 CFR Part 11 compliant interface for handling forensic audit logs of work orders. Defines asynchronous CRUD operations and advanced filtering. Supports integrity validation, rollback inspection, and digital signature verification.
Services/IPlatformService.cs: IPlatformService Platform-specific accessors for device/system data used in forensic audit. Implement per platform (Windows, Android, iOS, MacCatalyst) as you prefer; all extended members below have safe default implementations so existing platform heads do not need changes to build.
Services/Logging/FileLogService.cs: High-performance, thread-safe rolling file logger. Logs JSON lines with keys: ts, level, src, action, msg, ctx (object), sessionId, userId.
Services/Logging/ILogService.cs: Contract for a structured, thread-safe application log service. Writes rolling text logs and exposes helpers for Info/Trace/Error entries.
Services/MachineService.cs: MachineService GMP compliant servis za upravljanje strojevima/opremom. Pru a CRUD, validaciju i digitalne potpise Svaka akcija se bilje i u (Annex 11 / 21 CFR Part 11) Sadr i kanonsku normalizaciju statusa (vidi )
Services/NotificationService.cs: NotificationService ultra robust servis za slanje GMP notifikacija. Podr ava Email (SMTP), SMS (API), Microsoft Teams, Slack webhook i push obavijesti. Skalabilno za budu u AI-driven eskalaciju i integraciju s ERP/QMS.
Services/PartService.cs: PartService GMP/CSV compliant servis za upravljanje rezervnim dijelovima (Parts). CRUD + upravljanje zalihama, digitalni potpisi, potpuna sljedivost preko AuditService-a. Svi unosi su forenzi ki potpisani i spremni za inspekciju (Annex 11 / 21 CFR Part 11).
Services/PreventiveMaintenancePlanService.cs: PreventiveMaintenancePlanService Ultra-robustan GMP-compliant servis za upravljanje planovima preventivnog odr avanja (PPM). Pru a CRUD operacije, validaciju, prediktivnu analitiku, podsjetnike i audit logove. Uskla eno s EU GMP, ISO 13485, 21 CFR Part 11 i Annex 11.
Services/PreventiveMaintenanceService.cs: PreventiveMaintenanceService ULTRA MEGA ROBUST GMP-compliant servis za upravljanje preventivnim odr avanjem (PPM). Pru a CRUD, validaciju, AI prediktivnu analitiku (hook), IoT integraciju i audit logove. Potpuno uskla eno s EU GMP, ISO 13485 i 21 CFR Part 11.
Services/QRCodeService.cs: Utility for generating QR code PNG images using QRCoder (no System.Drawing dependency).
Services/RBACService.cs: RBACService GMP / 21 CFR Part 11 compliant Role-Based Access Control (RBAC) for YasGMP. Manages users, roles, permissions, delegations, approval workflow and audit-grade security events. This implementation is aligned with the current schema and your signatures. It relies on DB helpers surfaced by DatabaseService and (for backward compatibility) the extension shims in DatabaseServiceRbacCoreExtensions to ensure builds succeed across schema versions.
Services/SafeNavigator.cs: SafeNavigator Centralized, exception-safe navigation + alerts for Shell-based apps. UI-thread marshalled calls to avoid COM exceptions on WinUI. All APIs are no-throw.
Services/SignalRService.cs: Real-time SignalR client for receiving new audit events instantly.
Services/SupplierAuditService.cs: Ultra Mega Robust GMP-compliant audit service for Supplier actions. Provides async audit record creation with digital signature, retry logic, and extensibility hooks. Fully documented with XML comments for IntelliSense and maintainability.
Services/SupplierService.cs: Provides CRUD and contract-management operations for entities, with GMP/ISO-compliant auditing and digital signatures.
Services/SystemEvent.Poco.cs: Lightweight POCO representing a row in system_event_log for view-layer consumption.
Services/Ui/AlertService.cs: Abstraction for prompting the user with alerts and confirmation dialogs on the UI thread.
Services/UserService.cs: UserService GMP/21 CFR Part 11 aligned user domain service.
Services/ValidationAudit.cs: ValidationAudit GMP/21 CFR Part 11 compliant audit log entry for validation activities. Tracks every action performed on a validation (CREATE, UPDATE, EXECUTE, DELETE, etc.). Supports forensic details, digital signatures, and full traceability.
Services/ValidationAuditService.cs: Validation audit logger (Annex 11 / 21 CFR Part 11 ready).
Services/ValidationService.cs: Validation domain service that encapsulates CRUD operations, signature handling, and audit logging for the aggregate.
Services/WindowManagerService.cs: Floating/resizable window manager (Windows/macOS) with persisted geometry per (user_id + page_type) in MySQL 8.0 and JSON file fallback.
Services/WorkOrderAuditService.cs: WorkOrderAuditService Ultra-robustan GMP-compliant servis za upravljanje audit zapisima radnih naloga. EF Core pristup, digitalni potpis i integritetni hash (SHA256). Uskla eno s 21 CFR Part 11 / EU GMP Annex 11 / ISO 13485.
Services/WorkOrderService.cs: WorkOrderService Ultra-robustan GMP-compliant servis za upravljanje radnim nalozima. Validacija, digitalni potpis, audit trail putem . Uskla eno s 21 CFR Part 11, EU GMP Annex 11 i ISO 13485.

[ViewModels]
ViewModels/AdminViewModel.cs: AdminViewModel ViewModel for the Admin console (Users, full RBAC editor, system diagnostics, and quick tools). Uses CommunityToolkit.MVVM for relay commands. Designed to be resilient, AOT/WinRT-safe, and auditable.
ViewModels/AssetViewModel.cs: AssetViewModel GMP-compliant ViewModel for asset/equipment lifecycle. Async CRUD, digital signatures, audit logging, rollback hooks, filtering, and export logging. All properties and events are nullability-correct and AOT-safe.
ViewModels/AttachmentViewModel.cs: AttachmentViewModel GMP/Annex 11/21 CFR Part 11 ViewModel for managing attachments. Provides filtering, CRUD helpers, approvals, export logging, and complete INotifyPropertyChanged support. All properties are nullability-annotated and event signatures are compatible with .
ViewModels/AuditDashboardViewModel.cs: AuditDashboardViewModel Manages the audit dashboard: real-time filtering, exports, and live SignalR updates. Uses explicit properties (AOT-safe) and ensures all UI interactions (alerts + collection updates) occur on the UI thread.
ViewModels/AuditLogViewModel.cs: AuditLogViewModel robust ViewModel for reading and exporting system_event_log entries (audit/system events). Data source: DatabaseService.GetSystemEventsAsync (system_event_log-backed extension method). Mapped properties of include: Id EventType (e.g., CREATE/UPDATE/DELETE/LOGIN/...) TableName RecordId UserId EventTime (DateTime) SourceIp DeviceInfo Description
ViewModels/CalibrationEditDialogViewModel.cs: CalibrationEditDialogViewModel ViewModel for adding/editing calibrations with rich validation, audit metadata, and dialog completion callbacks. Designed for GMP/Annex 11/21 CFR Part 11 compliant flows.
ViewModels/CalibrationsViewModel.cs: CalibrationsViewModel Master ViewModel for equipment calibration & qualification (GMP/Annex 11/21 CFR Part 11). Provides async loading, robust filtering, KPI counters, exports, dialog launchers, and auditing hooks. All UI-bound collection changes are marshaled to the UI thread.
ViewModels/CapaCaseViewModel.cs: CapaCaseViewModel ViewModel for Corrective and Preventive Action (CAPA) management. Provides async CRUD, approval, escalation, export, digital signatures, audit trail mapping, advanced filtering, and status color helpers in a GMP/Annex 11/21 CFR Part 11 context.
ViewModels/CapaEditDialogViewModel.cs: CapaEditDialogViewModel ViewModel for the CAPA Add/Edit dialog (MAUI). Manages a , validation rules, and save/cancel commands. All UI alerts are routed through to ensure UI-thread execution and avoid WinUI COMException 0x8001010E when invoked from background threads.
ViewModels/CapaViewModel.cs: CapaViewModel ViewModel for managing CAPA records in a GMP system. Provides display, add, edit, delete, and refresh behaviors through a dialog service abstraction. All UI interactions are marshaled to the UI thread to avoid WinUI COM exceptions.
ViewModels/CAPAWorkflowViewModel.cs: ViewModel for managing CAPA workflows (GMP/Annex 11/21 CFR Part 11 compliant). Handles load, create, update, approve, escalate, close, export, and advanced filtering.
ViewModels/ChangeControlViewModel.cs: ChangeControlViewModel Super ultra-robust ViewModel for GMP Change Control management. Includes multi-step change requests, risk/impact analysis, e-signatures, and audit logging.
ViewModels/ComponentViewModel.cs: ComponentViewModel Ultra-robust ViewModel for machine component management. Handles async CRUD, filtering, export (placeholder), and audit mapping with full null-safety.
ViewModels/ContractorInterventionViewModel.cs: Ultra-robust ViewModel for contractor/servicer interventions (outsourced maintenance, calibrations, etc). GMP/Annex 11/21 CFR Part 11 ready.
ViewModels/DashboardViewModel.cs: Super-ultra robust ViewModel for live KPI dashboard, analytics, and GMP compliance widgets. Live KPI/statistics: overdue, in-progress, critical, compliance, calibration, CAPA, assets, users. Drilldown, filtering, date ranges, chart data, notifications, smart health score, "GMP readiness". Extensible for any widget: IoT, machine status, ERP, audit trend, mobile, or compliance summary.
ViewModels/DeviationViewModel.cs: Ultra-robust ViewModel for Deviation handling, aligned to canonical methods in . This version only uses model members that exist in schema-tolerant Deviation parsing (Title/Severity/Status). It avoids calling DatabaseService methods that don't exist and relies on the canonical InsertOrUpdateDeviationAsync, DeleteDeviationAsync, SaveExportPrintLogAsync, and LogSystemEventAsync.
ViewModels/DigitalSignatureViewModel.cs: Robust ViewModel for digital/electronic signatures. Compliant with EU GMP Annex 11 & 21 CFR Part 11.
ViewModels/DocumentControlViewModel.cs: Robust ViewModel for GMP Document/SOP control. Lifecycle: create (initiate), revise, assign, approve, publish, expire/obsolete. Fully aligned with model (uses VersionNo, ReviewNotes, etc.). All service calls match your region 14 SOP / DOCUMENT CONTROL . Real type filter uses (e.g., "SOP", "Policy", etc.).
ViewModels/ExternalContractorViewModel.cs: ViewModel za upravljanje vanjskim izvo a ima/serviserima. Async CRUD Pametno filtriranje Izvoz (preko refleksije radi i kad metoda ima opcionalne parametre) Audit povijest (DTO) Sigurna obavijest o promjenama (INotifyPropertyChanged). Napomene kompatibilnosti: Model nema svojstvo Contact. Umjesto toga koristi se . Time se uklanja pogre ka CS1061. Filtriranje po Status/Rating/ServiceType je tolerantno: ako ta svojstva ne postoje u modelu, refleksija vra a null i filter i dalje radi. Reflektirani pozivi (RollbackExternalContractorAsync, ExportExternalContractorsAsync) podr avaju varijante potpisa s opcionalnim parametrima; kad su dostupni, proslje uju se userId, ip, deviceInfo, sessionId i .
ViewModels/IncidentReportViewModel.cs: IncidentReportViewModel MVVM ViewModel for end-to-end handling of Incident Reports: listing, workflow (initiate assign investigate approve close / escalate), filtering and export. Designed for GMP/Annex 11/21 CFR Part 11 friendly UI flows (audit trail is logged by ). Dependencies: data access methods (region 06A Incident Reports ). current user/session/device info for audit metadata.
ViewModels/InspectionViewModel.cs: ViewModel za Inspections omogu uje filtriranje po datumu, vrsti i rezultatu te izvoz sa etaka.
ViewModels/LoginViewModel.cs: LoginViewModel GMP-compliant login logic for YasGMP. Provides audit hooks (via services), anti-brute-force delay, device/IP forensics, 2FA flow, optional auth placeholders (PIN/Bio/SSO/QR), lock counters, language switch, and MAUI-friendly bindings. Includes a defensive login timeout so database connectivity issues cannot leave the UI spinning forever.
ViewModels/MachineViewModel.cs: MachineViewModel MVVM ViewModel for GMP-compliant machine/asset management. Async CRUD with digital signatures and complete audit trail Rollback/versioning via snapshots Advanced filtering (status + query) IoT/forensics context (IP, device info, session) propagated to the data layer
ViewModels/MainPageViewModel.cs: ViewModel za glavnu kontrolnu plo u (dashboard) MAUI aplikacije YasGMP. Sadr i komandne metode za otvaranje svih klju nih GMP modula.
ViewModels/NotificationViewModel.cs: NotificationViewModel Robust MVVM ViewModel for notifications, reminders, and escalations. GMP/Annex 11/21 CFR Part 11 ready: audit, acknowledgements, device/IP/session context Supports in-app, email, SMS, push; export; mute/snooze; batch operations Integrates with and for persistence and context
ViewModels/PartsStockViewModel.cs: PartsStockViewModel Centralised stock overview for all spare parts across warehouses. Provides quick-search by part name/code, warehouse filtering, threshold colour indicators and scaffolding for future replenishment/order orchestration.
ViewModels/PartViewModel.cs: PartViewModel ViewModel for spare part inventory management in a .NET MAUI MVVM application. Features: Async CRUD operations with audit-ready parameter flow (actor/session/IP/device). Digital signature generation for Part 11 traceability. Real-time filtering by search, category, and status. Export of filtered view. Safe, explicit implementation with full XML docs.
ViewModels/PpmViewModel.cs: PpmViewModel GMP/Annex 11-compliant ViewModel for Preventive Maintenance Plans (PPM). Robust observable binding, null-safety, error and status messaging Add/Edit dialog validation, attachment, audit, e-signature, future extensibility for regulatory/inspector use Idiot-proof, power-user proof, regulator-proof
ViewModels/QualificationViewModel.cs: QualificationViewModel ViewModel for equipment/component qualification management (IQ/OQ/PQ ). Features: Async CRUD with digital signatures and audit logging hooks. Rollback/versioning routing to the data layer. Advanced filtering by status and type with free-text search. Export of filtered qualifications. Robust with complete XML docs.
ViewModels/ReportViewModel.cs: ViewModel for generating, filtering and exporting audit/compliance reports. Supports dynamic report generation by date range, report type and linked entity metadata. Provides rich in-memory search/filtering and PDF/Excel export via helper utilities.
ViewModels/RiskAssessmentViewModel.cs: RiskAssessmentViewModel MVVM ViewModel for ICH Q9/GMP-compliant risk assessments. Async CRUD with full audit trail RPN (Severity Probability Detection) auto-scoring Approval / closure workflow commands with traceable forensics (IP, device, session) Advanced filtering and export
ViewModels/RollbackPreviewViewModel.cs: RollbackPreviewViewModel ViewModel for the Rollback Preview modal/dialog. Presents before/after JSON snapshots for an audited change. Verifies a digital signature (SHA-256) for forensic traceability, using constant-time comparison. Allows enqueuing a rollback request through with UI-thread safe notifications.
ViewModels/SchedulerViewModel.cs: ViewModel for periodic/recurring automated jobs (GMP/Annex 11/21 CFR Part 11 compliant). Provides: load, add, update, delete, acknowledge, execute, filter, export, and audit retrieval.
ViewModels/SettingsViewModel.cs: Robust ViewModel for system/app/user/security settings with audit & rollback (GMP/Annex 11/21 CFR Part 11).
ViewModels/SopViewModel.cs: View model that loads, filters, and manages SOP documents via .
ViewModels/SparePartViewModel.cs: Spare part management (GMP-ready): CRUD, audit, rollback, export.
ViewModels/SupplierContractorViewModel.cs: ViewModel za dobavlja e i vanjske izvo a e (servisere/contractore) s GMP podr kom. Omogu uje prikaz, CRUD operacije, filtriranje, povezivanje s dijelovima, povijest intervencija i export.
ViewModels/SupplierViewModel.cs: Ultra-robust ViewModel for supplier/vendor management (GMP/Annex 11/21 CFR Part 11 ready). Provides: load, add, update, delete, rollback, filtering, export, and audit retrieval.
ViewModels/TrainingRecordViewModel.cs: Super ultra-robust ViewModel for GMP Training Records management. GMP/Annex 11/21 CFR Part 11: session planning, multi-level approval, assignment, e-sign, reminders, expiry, audit. Links to users, SOPs, roles, effectiveness, attachments, analytics, dashboard, integration, future-proofed.
ViewModels/UserRolePermissionViewModel.cs: Super-ultra robust ViewModel for managing users, roles, and permissions. GMP/Annex 11/21 CFR Part 11: full audit, RBAC, approval chains, access history, SSO/LDAP ready. Supports user creation, lock/unlock, password/PIN reset, two-factor, detailed role/perm management. Granular entity/action permissions, templates, permission history, batch assignment, security audit.
ViewModels/UserViewModel.cs: ViewModel for robust user management with CRUD, filtering, and full audit trail. 21 CFR Part 11 / EU GMP Annex 11 ready.
ViewModels/ValidationViewModel.cs: Ultra-robust ViewModel for managing equipment/system validations. Distinct from qualification: covers process/software/CSV validation, protocol execution, etc. GMP/Annex 11/21 CFR Part 11 ready: async CRUD, full audit, digital signature, rollback/versioning, advanced filtering, protocol document links, and extensibility for future validation cycles.
ViewModels/WarehouseViewModel.cs: ViewModel za rad sa skladi tima prikaz, dodavanje i a uriranje skladi ta te vezanih stanja zaliha.
ViewModels/WorkOrderEditDialogViewModel.cs: ViewModel for robust, GMP/CSV/21 CFR Part 11-compliant editing/creation of Work Orders. Handles validation, rollback, digital signature, audit, forensics, attachments, escalation, and extensibility.
ViewModels/WorkOrderViewModel.cs: WorkOrderViewModel Ultra-robust MVVM for GMP/Annex 11/21 CFR Part 11 compliant Work Order Management. ? Async CRUD, full workflow, audit trail, digital signature, rollback/versioning ? Attachments, comments, asset/part/supplier linkage, timeline, escalation, dashboard stats ? Advanced filtering, KPI, extensibility, sign-off, mass actions, future AI/ML hooks

[Views]
Views/AdminPanelPage.xaml.cs: AdminPanelPage Central administration console with Users, RBAC, System, and Tools tabs. Resolves via DI and triggers an initial refresh on appear.
Views/AuditDashboardPage.xaml.cs: AuditDashboardPage Dashboard-flavored audit viewer that uses the same underlying as the main Audit page, but exposes bindings under the property names used in your XAML.
Views/AuditLogPage.xaml.cs: Audit Log dashboard page (filters + CSV/XLSX/PDF export).
Views/CalibrationsPage.xaml.cs: CalibrationsPage Master ekran za upravljanje kalibracijama. UI-thread sigurno u itavanje/prefiltriranje, bez CS8601 upozorenja (koalesciranjem mogu ih null vrijednosti). Svi UI pozivi (navigacija/alert) preko ili .
Views/CapaPage.xaml.cs: UI View for managing Corrective and Preventive Actions (CAPA). Binds to , responsible for displaying and controlling CAPA records.
Views/ComponentsPage.xaml.cs: ComponentsPage pregled, unos, ure ivanje i brisanje komponenti strojeva (tablica machine_components). Kolone: id, machine_id, code, name, type, sop_doc, status, install_date (+ soft delete polja).
Views/DashboardPage.xaml.cs: DashboardPage Main application dashboard after login. Adapts visible options according to the logged-in user's role.
Views/Debug/DebugDashboardPage.xaml.cs: Developer-facing diagnostics dashboard with links to self-tests and inspection tools.
Views/Debug/HealthPage.xaml.cs: Debug page that surfaces live health probes and environment metadata.
Views/Debug/LogViewerPage.xaml.cs: Debug log viewer page that lists collected app log files for download/inspection.
Views/Dialogs/CalibrationEditDialog.xaml.cs: Modal dialog for adding/editing a .
Views/Dialogs/CapaEditDialog.xaml.cs: Parameterless constructor required by XAML compiler and Shell. Note: CapaEditDialogViewModel requires a CapaCase? parameter; for a new entry we pass null.
Views/Dialogs/ComponentDocumentsDialog.xaml.cs: Modal dialog that lists and manages documents linked to a component.
Views/Dialogs/ComponentEditDialog.xaml.cs: Modal editor for maintaining component metadata inline.
Views/Dialogs/MachineComponentsDialog.xaml.cs: Dialog that displays components associated with a machine for quick navigation.
Views/Dialogs/MachineDocumentsDialog.xaml.cs: Dialog listing documents linked to a machine with download actions.
Views/Dialogs/MachineEditDialog.xaml.cs: Modal editor for machine/base asset properties.
Views/Dialogs/PartDetailDialog.xaml.cs: Dialog presenting detailed information about a part including suppliers and stock.
Views/Dialogs/StockChangeDialog.xaml.cs: Dialog that captures manual stock adjustments with confirmation.
Views/Dialogs/WorkOrderEditDialog.xaml.cs: Modal editor for creating and updating work orders with linked resources.
Views/DocumentControlPage.xaml.cs: Content page backing the document control workspace, binding to its ViewModel.
Views/ExternalServicersPage.xaml.cs: ExternalServicersPage pregled/unos/ure ivanje/brisanje vanjskih servisera, laboratorija i partnera. Implementira robusnu za titu od null referenci, UI-thread sigurne dijaloge i tolerantna je na promjene modela.
Views/LoginPage.xaml.cs: Login ekran za prijavu korisnika u YasGMP sustav. ViewModel se dohva a iz DI spremnika (nema parametarskogless ctor-a).
Views/MachinesPage.xaml.cs: Parameterless ctor for Shell/XAML. Resolves dependencies via ServiceLocator.
Views/MainPage.xaml.cs: Glavni dashboard (MainPage). Povezuje ViewModel i upravlja osnovnom logikom prikaza.
Views/PartsPage.xaml.cs: PartsPage pregled, unos, ure ivanje i brisanje rezervnih dijelova (Parts). Povezano s MySQL bazom preko . Svi UI dijalozi i a uriranja izvr avaju se na glavnoj niti putem kako bi se izbjegle WinUI COMException 0x8001010E situacije.
Views/PpmPage.xaml.cs: PpmPage GMP/Annex 11 compliant for Preventive Maintenance Plans (PPM). Provides a parameterless ctor (for XAML/Shell) and a DI-friendly ctor receiving . All dialogs and prompts are marshaled to the UI thread to avoid WinUI 0x8001010E issues.
Views/RollbackPreviewPage.xaml.cs: RollbackPreviewPage Presents a read-only JSON diff (old/new values) for a selected audit record and allows a controlled rollback **request** (GMP/CSV/21 CFR Part 11) for supported entities (currently: work_orders).
Views/SuppliersPage.xaml.cs: SuppliersPage pregled, unos, ure ivanje i brisanje dobavlja a/servisera/laboratorija. UI-thread safe (MainThread) izbjegnute WinUI 0x8001010E gre ke. Robusno dohva anje konekcijskog stringa iz . Sigurne konverzije NULL vrijednosti i parametri preko MySqlConnector. Potpuna XML dokumentacija za IntelliSense.
Views/UserRolePermissionPage.xaml.cs: YASTECH RBAC Manager UI hosting . Resolves the VM from DI on handler creation to avoid XAML/XFC issues.
Views/UsersPage.xaml.cs: Users admin page for managing users, roles, and permissions. ViewModels are resolved via the MAUI service provider and exposed as properties for XAML binding.
Views/ValidationPage.xaml.cs: ValidationPage GMP/Annex 11 compliant editor for validation records (IQ/OQ/PQ/URS/DQ/FAT/SAT). This page loads validations, supports add/update/delete flows via , and provides robust, thread-safe UI updates using helpers. Data sources are resolved via DI first, then AppConfig (connection string fallback). intentionally shadows and keeps it synchronized to avoid ambiguity. Auto-reselect and scroll-to-selected is supported via CollectionView.ScrollTo.
Views/WarehousePage.xaml.cs: Content page that exposes warehouse inventory dashboards and actions.
Views/WorkOrderEditDialog.xaml.cs: WorkOrderEditDialog YASTECH-themed modal ContentPage for creating or editing a under GMP/CSV requirements. The page is fully data-bound to an instance of that exposes the target instance, validation, and SaveCommand/CancelCommand. Consumers should open the dialog as a modal page, and subscribe to for a strongly-typed outcome and (optionally) the final snapshot. var vm = serviceProvider.GetRequiredService(); var dlg = new WorkOrderEditDialog(vm); dlg.DialogResult += (saved, wo) => { /* handle result */ }; await Navigation.PushModalAsync(dlg);
Views/WorkOrdersPage.xaml.cs: WorkOrdersPage YASTECH-themed overview of work orders with filters, KPI tiles, and action commands. The page binds to a ViewModel resolved from DI. By default it looks for YasGMP.ViewModels.WorkOrderViewModel and YasGMP.ViewModels.WorkOrdersViewModel (both supported).
