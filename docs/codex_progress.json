{
  "branch": "feature/wpf-shell-full-yasgmp",
  "sdk": {
    "wpfTarget": "net9.0-windows10.0.19041.0",
    "detected": false,
    "notes": [
      "`dotnet` CLI missing from PATH; cannot enumerate installed SDKs.",
      "Run scripts/bootstrap-dotnet9.ps1 on a Windows host to install/verify .NET 9 + Windows SDK",
      "2025-09-25: Batch 0 retry confirmed `dotnet --info` still returns 'command not found'.",
      "2025-09-26: Batch 0 retry confirmed `dotnet --info` still returns 'command not found'.",
      "2025-09-27: dotnet --info/dotnet restore/dotnet build all continue to fail with 'command not found'.",
      "2025-09-28: Batch 0 retry again hit 'command not found' for dotnet --info/restore/build in container.",
      "2025-10-06: dotnet --info/restore/build retried; CLI remains unavailable in the container so commands exit with 'command not found'.",
      "2025-10-09: dotnet --info still fails with 'command not found' inside the container; restore/build remain blocked.",
      "2025-10-11: dotnet --version/restore/build attempts still hit 'command not found' inside the container.",
      "2025-10-14: dotnet --info/restore/build attempted again; CLI remains unavailable in container.",
      "2025-10-17: dotnet --info/restore/build retried; CLI still missing so commands exit with 'command not found'.",
      "2025-10-23: dotnet --info/restore/build attempted again; CLI remains unavailable in the container.",
      "2025-10-27: dotnet --info/restore/build/test retried; CLI still missing so commands exit with 'command not found'.",
      "2025-10-30: dotnet --info/restore/build retried; CLI still absent in container so commands fail with 'command not found'.",
      "2025-11-01: dotnet --info/restore/build retried; CLI remains unavailable in the container so commands fail with 'command not found'.",
      "2025-11-02: dotnet restore/build retried; CLI remains unavailable so commands exit with 'command not found'.",
      "2025-11-07: dotnet restore retried; CLI still missing in container so all dotnet commands fail with 'command not found'.",
      "2025-11-08: dotnet restore/build retried; CLI remains unavailable in the container so commands exit with 'command not found'.",
      "2025-11-09: dotnet restore/build/test retried; CLI still missing in the container so all dotnet commands fail with 'command not found'.",
      "2025-11-17: dotnet restore/build retried; CLI still missing in container so commands exit with 'command not found'.",
      "2025-11-18: dotnet restore/build retried; CLI remains unavailable in the container so commands exit with 'command not found'.",
      "2025-11-19: dotnet restore/build retried; CLI remains unavailable in the container so commands exit with 'command not found'.",
      "2025-11-30: dotnet restore retried; CLI still missing so commands exit with \"command not found\".",
      "2025-12-04: dotnet --info/restore/build retried; CLI remains unavailable in the container so commands exit with 'command not found'.",
      "2025-12-07: dotnet restore/build attempted again for yasgmp.sln; CLI still missing in container so commands exit with 'command not found'.",
      "2025-12-08: dotnet --version/restore/build retried; CLI still missing in container so commands exit with 'command not found'.",
      "2025-12-13: dotnet restore yasgmp.sln retried; CLI remains unavailable so the command fails with 'command not found'.",
      "2025-12-16: dotnet restore/build retried; CLI remains unavailable in the container so commands exit with 'command not found'.",
      "2025-12-18: dotnet restore yasgmp.sln retried; CLI still missing in the container so the command fails with 'command not found'.",
      "2025-12-20: dotnet restore/build retried for MAUI + WPF projects; CLI remains unavailable so commands exit with 'command not found'.",
      "2025-12-23: dotnet restore/build retried for yasgmp.sln and YasGMP.Wpf; CLI remains unavailable so commands exit with 'command not found'.",
      "2025-12-24: dotnet restore yasgmp.sln and dotnet build (YasGMP.Wpf.csproj, yasgmp.csproj net9.0-windows10.0.19041.0) retried; CLI still missing so each command exits with 'command not found'.",
      "2025-12-26: dotnet --info/restore/build retried; CLI remains unavailable in the container so commands exit with 'command not found'.",
      "2025-12-28: dotnet restore/build/run for WPF + MAUI targets retried after wiring new Quality & Compliance ribbon/backstage buttons; CLI is still missing so each command exits with 'command not found'.",
      "2025-12-31: dotnet restore/build retried for yasgmp.sln, YasGMP.Wpf, and yasgmp.csproj; CLI remains unavailable so every command exits with 'command not found'.",
      "2026-01-07: dotnet --info/restore/build retried for yasgmp.sln and YasGMP.Wpf; CLI remains unavailable in the container so each command exits with 'command not found'.",
      "2026-01-08: dotnet restore/build retried for yasgmp.sln; CLI remains unavailable so each command exits with 'command not found'.",
      "2026-01-11: dotnet restore/build retried for yasgmp.sln and platform-specific targets; CLI remains unavailable in the container so each command fails with \"command not found\".",
      "2026-01-12: dotnet restore/build/test attempted for yasgmp.sln, YasGMP.Wpf, and MAUI net9.0-windows targets; CLI still missing so every command exits with 'command not found'.",
      "2026-01-13: dotnet restore retried for yasgmp.sln after API audit filter refresh updates; CLI remains unavailable so the command exits with 'command not found'.",
      "2026-01-28: dotnet restore yasgmp.sln retried; CLI remains unavailable in the container so the command exits with 'command not found'.",
      "2025-10-07: dotnet restore yasgmp.sln retried for CRUD adapter documentation; CLI remains unavailable so the command exits with 'command not found'."
    ]
  },
  "batches": [
    {
      "id": "B0",
      "name": "Environment stabilization",
      "status": "blocked",
      "notes": [
        "Awaiting .NET SDK installation"
      ]
    },
    {
      "id": "B1",
      "name": "Shell foundation",
      "status": "pending"
    },
    {
      "id": "B2",
      "name": "Cross-cutting services",
      "status": "in-progress",
      "notes": [
        "ComponentService persistence now threads adapter-supplied signature hash/IP/device/session context through ComponentSaveContext and DatabaseService.ComponentOverloads so machine_components keeps the adapter hash intact; CLI validation still blocked.",
        "Change Control persistence now stores digital signature hash/IP/session/device metadata via new columns and service plumbing; schema + CRUD helpers updated while CLI validation remains blocked.",
        "Electronic signature capture now enforced across Assets, Work Orders, Calibration, Suppliers, and Parts; WPF adapters and AppCore services propagate optional signature metadata through to persistence with legacy hash fallback when metadata is absent; audit surfacing still pending until SDK access returns",
        "Audit logging now includes signature id/hash metadata with graceful fallbacks and unit coverage for both modern and legacy schemas.",
        "DataDrivenModuleDocumentViewModel exposes a shared AuditService hook and Work Orders now logs CREATE/UPDATE audit entries with signature, user, IP, device, and session context immediately after successful persistence.",
        "WPF test harness now uses a RecordingAuditService spy so Work Orders save and attachment flows assert audit payloads with signer context while the dotnet CLI remains unavailable.",
        "Module save flows now rehydrate adapter-provided signature ids/hashes before optional persistence, skipping redundant dialog writes when a signature already exists while preserving current UX messaging.",
        "ValidationService now keeps adapter-supplied validation signature hashes intact on create/update and only regenerates when explicitly forced (e.g., MarkExecuted), with new unit coverage confirming the stored hash matches the adapter payload.",
        "WPF ValidationCrudServiceAdapter test now asserts signature hash/IP/session context persist alongside CrudSaveResult metadata, and validation CRUD fakes retain those fields for downstream assertions while CLI validation stays blocked.",
        "Test signature dialog now records capture results and persist calls, CRUD fakes expose configurable signature id providers, and module regression tests assert adapter-assigned ids skip redundant persistence while CLI validation remains blocked.",
        "2026-01-28: CFL dialog service XML docs now instruct modules on dispatcher usage, localization sourcing, and audit appenders so Golden Arrow flows capture selections even while CLI access is blocked.",
        "2026-01-29: Shell interaction/navigation service XML documentation now outlines ribbon/Golden Arrow usage, dispatcher marshalling expectations, and cross-references IModuleRegistry metadata so audit and inspector updates stay aligned while CLI access remains blocked.",
        "2026-01-30: Electronic signature dialog service/interface XML documentation now details dispatcher usage, localization hooks, audit de-duplication, and cancellation guidance so WPF stays aligned with MAUI while CLI access remains blocked.",
        "2025-10-07: CRUD service adapters/interfaces now document WPF module to MAUI service call flow, dispatcher marshalling, localization, and audit expectations; dotnet CLI remains missing so validation is limited to static analysis."
      ]
    },
    {
      "id": "B3",
      "name": "Editor framework",
      "status": "pending"
    }
  ],
  "modules": {
    "Assets": "done",
    "Components": "done",
    "Parts": "done",
    "Warehouses": "done",
    "WorkOrders": "done",
    "Calibration": "done",
    "Incidents": "done",
    "CAPA": "done",
    "ChangeControl": "done",
    "Validations": "done",
    "ScheduledJobs": "done",
    "UsersRoles": "done",
    "Suppliers": "done",
    "ExternalServicers": "done",
    "Audit": "in-progress",
    "ApiAudit": "in-progress",
    "AuditDashboard": "in-progress",
    "Attachments": "done",
    "Dashboard": "pending",
    "Reports": "pending",
    "SettingsAdmin": "pending"
  },
  "lastCommitSummary": "docs: expand CRUD adapter XML guidance",
  "notes": [
    "2025-10-02: WPF AuditDashboardDocument view mirrors the MAUI filters/exports with busy overlay + App.xaml DataTemplate wiring while dotnet restore/build remain blocked by the missing CLI.",
    "2026-02-01: WPF dialog, file picker, platform, and dispatcher services now document MAUI parity limits, localization responsibilities, and migration guidance; dotnet restore/build/smoke still blocked without the CLI.",
    "2026-01-22: ModuleToolbarCommand XML documentation now captures localization-driven captions/tooltips/automation metadata, SAP B1 form mode enablement, and Golden Arrow identifiers while dotnet restore/build/smoke remain blocked by the missing CLI.",
    "2026-01-04: WPF host now resolves AttachmentsModuleViewModel via an explicit service provider factory so DatabaseService, attachment workflow, file picker, signature dialog, audit, CFL, shell interaction, and navigation services align with the current constructor order; dotnet restore/build remain blocked by the missing CLI.",
    "2026-01-05: Attachments module view now introduces a two-column layout with a SelectedAttachment inspector and staged upload editor so metadata and pending files are visible before persistence; dotnet restore/build remain blocked by the missing CLI.",
    "2026-01-06: Attachments editor pane now surfaces HasAttachmentWorkflow-gated upload/download/delete buttons with SelectedAttachment command parameters so tooling hides when the service stack is offline; dotnet restore/build remain blocked by the missing CLI.",
    "2026-01-07: Attachments editor now shows a busy overlay tied to IsBusy, lists validation messages inline, and styles the status text to highlight validation errors while dotnet restore/build remain blocked by the missing CLI.",
    "2026-01-08: Attachments module now finalizes the split-view layout with synchronized list/inspector panes, completes CRUD flows with enforced e-signature prompts, and applies retention handling for staged and persisted files; dotnet restore/build remain blocked by the missing CLI.",
    "2026-01-09: Updated WPF mapping documentation to capture the attachments split view, inspector/editor workflow, CRUD/signature enforcement, and retention handling now available in the shell; dotnet restore/build remain blocked by the missing CLI.",
    "2026-01-15: Documented the API Audit Trail parity row in docs/WPF_MAPPING.md, highlighting masked API key metadata, dynamic action filters, and busy/error states so Quality & Compliance tracking matches the WPF implementation while dotnet restore/build remain blocked by the missing CLI.",
    "2025-12-23: WPF host now constructs AuditLogDocumentViewModel via DI so AuditService, ExportService, and the DatabaseService-backed AuditLogViewModel flow into the shell toolbar; dotnet restore/build remain blocked by the missing CLI.",
    "2025-12-25: Added DI registration for AuditDashboardViewModel so the WPF audit dashboard/log documents resolve consistently alongside ModuleRegistry/DataTemplate wiring; dotnet restore/build remain blocked by the missing CLI.",
    "2025-12-22: AuditLogViewModel now resolves through a DI factory so the shared DatabaseService reaches the WPF audit adapter when modules open; module registry mapping stays on the new document while dotnet restore/build remain blocked by the missing CLI.",
    "2025-12-26: Window menu now surfaces Audit, Audit Dashboard, and API Audit commands so the shell can launch the compliance modules directly; dotnet restore/build/smoke remain blocked without the CLI.",
    "2025-12-28: Ribbon Home tab and backstage now include a Quality & Compliance group exposing Audit Trail, Audit Dashboard, and API Audit buttons wired to the shared window commands; dotnet restore/build/run remain blocked because the CLI is unavailable in the container.",
    "2025-12-29: Stub shell services promoted into TestDoubles and new AuditDashboardDocumentViewModel tests cover load/export overrides for MAUI and fallback paths while dotnet restore/build/smoke remain blocked by the missing CLI.",
    "2025-12-29: Attachments module now inherits ModuleDocumentViewModel, stores DI-provided services for the B1 toolbar workflow, and seeds design-time records so the shell and design tools align while dotnet restore/build/smoke remain blocked without the CLI.",
    "2025-12-30: Attachments module now tracks attachment rows, staged uploads, and selected attachment state while updating the inspector with attachment-focused context; dotnet restore/build/smoke remain blocked without the CLI.",
    "2025-12-31: Attachments module now materializes ModuleRecord inspector fields from DatabaseService results with entity/table, linked record id, SHA-256, and status metadata while mirroring the schema in design-time data; dotnet restore/build remain blocked by the missing CLI.",
    "2026-01-02: Attachments module toolbar now exposes upload/download/delete commands that compute SHA-256 hashes, skip duplicates, stream downloads, and persist via a proxy-backed DatabaseService.AddAttachmentAsync path without re-uploading while dotnet restore/build/smoke remain blocked without the CLI.",
    "2025-12-30: AuditLogDocumentViewModel tests now reuse the shared shell stubs with a configurable MAUI AuditLogViewModel double to validate refresh/filter/export busy lifecycles, status propagation, and fallback error messaging while dotnet restore/build/smoke remain blocked by the missing CLI.",
    "2025-12-21: Audit log document now wraps the MAUI AuditLogViewModel with synchronized records, exports, and status propagation while the module registry targets the new adapter; dotnet restore/build remain blocked by the missing CLI.",
    "2025-12-16: Audit module unit tests now override ExportService calls to exercise PDF export success and failure paths, verifying busy state transitions and status/error messaging while dotnet restore/build remain blocked by the missing CLI.",
    "2025-12-20: WPF shell now exposes an Audit Dashboard document that reuses the MAUI dashboard filters/exports, updates inspector records when SignalR pushes arrive, and adds module registry wiring while dotnet restore/build remain blocked by the missing CLI.",
    "2025-12-17: API audit module added to the WPF shell with masked inspector payloads, new AuditService.GetApiAuditEntriesAsync helper, module registry/smoke updates, and dedicated unit coverage; dotnet restore/build/test still fail because the CLI is unavailable.",
    "2025-12-19: API audit module tests now assert reversed/null date filters normalize to swapped ranges and end-of-day query bounds via TestApiAuditModuleViewModel captures; dotnet restore/build remain blocked by the missing CLI.",
    "2025-12-18: Audit module Excel export tests now cover success and exception flows via TestAuditModuleViewModel overrides, asserting status messaging, busy lifecycle, and command availability without invoking real exports; dotnet restore continues to fail with 'command not found'.",
    "2025-12-15: Audit module WPF view adds Export PDF/Excel buttons that respect IsBusy and introduces a progress overlay so busy/export errors mirror the MAUI experience while the dotnet CLI remains unavailable for restore/build/smoke.",
    "2025-12-14: Audit module now retains the most recent audit query payload plus filter summary for export reuse, added guarded AsyncRelayCommand PDF/Excel exports, and registered ExportService so DI resolves the new constructor; dotnet CLI remains unavailable so restore/build/test stay blocked.",
    "2025-12-07: External Servicer CRUD fake now mirrors other module doubles by capturing saved snapshots with contexts, cloning entities for assertions, and clearing deleted entries; CrudSaveResult coverage confirms metadata still flows from the provided context while dotnet CLI access remains blocked for restore/build/smoke.",
    "2025-12-06: DatabaseService.Users insert/update now persist digital_signature/last_change_signature with IP/device/session metadata, and new UserCrudServiceAdapter tests verify the context flows end-to-end while the dotnet CLI remains unavailable for restore/build/test.",
    "2025-12-05: Added WPF ValidationCrudServiceAdapter test to confirm signature hash/IP/session metadata persists and matches returned CrudSaveResult while validation CRUD fakes retain the fields; dotnet CLI remains unavailable for restore/build/test.",
    "2025-12-04: Validation persistence now writes source_ip/session_id columns and ValidationService tests assert metadata pass-through while dotnet CLI access remains unavailable for restore/build/test.",
    "2025-12-03: ValidationService now preserves adapter-supplied validation signature hashes during create/update and forces regeneration only when executing a validation; unit tests cover the persistence path while dotnet CLI access remains unavailable for restore/build/test.",
    "2025-12-02: ComponentService and DatabaseService.ComponentOverloads now persist adapter-supplied component signature hash/IP/device/session metadata with new unit coverage verifying the stored hash matches the adapter payload; dotnet CLI still unavailable for restore/build/smoke runs.",
    "2025-12-01: dotnet restore/build/smoke harness attempts blocked by missing CLI while validating Change Control signature metadata persistence; rerun once .NET 9 SDK installed.",
    "Need to restore/install dotnet 9 SDK to proceed with Batch 0 validation steps.",
    "tests/fixtures/hello.txt seeded for smoke harness bootstrap",
    "Work Orders editor now surfaces CRUD via adapter with attachments and mandatory e-signature capture; audit surfacing still pending Batch B2",
    "Calibration editor now exposes CRUD with supplier/component lookups, attachment uploads, and mandatory e-signature capture; audit work remains queued for Batch B2",
    "Assets module now uploads attachments via AttachmentService from the WPF shell and enforces electronic signatures before save; audit surfacing remains pending.",
    "2025-09-24 & 2025-09-26: Batch 0 retries confirmed dotnet CLI still unavailable (`dotnet --info/restore/build` all fail). Awaiting host SDK install before expanding CRUD refactors to Assets module.",
    "2025-09-25: Batch 0 retry again hit 'command not found' for dotnet --info/restore/build in container.",
    "2025-09-27: Batch 0 still blocked in container; dotnet CLI absent so restore/build/smoke cannot execute.",
    "2025-09-29: dotnet --info/restore/build retried; container still lacks CLI so Batch 0 remains blocked.",
    "2025-09-27: Components module reached CRUD parity through ComponentService with machine lookups; cross-cutting attachments/e-signature work scheduled under Batch B2.",
    "2025-09-27: Components module exposes B1-mode editor using ComponentService and machine lookups; attachments/e-signature follow-ups remain.",
    "2025-09-29: WPF mapping updated for Components; adapters documented while awaiting SDK to finish Batch B2 attachment/signature tasks.",
    "2025-09-30: Parts & Warehouse editors now include stock health messaging, warehouse summaries, and inventory ledger previews while retaining attachment support; e-signature capture has been added while audit surfacing will follow once .NET 9 SDK is accessible.",
    "2025-09-30: Incidents module now runs through IIncidentCrudService with mode-aware editor and attachment uploads; CAPA/Change Control remain pending.",
    "2025-10-01: Incidents editor exposes CFL-driven linking to work orders and CAPA cases with unit coverage for the new mode transitions.",
    "2025-10-02: CAPA module now persists via ICapaCrudService with component lookups, attachments, and unit coverage for save/attachment flows; Change Control still pending.",
    "2025-10-03: Change Control module now uses IChangeControlCrudService with a mode-aware editor, CFL picker, and attachment workflow; signature/audit prompts queued for Batch B2.",
    "2025-10-04: Validations module now reuses ValidationService through a new adapter with machine/component lookups, CFL picker, and attachment uploads; signature/audit surfacing slated for Batch B2 once .NET 9 SDK is available.",
    "2025-10-05: Scheduled Jobs module now exposes a CRUD-capable editor with execute/acknowledge commands, CFL hooks, and attachment uploads via the new IScheduledJobCrudService adapter; signature/audit prompts remain queued for Batch B2.",
    "2025-10-06: Security (Users/Roles) module now leverages IUserCrudService with RBAC role assignment management, CFL, and unit coverage; signature/audit surfacing will follow under Batch B2.",
    "2025-10-07: Suppliers module now uses ISupplierCrudService with attachments, CFL, mode-aware editor coverage, and mandatory e-signature capture; External Servicers remain a follow-up task.",
    "2025-10-08: External Servicers module now has a dedicated adapter, WPF document, CFL picker, golden-arrow navigation, and unit/smoke harness coverage.",
    "2025-10-09: External Servicer database extensions now drive CRUD (list/load/save/delete) with unit tests asserting `external_contractors` access.",
    "2025-10-10: Audit module now surfaces AuditService-backed filtering with richer inspector columns and WPF coverage; dotnet --info still fails with 'command not found'.",
    "2025-10-11: B1 base now formats loaded status via a virtual hook (FormatLoadedStatus) so Audit module can emit singular/plural/no-results messaging validated by unit tests.",
    "2025-10-12: Audit module now normalizes filter dates to inclusive ranges and defaults missing end dates; WPF tests assert the end-of-day conversion.",
    "2025-10-13: WPF host now keeps a single AuditService singleton aligned with MAUI; attempted dotnet restore/build still fail because the CLI is unavailable in the container.",
    "2025-10-14: dotnet restore/build retried for MAUI + WPF targets; CLI still missing so commands exit with 'command not found'.",
    "2025-10-15: Audit filters now clamp start/end days, auto-swap reversed ranges, and include WPF coverage for date-only end-of-day normalization.",
    "2025-10-16: B1 refresh now calls FormatLoadedStatus with the loaded count so Audit overrides can emit zero/singular/plural strings; unit tests assert the formatted audit status messages.",
    "2025-10-17: Audit module date filters now accept null DatePicker inputs, default missing end dates to the start date, and expand the end boundary to the final tick of the day; WPF unit tests verify LastToFilter receives the end-of-day timestamp.",
    "2025-10-18: WPF host now routes AuditService registration through YasGmpCoreServiceGuards to strip transient duplicates before adding the singleton; DI tests assert duplicate descriptors are removed and the singleton instance is reused.",
    "2025-10-19: B1 refresh status messaging now reads from the post-apply record count so overrides (Audit) emit accurate zero/singular/plural strings validated by unit coverage.",
    "2025-10-20: Audit module date normalization now centralizes range clamping so null DatePicker values fall back gracefully and date-only end bounds reach the service at the day's final tick with new WPF unit coverage.",
    "2025-10-21: Confirmed singleton AuditService registration remains in the WPF host and added DI coverage to ensure AuditModuleViewModel resolves after the cleanup.",
    "2025-10-22: B1 FormatLoadedStatus now clamps negative counts while the Audit override maps <=0 results to the no-audit message; WPF tests continue to assert the singular/plural/zero wording through RefreshAsync.",
    "2025-10-23: Audit module now normalizes nullable DatePicker inputs (including DateTimeKind.Unspecified) before querying AuditService, persists sanitized filter values, and remains blocked on dotnet restore/build due to the missing CLI.",
    "2025-10-24: WPF host now registers AuditService as a singleton directly (removing the transient duplicate) and DI tests confirm AuditModuleViewModel resolves; dotnet restore/build retries still fail with 'command not found'.",
    "2025-10-25: Audit module now tracks HasResults/HasError flags, applies error highlighting in the view, and renames the inspector reason column; dotnet CLI remains unavailable so restore/build stay blocked.",
    "2025-10-26: Audit filters now preserve a user-specified end date even when it predates the start picker by clamping the service query's start bound to that day and adding WPF regression coverage for the upper-bound behavior.",
    "2025-10-27: Audit filters now clamp the lower bound when the upper bound is moved earlier while keeping the selected end date intact; new WPF regression test ensures persisted filters and query arguments align.",
    "2025-10-28: Audit filters now retain the user's To picker while reordering the query bounds if the upper date precedes the lower; tests cover both existing From overrides and default-from scenarios.",
    "2025-11-11: CRUD context factories in the WPF services now capture signature id/hash/method/status/note and surface an overload that accepts `ElectronicSignatureDialogResult`, enabling modules to forward dialog metadata alongside user/IP/session defaults before hitting adapters.",
    "2025-11-12: Machine, Work Order, Calibration, Supplier, and Part WPF adapters now apply captured signature hash/method/status/note to entities before persistence and include the metadata in supplier/part audit logging while awaiting core signature API expansion.",
    "2025-10-29: Audit module now orders inverted date ranges by min/max while preserving the user-selected To value; WPF tests assert the later bound reaches AuditService at end-of-day.",
    "2025-10-30: WPF modules now route uploads through AttachmentWorkflowService so dedup, retention, and encryption follow the MAUI conventions; DI registration updated and commands now surface dedup status messaging.",
    "2025-10-31: WPF shell adds an IElectronicSignatureDialogService that drives the signature dialog, captures the operator password/PIN with GMP reason text, and persists through DatabaseServiceDigitalSignaturesExtensions before dismissing.",
    "2025-11-01: Assets, Work Orders, Calibration, Suppliers, and Parts now require electronic signature capture before CRUD calls, propagate the resulting digital signature hash, and surface cancellation/failure states through StatusMessage.",
    "2025-11-02: Test suite moved the electronic signature dialog fake under TestDoubles, added queueable results/exception hooks, and updated module tests to inject the dependency explicitly.",
    "2025-11-03: Extended electronic signature gating and metadata propagation to Components, Warehouses, Incidents, Validations, CAPA, Change Control, External Servicers, Scheduled Jobs, and Security modules with refreshed unit coverage (audit surfacing still pending SDK access).",
    "2025-11-04: Machines save workflow now stamps last-modified metadata post signature capture so downstream persistence receives the enriched payload while SDK blockers remain.",
    "2025-11-05: Electronic signature capture now decouples persistence via PersistSignatureAsync so modules can persist business entities first, update signature record ids, and surface clear retry messaging when digital signature storage fails.",
    "2025-11-06: Assets module now derives from SignatureAwareEditor, capturing signer/session/IP metadata and exposing it via the shared SignatureMetadataView control after each save while SDK tooling remains unavailable.",
    "2025-11-07: Added B1FormDocumentViewModel cancellation regression test ensuring status text, dirty flag, and form mode remain intact when OnSaveAsync returns false; restore/build remain blocked pending dotnet CLI access.",
    "2025-11-08: Replaced the legacy FakeElectronicSignatureDialogService with the queueable TestElectronicSignatureDialogService and updated module tests to consume the new helper while leaving an obsolete alias for backwards compatibility.",
    "2025-11-09: Updated Change Control, External Servicers, Warehouse, Scheduling, and Incidents WPF tests to pass TestElectronicSignatureDialogService in the production constructor slot; test execution still blocked until dotnet CLI is available.",
    "2025-11-10: Added signature cancellation/exception coverage across Assets, Components, and Work Orders WPF tests to ensure edit mode persists and adapters are skipped when capture fails; dotnet CLI remains unavailable so restore/build/test commands continue to be blocked.",
    "2025-11-13: AppCore services and database helpers now accept optional SignatureMetadataDto values, persisting supplied hashes/IP/session/device data while falling back to the legacy generator when metadata is absent; WPF adapters forward DTOs downstream.",
    "2025-11-14: DatabaseService helpers now write digital_signature_id columns when present, fall back for legacy schemas, and upsert digital_signatures with method/status/note metadata while propagating the resulting id back to SignatureMetadataDto consumers.",
    "2025-11-15: Read paths for work orders, calibrations, and parts now include digital_signature_id with safe fallbacks so UI/audit layers can rely on persisted signature references even on legacy schemas.",
    "2025-11-16: CAPA service/interface now forward optional SignatureMetadataDto payloads through DatabaseService.Capa helpers so signatures persist with IP/device/session context while dotnet restore/build remain blocked by the missing CLI.",
    "2025-11-17: System event logging now records digital signature ids/hashes with legacy fallbacks verified by new unit tests.",
    "2025-11-18: TestElectronicSignatureDialogService now auto-increments signature ids, clones persisted results, and stores hash/method/status/note metadata for downstream assertions; dotnet CLI remains unavailable so restore/build stay blocked.",
    "2025-11-20: WPF module tests now assert CRUD contexts expose signature hash/method/status/note metadata and verify persisted signature ids returned from the enhanced dialog service while dotnet CLI access is still blocked.",
    "2025-11-21: Calibration module tests cover signature cancellation and capture exceptions to ensure persistence is skipped and no metadata is stored when the dialog fails.",
    "2025-11-22: Suppliers module tests now assert cancellation and capture exception flows so persistence is skipped, mode/status remain stable, and digital signature storage stays empty when the dialog fails; dotnet CLI remains unavailable for restore/build/test runs.",
    "2025-11-23: AttachmentWorkflowService now routes uploads through AuditService for audit logging with actor/entity/dedup/reason/timestamp metadata and WPF unit coverage verifies both new and deduplicated uploads; dotnet CLI remains unavailable so restore/build/test attempts still fail with 'command not found'.",
    "2025-11-24: ElectronicSignatureDialogService now resolves AuditService, emitting capture and persistence audit events with reason metadata; new WPF dialog service tests assert both audit calls and signature persistence while dotnet CLI access remains blocked.",
    "2025-11-25: DataDrivenModuleDocumentViewModel gains an optional AuditService injection so every WPF module can share audit helpers, and Work Orders now records CREATE/UPDATE audit events with signature/user/IP/device/session details post-save; unit tests inject the service while dotnet CLI access remains unavailable.",
    "2025-11-26: RecordingAuditService test double added to the WPF harness so Work Orders save and attachment tests assert audit payloads with signer context while dotnet restore/build stay blocked.",
    "2025-11-27: Module save flows now rehydrate adapter-supplied signature metadata and skip redundant dialog persistence when ids are present so the stored record matches the UX status messaging.",
    "2025-11-28: Introduced a shared CrudSaveResult record so adapters can return the persisted identifier together with signature metadata, keeping downstream editors and audit logging aligned once saves complete.",
    "2025-11-29: CRUD service interfaces, adapters, module view-models, and WPF test doubles now return/consume CrudSaveResult so save flows refresh ids and expose signature metadata with regression coverage validating the new payload.",
    "2025-11-30: Assets save flow now applies CrudSaveResult digital signature ids immediately after persistence and removes the stale OnRecordSelected signature block; dotnet restore/build remain blocked by missing CLI.",
    "2025-12-08: Test signature dialog now tracks captured results/persist invocations, CRUD fakes accept configurable signature id providers, and module tests assert adapter ids while dotnet CLI remains unavailable.",
    "2025-12-09: ElectronicSignatureDialogService now reuses persisted digital signature ids when present, updates the dialog result with the generated id on insert, and funnels SIGNATURE_PERSISTED auditing through a reusable helper while dotnet restore/build remain blocked by the missing CLI.",
    "2025-12-10: ElectronicSignatureDialogService now exposes LogPersistedSignatureAsync so modules can log SIGNATURE_PERSISTED without re-inserting signatures, SignaturePersistenceHelper calls the new hook when persistence is skipped, and WPF tests assert the log-only path while dotnet CLI access continues to block restore/build/smoke.",
    "2025-12-11: SignaturePersistenceHelper now awaits the log-only audit path and WPF unit tests cover both persisted-id logging and new-signature insert flows while dotnet CLI access still blocks restore/build/test.",
    "2025-12-12: TestElectronicSignatureDialogService records log-only persisted signature metadata without mutating identifiers and SignaturePersistenceHelper tests assert the audit log path while dotnet restore/build remain blocked by the missing CLI.",
    "2025-12-13: ElectronicSignatureDialogService WPF tests now assert log-only persistence skips redundant inserts, validate the audit hook for existing signatures, and confirm the dotnet CLI gap still blocks restore/build/test execution.",
    "2025-12-14: CountingDatabaseService test double tracks InsertDigitalSignatureAsync usage so Work Orders coverage simulates adapter-driven signature inserts while verifying SIGNATURE_PERSISTED auditing; dotnet CLI access remains unavailable for restore/build/test.",
    "2025-12-23: WPF host now constructs AuditLogDocumentViewModel through DI so AuditService, ExportService, and the DatabaseService-backed AuditLogViewModel reach the toolbar commands while dotnet restore/build remain blocked by the missing CLI.",
    "2025-12-24: Added the WPF Audit Log document view mirroring the dashboard resource patterns with toolbar buttons, filter inputs, busy overlay, and status styling so the shell can display audit log records; dotnet restore/build remain blocked because the CLI is unavailable in the container.",
    "2025-12-26: ModuleRegistry retagged Audit Log, Audit Dashboard, and API Audit modules under \"Quality & Compliance\" to align taxonomy while dotnet CLI access remains blocked.",
    "2025-12-27: Updated codex artifacts to explicitly note that Audit Log, Audit Dashboard, and API Audit modules now live under the \"Quality & Compliance\" category so documentation and ModuleRegistry stay synchronized; dotnet CLI availability still required for restore/build/smoke.",
    "2026-01-03: Attachments module now clears staged uploads on form mode changes, gates upload/download/delete commands by B1 semantics, enforces electronic signature capture before committing staged files with attachment audits, and Cancel discards temp uploads before refreshing the inspector/status.",
    "2026-01-09: Attachments module unit coverage now exercises mode transitions, staged upload dedupe, save/cancel behavior, and download/delete command enablement; dotnet CLI remains unavailable so restore/build/smoke are still blocked.",
    "2026-01-10: Debug smoke harness now stages an attachment upload, completes the signature-gated save, streams the file back via AttachmentService, and deletes the record while cleaning temp artifacts so attachments are included in the automation log; dotnet CLI remains unavailable so restore/build/smoke continue to be blocked.",
    "2026-01-11: Audit trail filters now trigger an auto-refresh when modified so the grid reloads immediately; dotnet CLI remains unavailable so restore/build/smoke stay blocked pending installation.",
    "2026-01-12: AuditModuleViewModel test double now surfaces refresh invocation counts and snapshots so unit tests cover filter-change auto refresh behavior and state resets; dotnet restore/build retries still fail with 'command not found' because the CLI is missing in the container.",
    "2026-01-13: ApiAuditModuleViewModel now wires observable filter setters to a guarded refresh helper that clears status/error flags and triggers RefreshCommand, matching the Audit module's UX while dotnet restore remains blocked by the missing CLI.",
    "2026-01-14: API audit module unit tests now expose an awaitable refresh signal and invocation snapshots, covering each filter setter's auto-refresh path while dotnet restore/build remain blocked by the missing CLI.",
    "2026-01-16: Added shared localization dictionaries for ribbon/backstage/dock headers with dynamic resources and automation identifiers so EN\u2194HR switches update metadata while dotnet restore/build/smoke remain blocked by the missing CLI.",
    "2026-01-17: Dashboard module toolbar, search, grid columns, and module tree nodes now bind through the localization service with automation ids/names for Accessibility Insights/FlaUI validation; dotnet restore/build/smoke remain blocked until the CLI is installed.",
    "2026-01-18: Module tree hierarchical templates now push tooltip and automation metadata onto each header element so screen readers and FlaUI receive localized values after language switches; dotnet restore/build/smoke still blocked by missing CLI.",
    "2026-01-19: Golden Arrow button control now resolves tooltip/name/automation id via the localization service with dependency property keys so toolbar usage inherits localization + UIA updates; dotnet restore/build/smoke remain blocked by the missing CLI.",
    "2026-01-21: Shell localization now loads from ResourceManager-backed ShellStrings resx files while automation ids stay in Strings.xaml; dotnet restore/build/smoke remain blocked by the missing CLI.",
    "2026-01-20: Accessibility Insights for Windows tooling could not be executed inside the Linux container; scheduled a Windows-hosted rerun to capture locale-sensitive tooltip/name coverage for ribbon tabs, dock panes, and module document views.",
    "2026-01-22: Localized MainWindow title, CFL/ElectronicSignature dialogs, and every module view grid/toolbar label via ShellStrings resx keys while wiring shared ToolTip/Automation metadata; dotnet restore/build remain blocked by the missing CLI.",
    "2026-01-23: Centralized module titles, status phrases, and combo-box option lists in ShellStrings with formatting helpers, updated B1FormDocumentViewModel plus derived modules to consume ILocalizationService, and refreshed unit tests with a deterministic localization stub while the dotnet CLI gap persists.",
    "2026-01-24: Added LocalizationService regression tests that drive EN\u2194HR switches across ribbon/toolbars and module tree view-models, plus documented the operator language toggle workflow while dotnet restore/build/smoke remain blocked by the missing CLI.",
    "2026-01-25: Added XML documentation to B1FormDocumentViewModel toolbar commands so audit/status semantics stay clear for downstream modules while dotnet CLI availability continues to block restore/build/smoke validation.",
    "2026-01-26: Documented ModuleRecord key/status/inspector metadata so Golden Arrow navigation and SAP B1 form-mode visuals stay aligned while dotnet restore/build/smoke remain blocked by the missing CLI.",
    "2026-01-27: ModuleRegistry XML documentation now maps module keys/titles/categories to Modules pane population, localization resource lookups, Golden Arrow automation ids, and SAP B1 toolbar/form-mode consumption while dotnet restore/build/smoke remain blocked by the missing CLI.",
    "2026-01-30: Updated e-signature service/interface documentation to outline shell entry points, dispatcher requirements, localization expectations, audit logging parity, and cancellation guidance so MAUI/WPF consumers stay synchronized while dotnet CLI access remains unavailable."
  ]
}
