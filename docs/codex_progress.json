{
  "branch": "feature/wpf-shell-full-yasgmp",
  "sdk": {
    "wpfTarget": "net9.0-windows10.0.19041.0",
    "detected": false,
    "notes": [
      "`dotnet` CLI missing from PATH; cannot enumerate installed SDKs.",
      "Run scripts/bootstrap-dotnet9.ps1 on a Windows host to install/verify .NET 9 + Windows SDK",
      "2025-09-25: Batch 0 retry confirmed `dotnet --info` still returns 'command not found'.",
      "2025-09-26: Batch 0 retry confirmed `dotnet --info` still returns 'command not found'.",
      "2025-09-27: dotnet --info/dotnet restore/dotnet build all continue to fail with 'command not found'.",
      "2025-09-28: Batch 0 retry again hit 'command not found' for dotnet --info/restore/build in container.",
      "2025-10-09: dotnet --info still fails with 'command not found' inside the container; restore/build remain blocked.",
      "2025-10-11: dotnet --version/restore/build attempts still hit 'command not found' inside the container.",
      "2025-10-14: dotnet --info/restore/build attempted again; CLI remains unavailable in container.",
      "2025-10-17: dotnet --info/restore/build retried; CLI still missing so commands exit with 'command not found'.",
      "2025-10-23: dotnet --info/restore/build attempted again; CLI remains unavailable in the container.",
      "2025-10-27: dotnet --info/restore/build/test retried; CLI still missing so commands exit with 'command not found'.",
      "2025-10-30: dotnet --info/restore/build retried; CLI still absent in container so commands fail with 'command not found'.",
      "2025-11-01: dotnet --info/restore/build retried; CLI remains unavailable in the container so commands fail with 'command not found'.",
      "2025-11-02: dotnet restore/build retried; CLI remains unavailable so commands exit with 'command not found'.",
      "2025-11-07: dotnet restore retried; CLI still missing in container so all dotnet commands fail with 'command not found'.",
      "2025-11-08: dotnet restore/build retried; CLI remains unavailable in the container so commands exit with 'command not found'.",
      "2025-11-09: dotnet restore/build/test retried; CLI still missing in the container so all dotnet commands fail with 'command not found'.",
      "2025-11-17: dotnet restore/build retried; CLI still missing in container so commands exit with 'command not found'.",
      "2025-11-18: dotnet restore/build retried; CLI remains unavailable in the container so commands exit with 'command not found'.",
      "2025-11-19: dotnet restore/build retried; CLI remains unavailable in the container so commands exit with 'command not found'."
    ]
  },
  "batches": [
    {
      "id": "B0",
      "name": "Environment stabilization",
      "status": "blocked",
      "notes": [
        "Awaiting .NET SDK installation"
      ]
    },
    {
      "id": "B1",
      "name": "Shell foundation",
      "status": "pending"
    },
    {
      "id": "B2",
      "name": "Cross-cutting services",
      "status": "in-progress",
      "notes": [
        "Electronic signature capture now enforced across Assets, Work Orders, Calibration, Suppliers, and Parts; WPF adapters and AppCore services propagate optional signature metadata through to persistence with legacy hash fallback when metadata is absent; audit surfacing still pending until SDK access returns",
        "Audit logging now includes signature id/hash metadata with graceful fallbacks and unit coverage for both modern and legacy schemas."
      ]
    },
    {
      "id": "B3",
      "name": "Editor framework",
      "status": "pending"
    }
  ],
  "modules": {
    "Assets": "done",
    "Components": "done",
    "Parts": "done",
    "Warehouses": "done",
    "WorkOrders": "done",
    "Calibration": "done",
    "Incidents": "done",
    "CAPA": "done",
    "ChangeControl": "done",
    "Validations": "done",
    "ScheduledJobs": "done",
    "UsersRoles": "done",
    "Suppliers": "done",
    "ExternalServicers": "done",
    "Audit": "in-progress",
    "ApiAudit": "pending",
    "Attachments": "pending",
    "Dashboard": "pending",
    "Reports": "pending",
    "SettingsAdmin": "pending"
  },
  "lastCommitSummary": "test: assert WPF signature metadata propagation",
  "notes": [
    "Need to restore/install dotnet 9 SDK to proceed with Batch 0 validation steps.",
    "tests/fixtures/hello.txt seeded for smoke harness bootstrap",
    "Work Orders editor now surfaces CRUD via adapter with attachments and mandatory e-signature capture; audit surfacing still pending Batch B2",
    "Calibration editor now exposes CRUD with supplier/component lookups, attachment uploads, and mandatory e-signature capture; audit work remains queued for Batch B2",
    "Assets module now uploads attachments via AttachmentService from the WPF shell and enforces electronic signatures before save; audit surfacing remains pending.",
    "2025-09-24 & 2025-09-26: Batch 0 retries confirmed dotnet CLI still unavailable (`dotnet --info/restore/build` all fail). Awaiting host SDK install before expanding CRUD refactors to Assets module.",
    "2025-09-25: Batch 0 retry again hit 'command not found' for dotnet --info/restore/build in container.",
    "2025-09-27: Batch 0 still blocked in container; dotnet CLI absent so restore/build/smoke cannot execute.",
    "2025-09-29: dotnet --info/restore/build retried; container still lacks CLI so Batch 0 remains blocked.",
    "2025-09-27: Components module reached CRUD parity through ComponentService with machine lookups; cross-cutting attachments/e-signature work scheduled under Batch B2.",
    "2025-09-27: Components module exposes B1-mode editor using ComponentService and machine lookups; attachments/e-signature follow-ups remain.",
    "2025-09-29: WPF mapping updated for Components; adapters documented while awaiting SDK to finish Batch B2 attachment/signature tasks.",
    "2025-09-30: Parts & Warehouse editors now include stock health messaging, warehouse summaries, and inventory ledger previews while retaining attachment support; e-signature capture has been added while audit surfacing will follow once .NET 9 SDK is accessible.",
    "2025-09-30: Incidents module now runs through IIncidentCrudService with mode-aware editor and attachment uploads; CAPA/Change Control remain pending.",
    "2025-10-01: Incidents editor exposes CFL-driven linking to work orders and CAPA cases with unit coverage for the new mode transitions.",
    "2025-10-02: CAPA module now persists via ICapaCrudService with component lookups, attachments, and unit coverage for save/attachment flows; Change Control still pending.",
    "2025-10-03: Change Control module now uses IChangeControlCrudService with a mode-aware editor, CFL picker, and attachment workflow; signature/audit prompts queued for Batch B2.",
    "2025-10-04: Validations module now reuses ValidationService through a new adapter with machine/component lookups, CFL picker, and attachment uploads; signature/audit surfacing slated for Batch B2 once .NET 9 SDK is available.",
    "2025-10-05: Scheduled Jobs module now exposes a CRUD-capable editor with execute/acknowledge commands, CFL hooks, and attachment uploads via the new IScheduledJobCrudService adapter; signature/audit prompts remain queued for Batch B2.",
    "2025-10-06: Security (Users/Roles) module now leverages IUserCrudService with RBAC role assignment management, CFL, and unit coverage; signature/audit surfacing will follow under Batch B2.",
    "2025-10-07: Suppliers module now uses ISupplierCrudService with attachments, CFL, mode-aware editor coverage, and mandatory e-signature capture; External Servicers remain a follow-up task.",
    "2025-10-08: External Servicers module now has a dedicated adapter, WPF document, CFL picker, golden-arrow navigation, and unit/smoke harness coverage.",
    "2025-10-09: External Servicer database extensions now drive CRUD (list/load/save/delete) with unit tests asserting `external_contractors` access.",
    "2025-10-10: Audit module now surfaces AuditService-backed filtering with richer inspector columns and WPF coverage; dotnet --info still fails with 'command not found'.",
    "2025-10-11: B1 base now formats loaded status via a virtual hook (FormatLoadedStatus) so Audit module can emit singular/plural/no-results messaging validated by unit tests.",
    "2025-10-12: Audit module now normalizes filter dates to inclusive ranges and defaults missing end dates; WPF tests assert the end-of-day conversion.",
    "2025-10-13: WPF host now keeps a single AuditService singleton aligned with MAUI; attempted dotnet restore/build still fail because the CLI is unavailable in the container.",
    "2025-10-14: dotnet restore/build retried for MAUI + WPF targets; CLI still missing so commands exit with 'command not found'.",
    "2025-10-15: Audit filters now clamp start/end days, auto-swap reversed ranges, and include WPF coverage for date-only end-of-day normalization.",
    "2025-10-16: B1 refresh now calls FormatLoadedStatus with the loaded count so Audit overrides can emit zero/singular/plural strings; unit tests assert the formatted audit status messages.",
    "2025-10-17: Audit module date filters now accept null DatePicker inputs, default missing end dates to the start date, and expand the end boundary to the final tick of the day; WPF unit tests verify LastToFilter receives the end-of-day timestamp.",
    "2025-10-18: WPF host now routes AuditService registration through YasGmpCoreServiceGuards to strip transient duplicates before adding the singleton; DI tests assert duplicate descriptors are removed and the singleton instance is reused.",
    "2025-10-19: B1 refresh status messaging now reads from the post-apply record count so overrides (Audit) emit accurate zero/singular/plural strings validated by unit coverage.",
    "2025-10-20: Audit module date normalization now centralizes range clamping so null DatePicker values fall back gracefully and date-only end bounds reach the service at the day's final tick with new WPF unit coverage.",
    "2025-10-21: Confirmed singleton AuditService registration remains in the WPF host and added DI coverage to ensure AuditModuleViewModel resolves after the cleanup.",
    "2025-10-22: B1 FormatLoadedStatus now clamps negative counts while the Audit override maps <=0 results to the no-audit message; WPF tests continue to assert the singular/plural/zero wording through RefreshAsync.",
    "2025-10-23: Audit module now normalizes nullable DatePicker inputs (including DateTimeKind.Unspecified) before querying AuditService, persists sanitized filter values, and remains blocked on dotnet restore/build due to the missing CLI.",
    "2025-10-24: WPF host now registers AuditService as a singleton directly (removing the transient duplicate) and DI tests confirm AuditModuleViewModel resolves; dotnet restore/build retries still fail with 'command not found'.",
    "2025-10-25: Audit module now tracks HasResults/HasError flags, applies error highlighting in the view, and renames the inspector reason column; dotnet CLI remains unavailable so restore/build stay blocked.",
    "2025-10-26: Audit filters now preserve a user-specified end date even when it predates the start picker by clamping the service query's start bound to that day and adding WPF regression coverage for the upper-bound behavior.",
    "2025-10-27: Audit filters now clamp the lower bound when the upper bound is moved earlier while keeping the selected end date intact; new WPF regression test ensures persisted filters and query arguments align.",
    "2025-10-28: Audit filters now retain the user's To picker while reordering the query bounds if the upper date precedes the lower; tests cover both existing From overrides and default-from scenarios.",
    "2025-11-11: CRUD context factories in the WPF services now capture signature id/hash/method/status/note and surface an overload that accepts `ElectronicSignatureDialogResult`, enabling modules to forward dialog metadata alongside user/IP/session defaults before hitting adapters.",
    "2025-11-12: Machine, Work Order, Calibration, Supplier, and Part WPF adapters now apply captured signature hash/method/status/note to entities before persistence and include the metadata in supplier/part audit logging while awaiting core signature API expansion.",
    "2025-10-29: Audit module now orders inverted date ranges by min/max while preserving the user-selected To value; WPF tests assert the later bound reaches AuditService at end-of-day.",
    "2025-10-30: WPF modules now route uploads through AttachmentWorkflowService so dedup, retention, and encryption follow the MAUI conventions; DI registration updated and commands now surface dedup status messaging.",
    "2025-10-31: WPF shell adds an IElectronicSignatureDialogService that drives the signature dialog, captures the operator password/PIN with GMP reason text, and persists through DatabaseServiceDigitalSignaturesExtensions before dismissing.",
    "2025-11-01: Assets, Work Orders, Calibration, Suppliers, and Parts now require electronic signature capture before CRUD calls, propagate the resulting digital signature hash, and surface cancellation/failure states through StatusMessage.",
    "2025-11-02: Test suite moved the electronic signature dialog fake under TestDoubles, added queueable results/exception hooks, and updated module tests to inject the dependency explicitly.",
    "2025-11-03: Extended electronic signature gating and metadata propagation to Components, Warehouses, Incidents, Validations, CAPA, Change Control, External Servicers, Scheduled Jobs, and Security modules with refreshed unit coverage (audit surfacing still pending SDK access).",
    "2025-11-04: Machines save workflow now stamps last-modified metadata post signature capture so downstream persistence receives the enriched payload while SDK blockers remain.",
    "2025-11-05: Electronic signature capture now decouples persistence via PersistSignatureAsync so modules can persist business entities first, update signature record ids, and surface clear retry messaging when digital signature storage fails.",
    "2025-11-06: Assets module now derives from SignatureAwareEditor, capturing signer/session/IP metadata and exposing it via the shared SignatureMetadataView control after each save while SDK tooling remains unavailable.",
    "2025-11-07: Added B1FormDocumentViewModel cancellation regression test ensuring status text, dirty flag, and form mode remain intact when OnSaveAsync returns false; restore/build remain blocked pending dotnet CLI access.",
    "2025-11-08: Replaced the legacy FakeElectronicSignatureDialogService with the queueable TestElectronicSignatureDialogService and updated module tests to consume the new helper while leaving an obsolete alias for backwards compatibility.",
    "2025-11-09: Updated Change Control, External Servicers, Warehouse, Scheduling, and Incidents WPF tests to pass TestElectronicSignatureDialogService in the production constructor slot; test execution still blocked until dotnet CLI is available.",
    "2025-11-10: Added signature cancellation/exception coverage across Assets, Components, and Work Orders WPF tests to ensure edit mode persists and adapters are skipped when capture fails; dotnet CLI remains unavailable so restore/build/test commands continue to be blocked.",
    "2025-11-13: AppCore services and database helpers now accept optional SignatureMetadataDto values, persisting supplied hashes/IP/session/device data while falling back to the legacy generator when metadata is absent; WPF adapters forward DTOs downstream.",
    "2025-11-14: DatabaseService helpers now write digital_signature_id columns when present, fall back for legacy schemas, and upsert digital_signatures with method/status/note metadata while propagating the resulting id back to SignatureMetadataDto consumers.",
    "2025-11-15: Read paths for work orders, calibrations, and parts now include digital_signature_id with safe fallbacks so UI/audit layers can rely on persisted signature references even on legacy schemas.",
    "2025-11-16: CAPA service/interface now forward optional SignatureMetadataDto payloads through DatabaseService.Capa helpers so signatures persist with IP/device/session context while dotnet restore/build remain blocked by the missing CLI.",
    "2025-11-17: System event logging now records digital signature ids/hashes with legacy fallbacks verified by new unit tests.",
    "2025-11-18: TestElectronicSignatureDialogService now auto-increments signature ids, clones persisted results, and stores hash/method/status/note metadata for downstream assertions; dotnet CLI remains unavailable so restore/build stay blocked.",
    "2025-11-20: WPF module tests now assert CRUD contexts expose signature hash/method/status/note metadata and verify persisted signature ids returned from the enhanced dialog service while dotnet CLI access is still blocked."
  ]
}
