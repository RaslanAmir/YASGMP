"File","Operation","Tables","Columns","PrimaryTable","AliasedColumns","Sql"
"C:\GitHub\YASGMP\YASGMP\Diagnostics\LogSinks\SQLiteLogSink.cs","INSERT","logs","cat;evt;json;lvl;msg;ts_utc","logs",,"INSERT INTO logs(ts_utc, lvl, cat, evt, msg, json) VALUES ($ts, $lvl, $cat, $evt, $msg, $json)"
"C:\GitHub\YASGMP\YASGMP\Diagnostics\SelfTestRunner.cs","SELECT","information_schema","event_object_table;trigger_name","information_schema","System.Collections.Hashtable","SELECT TRIGGER_NAME, EVENT_OBJECT_TABLE FROM information_schema.TRIGGERS WHERE TRIGGER_SCHEMA = DATABASE()"
"C:\GitHub\YASGMP\YASGMP\Diagnostics\SelfTestRunner.cs","SELECT","information_schema","table_name","information_schema","System.Collections.Hashtable","SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = DATABASE() AND TABLE_NAME LIKE '%audit%'"
"C:\GitHub\YASGMP\YASGMP\Diagnostics\SelfTestRunner.cs","SELECT","permissions","count(*)","permissions","System.Collections.Hashtable","SELECT COUNT(*) FROM permissions WHERE code='Diagnostics.View'"
"C:\GitHub\YASGMP\YASGMP\Diagnostics\SelfTestRunner.cs","SELECT","information_schema","engine;table_name;table_rows","information_schema","System.Collections.Hashtable","SELECT TABLE_NAME, ENGINE, TABLE_ROWS FROM information_schema.TABLES WHERE TABLE_SCHEMA = DATABASE() ORDER BY TABLE_NAME"
"C:\GitHub\YASGMP\YASGMP\Diagnostics\SelfTestRunner.cs","SELECT","information_schema","action_timing;event_manipulation;event_object_table;trigger_name","information_schema","System.Collections.Hashtable","SELECT TRIGGER_NAME, EVENT_OBJECT_TABLE, ACTION_TIMING, EVENT_MANIPULATION FROM information_schema.TRIGGERS WHERE TRIGGER_SCHEMA = DATABASE() ORDER BY TRIGGER_NAME"
"C:\GitHub\YASGMP\YASGMP\Services\AuditService.cs","INSERT","entity_audit_log","action;details;device_info;entity;entity_id;session_id;source_ip;timestamp;user_id","entity_audit_log",,"INSERT INTO entity_audit_log (`timestamp`, user_id, source_ip, device_info, session_id, `entity`, entity_id, `action`, `details`) VALUES (NOW(), @uid, @ip, @device, @sid, @entity, @eid, @action, @details);"
"C:\GitHub\YASGMP\YASGMP\Services\AuditService.cs","INSERT","export_audit_log","device_info;export_type;file_path;filter_criteria;source_ip;timestamp;user_id","export_audit_log",,"INSERT INTO export_audit_log (`timestamp`, user_id, source_ip, device_info, export_type, file_path, filter_criteria) VALUES (NOW(), @uid, @ip, @device, @etype, @file, @filter);"
"C:\GitHub\YASGMP\YASGMP\Services\AuditService.cs","SELECT","system_event_log;users","description;device_info;event_time;event_type;id;record_id;session_id;source_ip;table_name;user_id;username","system_event_log","System.Collections.Hashtable","SELECT s.id, s.table_name AS Entity, s.record_id AS EntityId, s.event_type AS Action, s.event_time AS Timestamp, s.user_id AS UserId, u.username AS Username, s.source_ip AS IpAddress, s.device_info AS DeviceInfo, s.session_id AS SessionId, s.description AS Note FROM system_event_log s LEFT JOIN users u ON u.id = s.user_id WHERE s.event_time BETWEEN @from AND @to"
"C:\GitHub\YASGMP\YASGMP\Services\AuditService.cs","SELECT","information_schema","count(*)","information_schema","System.Collections.Hashtable","SELECT COUNT(*) FROM information_schema.TABLES WHERE TABLE_SCHEMA = DATABASE() AND TABLE_NAME=@t;"
"C:\GitHub\YASGMP\YASGMP\Services\AuditService.cs","SELECT","information_schema","count(*)","information_schema","System.Collections.Hashtable","SELECT COUNT(*) FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = DATABASE() AND TABLE_NAME=@t AND COLUMN_NAME=@c;"
"C:\GitHub\YASGMP\YASGMP\Services\AuditService.cs","INSERT","entity_audit_log","action;details;device_info;entity;entity_id;session_id;source_ip;timestamp;user_id","entity_audit_log",,"INSERT INTO entity_audit_log (`timestamp`, user_id, source_ip, device_info, session_id, `entity`, entity_id, `action`, `details`) VALUES (NOW(), @uid, @ip, @device, @sid, @entity, @eid, @action, @details);"
"C:\GitHub\YASGMP\YASGMP\Services\AuditService.cs","INSERT","export_audit_log","device_info;export_type;file_path;filter_criteria;source_ip;timestamp;user_id","export_audit_log",,"INSERT INTO export_audit_log (`timestamp`, user_id, source_ip, device_info, export_type, file_path, filter_criteria) VALUES (NOW(), @uid, @ip, @device, @etype, @file, @filter);"
"C:\GitHub\YASGMP\YASGMP\Services\AuditService.cs","SELECT","system_event_log;users","description;device_info;event_time;event_type;id;record_id;session_id;source_ip;table_name;user_id;username","system_event_log","System.Collections.Hashtable","SELECT s.id, s.table_name AS Entity, s.record_id AS EntityId, s.event_type AS Action, s.event_time AS Timestamp, s.user_id AS UserId, u.username AS Username, s.source_ip AS IpAddress, s.device_info AS DeviceInfo, s.session_id AS SessionId, s.description AS Note FROM system_event_log s LEFT JOIN users u ON u.id = s.user_id WHERE s.event_time BETWEEN @from AND @to"
"C:\GitHub\YASGMP\YASGMP\Services\AuditService.cs","SELECT","information_schema","count(*)","information_schema","System.Collections.Hashtable","SELECT COUNT(*) FROM information_schema.TABLES WHERE TABLE_SCHEMA = DATABASE() AND TABLE_NAME=@t;"
"C:\GitHub\YASGMP\YASGMP\Services\AuditService.cs","SELECT","information_schema","count(*)","information_schema","System.Collections.Hashtable","SELECT COUNT(*) FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = DATABASE() AND TABLE_NAME=@t AND COLUMN_NAME=@c;"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Assets.Extensions.cs","INSERT","machines","code;description;digital_signature;install_date;location;manufacturer;model;name;procurement_date;purchase_date;status;urs_doc","machines",,"INSERT INTO machines (code, name, description, model, manufacturer, location, install_date, procurement_date, purchase_date, status, urs_doc, digital_signature) VALUES (@code,@name,@desc,@model,@mf,@loc,@inst,@proc,@purch,@status,@urs,@sig)"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Assets.Extensions.cs","UPDATE","machines","code;description;digital_signature;location;manufacturer;model;name;status;urs_doc","machines",,"UPDATE machines SET code=@code, name=@name, description=@desc, model=@model, manufacturer=@mf, location=@loc, status=@status, urs_doc=@urs, digital_signature=@sig WHERE id=@id"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Assets.Extensions.cs","SELECT","machines","*","machines","System.Collections.Hashtable","SELECT * FROM machines ORDER BY name, id"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Assets.Extensions.cs","INSERT","machines","code;description;digital_signature;install_date;location;manufacturer;model;name;procurement_date;purchase_date;status;urs_doc","machines",,"INSERT INTO machines (code, name, description, model, manufacturer, location, install_date, procurement_date, purchase_date, status, urs_doc, digital_signature) VALUES (@code,@name,@desc,@model,@mf,@loc,@inst,@proc,@purch,@status,@urs,@sig)"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Assets.Extensions.cs","UPDATE","machines","code;description;digital_signature;location;manufacturer;model;name;status;urs_doc","machines",,"UPDATE machines SET code=@code, name=@name, description=@desc, model=@model, manufacturer=@mf, location=@loc, status=@status, urs_doc=@urs, digital_signature=@sig WHERE id=@id"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Assets.Extensions.cs","DELETE","machines","","machines",,"DELETE FROM machines WHERE id=@id"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Attachments.Extensions.cs","INSERT","attachments","created_at;entity_id;entity_type;file_name;file_path;uploaded_by","attachments",,"INSERT INTO attachments (file_name, file_path, entity_type, entity_id, uploaded_by, created_at) VALUES (@name,@path,@ent,@eid,@uid,NOW())"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Attachments.Extensions.cs","SELECT","attachments","*","attachments","System.Collections.Hashtable","SELECT * FROM attachments WHERE 1=1"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Attachments.Extensions.cs","INSERT","attachments","created_at;entity_id;entity_type;file_name;file_path;uploaded_by","attachments",,"INSERT INTO attachments (file_name, file_path, entity_type, entity_id, uploaded_by, created_at) VALUES (@name,@path,@ent,@eid,@uid,NOW())"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Attachments.Extensions.cs","DELETE","attachments","","attachments",,"DELETE FROM attachments WHERE id=@id"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Audit.QueryExtensions.cs","SELECT","system_event_log","description;device_info;event_type;field_name;id;new_value;old_value;record_id;related_module;session_id;severity;source_ip;table_name;ts_utc;user_id","system_event_log","System.Collections.Hashtable","SELECT id, ts_utc, user_id, event_type, table_name, related_module, record_id, field_name, old_value, new_value, description, source_ip, device_info, session_id, severity FROM system_event_log WHERE table_name=@t AND record_id=@id ORDER BY ts_utc DESC, id DESC"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Audit.QueryExtensions.cs","SELECT","system_event_log","description;device_info;event_type;field_name;id;new_value;old_value;record_id;related_module;session_id;severity;source_ip;table_name;ts_utc;user_id","system_event_log","System.Collections.Hashtable","SELECT id, ts_utc, user_id, event_type, table_name, related_module, record_id, field_name, old_value, new_value, description, source_ip, device_info, session_id, severity FROM system_event_log WHERE table_name=@t AND record_id=@id ORDER BY ts_utc DESC, id DESC"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Calibrations.Extensions.cs","SELECT","calibrations","*","calibrations","System.Collections.Hashtable","SELECT * FROM calibrations ORDER BY calibration_date DESC, id DESC"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Calibrations.Extensions.cs","SELECT","calibrations","*","calibrations","System.Collections.Hashtable","SELECT * FROM calibrations WHERE id=@id LIMIT 1"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Calibrations.Extensions.cs","SELECT","calibrations","*","calibrations","System.Collections.Hashtable","SELECT * FROM calibrations WHERE component_id=@cid ORDER BY calibration_date DESC, id DESC"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Calibrations.Extensions.cs","SELECT","calibrations","*","calibrations","System.Collections.Hashtable","SELECT * FROM calibrations WHERE supplier_id=@sid ORDER BY calibration_date DESC, id DESC"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Calibrations.Extensions.cs","SELECT","calibrations","*","calibrations","System.Collections.Hashtable","SELECT * FROM calibrations WHERE calibration_date BETWEEN @f AND @t ORDER BY calibration_date DESC, id DESC"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Calibrations.Extensions.cs","INSERT","calibrations","calibration_date;cert_doc;comment;component_id;digital_signature;next_due;result;supplier_id","calibrations",,"INSERT INTO calibrations (component_id, supplier_id, calibration_date, next_due, cert_doc, result, comment, digital_signature) VALUES (@cid,@sid,@cd,@due,@doc,@res,@comm,@sig)"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Calibrations.Extensions.cs","UPDATE","calibrations","calibration_date;cert_doc;comment;component_id;digital_signature;next_due;result;supplier_id","calibrations",,"UPDATE calibrations SET component_id=@cid, supplier_id=@sid, calibration_date=@cd, next_due=@due, cert_doc=@doc, result=@res, comment=@comm, digital_signature=@sig WHERE id=@id"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Calibrations.Extensions.cs","SELECT","calibrations","*","calibrations","System.Collections.Hashtable","SELECT * FROM calibrations ORDER BY calibration_date DESC, id DESC"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Calibrations.Extensions.cs","SELECT","calibrations","*","calibrations","System.Collections.Hashtable","SELECT * FROM calibrations WHERE id=@id LIMIT 1"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Calibrations.Extensions.cs","SELECT","calibrations","*","calibrations","System.Collections.Hashtable","SELECT * FROM calibrations WHERE component_id=@cid ORDER BY calibration_date DESC, id DESC"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Calibrations.Extensions.cs","SELECT","calibrations","*","calibrations","System.Collections.Hashtable","SELECT * FROM calibrations WHERE supplier_id=@sid ORDER BY calibration_date DESC, id DESC"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Calibrations.Extensions.cs","SELECT","calibrations","*","calibrations","System.Collections.Hashtable","SELECT * FROM calibrations WHERE calibration_date BETWEEN @f AND @t ORDER BY calibration_date DESC, id DESC"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Calibrations.Extensions.cs","INSERT","calibrations","calibration_date;cert_doc;comment;component_id;digital_signature;next_due;result;supplier_id","calibrations",,"INSERT INTO calibrations (component_id, supplier_id, calibration_date, next_due, cert_doc, result, comment, digital_signature) VALUES (@cid,@sid,@cd,@due,@doc,@res,@comm,@sig)"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Calibrations.Extensions.cs","UPDATE","calibrations","calibration_date;cert_doc;comment;component_id;digital_signature;next_due;result;supplier_id","calibrations",,"UPDATE calibrations SET component_id=@cid, supplier_id=@sid, calibration_date=@cd, next_due=@due, cert_doc=@doc, result=@res, comment=@comm, digital_signature=@sig WHERE id=@id"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Calibrations.Extensions.cs","DELETE","calibrations","","calibrations",,"DELETE FROM calibrations WHERE id=@id"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Capa.Cases.Extensions.cs","SELECT","capa_cases","*","capa_cases","System.Collections.Hashtable","SELECT * FROM capa_cases ORDER BY id DESC"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Capa.Cases.Extensions.cs","SELECT","capa_cases","*","capa_cases","System.Collections.Hashtable","SELECT * FROM capa_cases WHERE id=@id LIMIT 1"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Capa.Cases.Extensions.cs","INSERT","capa_cases","actions;assigned_to_id;component_id;corrective_action;date_close;date_open;description;digital_signature;doc_file;preventive_action;priority;reason;root_cause;status;title","capa_cases",,"INSERT INTO capa_cases (title, description, component_id, date_open, date_close, assigned_to_id, priority, status, root_cause, corrective_action, preventive_action, reason, actions, doc_file, digital_signature) VALUES (@t,@d,@cid,@open,@close,@assn,@prio,@status,@rc,@corr,@prev,@reason,@acts,@doc,@sig)"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Capa.Cases.Extensions.cs","UPDATE","capa_cases","actions;assigned_to_id;component_id;corrective_action;date_close;date_open;description;digital_signature;doc_file;preventive_action;priority;reason;root_cause;status;title","capa_cases",,"UPDATE capa_cases SET title=@t, description=@d, component_id=@cid, date_open=@open, date_close=@close, assigned_to_id=@assn, priority=@prio, status=@status, root_cause=@rc, corrective_action=@corr, preventive_action=@prev, reason=@reason, actions=@acts, doc_file=@doc, digital_signature=@sig WHERE id=@id"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Capa.Cases.Extensions.cs","SELECT","capa_cases","*","capa_cases","System.Collections.Hashtable","SELECT * FROM capa_cases ORDER BY id DESC"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Capa.Cases.Extensions.cs","SELECT","capa_cases","*","capa_cases","System.Collections.Hashtable","SELECT * FROM capa_cases WHERE id=@id LIMIT 1"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Capa.Cases.Extensions.cs","INSERT","capa_cases","actions;assigned_to_id;component_id;corrective_action;date_close;date_open;description;digital_signature;doc_file;preventive_action;priority;reason;root_cause;status;title","capa_cases",,"INSERT INTO capa_cases (title, description, component_id, date_open, date_close, assigned_to_id, priority, status, root_cause, corrective_action, preventive_action, reason, actions, doc_file, digital_signature) VALUES (@t,@d,@cid,@open,@close,@assn,@prio,@status,@rc,@corr,@prev,@reason,@acts,@doc,@sig)"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Capa.Cases.Extensions.cs","UPDATE","capa_cases","actions;assigned_to_id;component_id;corrective_action;date_close;date_open;description;digital_signature;doc_file;preventive_action;priority;reason;root_cause;status;title","capa_cases",,"UPDATE capa_cases SET title=@t, description=@d, component_id=@cid, date_open=@open, date_close=@close, assigned_to_id=@assn, priority=@prio, status=@status, root_cause=@rc, corrective_action=@corr, preventive_action=@prev, reason=@reason, actions=@acts, doc_file=@doc, digital_signature=@sig WHERE id=@id"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Capa.Cases.Extensions.cs","DELETE","capa_cases","","capa_cases",,"DELETE FROM capa_cases WHERE id=@id"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.ComponentOverloads.cs","INSERT","machine_components","code;install_date;last_modified_by_id;machine_id;name;sop_doc;status;type","machine_components",,"INSERT INTO machine_components (machine_id, code, name, type, sop_doc, status, install_date, last_modified_by_id) VALUES (@mid,@code,@name,@type,@sop,@status,@install,@modby)"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.ComponentOverloads.cs","UPDATE","machine_components","code;install_date;last_modified_by_id;machine_id;name;sop_doc;status;type","machine_components",,"UPDATE machine_components SET machine_id=@mid, code=@code, name=@name, type=@type, sop_doc=@sop, status=@status, install_date=@install, last_modified_by_id=@modby WHERE id=@id"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.ComponentOverloads.cs","INSERT","machine_components","code;install_date;last_modified_by_id;machine_id;name;sop_doc;status;type","machine_components",,"INSERT INTO machine_components (machine_id, code, name, type, sop_doc, status, install_date, last_modified_by_id) VALUES (@mid,@code,@name,@type,@sop,@status,@install,@modby)"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.ComponentOverloads.cs","UPDATE","machine_components","code;install_date;last_modified_by_id;machine_id;name;sop_doc;status;type","machine_components",,"UPDATE machine_components SET machine_id=@mid, code=@code, name=@name, type=@type, sop_doc=@sop, status=@status, install_date=@install, last_modified_by_id=@modby WHERE id=@id"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.ComponentOverloads.cs","DELETE","machine_components","","machine_components",,"DELETE FROM machine_components WHERE id=@id"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.ComponentOverloads.cs","DELETE","machine_components","","machine_components",,"DELETE FROM machine_components WHERE id=@id"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Components.QueryExtensions.cs","SELECT","machine_components","*","machine_components","System.Collections.Hashtable","SELECT * FROM machine_components ORDER BY id DESC"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Components.QueryExtensions.cs","SELECT","machine_components","*","machine_components","System.Collections.Hashtable","SELECT * FROM machine_components WHERE id=@id LIMIT 1"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Components.QueryExtensions.cs","SELECT","machine_components","*","machine_components","System.Collections.Hashtable","SELECT * FROM machine_components ORDER BY id DESC"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Components.QueryExtensions.cs","SELECT","machine_components","*","machine_components","System.Collections.Hashtable","SELECT * FROM machine_components WHERE id=@id LIMIT 1"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.ContractorInterventions.Extensions.cs","SELECT","contractor_interventions","*","contractor_interventions","System.Collections.Hashtable","SELECT * FROM contractor_interventions ORDER BY intervention_date DESC, id DESC;"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.ContractorInterventions.Extensions.cs","SELECT","contractor_intervention_audit","action;description;device_info;id;intervention_id;session_id;source_ip;timestamp;user_id","contractor_intervention_audit","System.Collections.Hashtable","SELECT id, intervention_id, user_id, action, description, timestamp, source_ip, device_info, session_id FROM contractor_intervention_audit WHERE intervention_id=@id ORDER BY timestamp DESC, id DESC;"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.ContractorInterventions.Extensions.cs","INSERT","contractor_interventions","component_id;contractor_id;doc_file;gmp_compliance;intervention_date;reason;result","contractor_interventions",,"INSERT INTO contractor_interventions (contractor_id, component_id, intervention_date, reason, result, gmp_compliance, doc_file) VALUES (@cid,@comp,@date,@reason,@result,@gmp,@doc)"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.ContractorInterventions.Extensions.cs","UPDATE","contractor_interventions","component_id;contractor_id;doc_file;gmp_compliance;intervention_date;reason;result","contractor_interventions",,"UPDATE contractor_interventions SET contractor_id=@cid, component_id=@comp, intervention_date=@date, reason=@reason, result=@result, gmp_compliance=@gmp, doc_file=@doc WHERE id=@id"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.ContractorInterventions.Extensions.cs","INSERT","contractor_intervention_audit","action;description;device_info;intervention_id;session_id;source_ip;timestamp;user_id","contractor_intervention_audit",,"INSERT INTO contractor_intervention_audit (intervention_id, user_id, action, description, timestamp, source_ip, device_info, session_id) VALUES (@iid,@uid,@act,@desc,NOW(),@ip,@dev,@sid);"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.ContractorInterventions.Extensions.cs","SELECT","contractor_interventions","*","contractor_interventions","System.Collections.Hashtable","SELECT * FROM contractor_interventions ORDER BY intervention_date DESC, id DESC;"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.ContractorInterventions.Extensions.cs","SELECT","contractor_intervention_audit","action;description;device_info;id;intervention_id;session_id;source_ip;timestamp;user_id","contractor_intervention_audit","System.Collections.Hashtable","SELECT id, intervention_id, user_id, action, description, timestamp, source_ip, device_info, session_id FROM contractor_intervention_audit WHERE intervention_id=@id ORDER BY timestamp DESC, id DESC;"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.ContractorInterventions.Extensions.cs","INSERT","contractor_interventions","component_id;contractor_id;doc_file;gmp_compliance;intervention_date;reason;result","contractor_interventions",,"INSERT INTO contractor_interventions (contractor_id, component_id, intervention_date, reason, result, gmp_compliance, doc_file) VALUES (@cid,@comp,@date,@reason,@result,@gmp,@doc)"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.ContractorInterventions.Extensions.cs","UPDATE","contractor_interventions","component_id;contractor_id;doc_file;gmp_compliance;intervention_date;reason;result","contractor_interventions",,"UPDATE contractor_interventions SET contractor_id=@cid, component_id=@comp, intervention_date=@date, reason=@reason, result=@result, gmp_compliance=@gmp, doc_file=@doc WHERE id=@id"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.ContractorInterventions.Extensions.cs","DELETE","contractor_interventions","","contractor_interventions",,"DELETE FROM contractor_interventions WHERE id=@id;"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.ContractorInterventions.Extensions.cs","INSERT","contractor_intervention_audit","action;description;device_info;intervention_id;session_id;source_ip;timestamp;user_id","contractor_intervention_audit",,"INSERT INTO contractor_intervention_audit (intervention_id, user_id, action, description, timestamp, source_ip, device_info, session_id) VALUES (@iid,@uid,@act,@desc,NOW(),@ip,@dev,@sid);"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.cs","INSERT","system_event_log","description;device_info;event_type;field_name;new_value;old_value;record_id;related_module;session_id;severity;source_ip;table_name;user_id","system_event_log",,"INSERT INTO system_event_log (user_id, event_type, table_name, related_module, record_id, field_name, old_value, new_value, description, source_ip, device_info, session_id, severity) VALUES (@uid, @etype, @table, @module, @rid, @field, @old, @new, @desc, @ip, @dev, @sid, @sev);"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.cs","INSERT","system_event_log","description;event_type;record_id;related_module;severity;source_ip;table_name;user_id","system_event_log",,"INSERT INTO system_event_log (user_id, event_type, table_name, related_module, record_id, description, source_ip, severity) VALUES (@uid, @etype, @table, @module, @rid, @desc, @ip, @sev);"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.cs","INSERT","system_event_log","description;device_info;event_type;field_name;new_value;old_value;record_id;related_module;session_id;severity;source_ip;table_name;user_id","system_event_log",,"INSERT INTO system_event_log (user_id, event_type, table_name, related_module, record_id, field_name, old_value, new_value, description, source_ip, device_info, session_id, severity) VALUES (@uid, @etype, @table, @module, @rid, @field, @old, @new, @desc, @ip, @dev, @sid, @sev);"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.cs","INSERT","system_event_log","description;event_type;record_id;related_module;severity;source_ip;table_name;user_id","system_event_log",,"INSERT INTO system_event_log (user_id, event_type, table_name, related_module, record_id, description, source_ip, severity) VALUES (@uid, @etype, @table, @module, @rid, @desc, @ip, @sev);"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.DeviationAudit.Extensions.cs","INSERT","deviation_audit","action;ai_anomaly_score;approval_status;approval_time;approved_by;changed_at;comment;created_at;deleted;deleted_at;deleted_by;details;deviation_id;device_info;digital_signature;export_status;export_time;exported_by;iot_event_id;new_value;old_value;regulatory_status;related_file;related_photo;restoration_reference;restored_from_snapshot;session_id;signature_type;signature_valid;source_ip;updated_at;user_id;validated","deviation_audit",,"INSERT INTO deviation_audit (deviation_id, user_id, action, details, changed_at, device_info, source_ip, session_id, digital_signature, regulatory_status, ai_anomaly_score, validated, comment, old_value, new_value, signature_type, signature_valid, export_status, export_time, exported_by, restored_from_snapshot, restoration_reference, approval_status, approval_time, approved_by, deleted, deleted_at, deleted_by, created_at, updated_at, related_file, related_photo, iot_event_id) VALUES (@dev,@uid,@act,@det,@chg,@devinfo,@ip,@sid,@sig,@reg,@ais,@val,@com,@old,@new,@sigtype,@sigok,@expst,@exptm,@expby,@restored,@restref,@apprst,@apprtm,@apprby,@del,@delat,@delby,NOW(),NOW(),@rfile,@rphoto,@iot)"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.DeviationAudit.Extensions.cs","UPDATE","deviation_audit","action;ai_anomaly_score;approval_status;approval_time;approved_by;changed_at;comment;deleted;deleted_at;deleted_by;details;deviation_id;device_info;digital_signature;export_status;export_time;exported_by;iot_event_id;new_value;old_value;regulatory_status;related_file;related_photo;restoration_reference;restored_from_snapshot;session_id;signature_type;signature_valid;source_ip;updated_at;user_id;validated","deviation_audit",,"UPDATE deviation_audit SET deviation_id=@dev, user_id=@uid, action=@act, details=@det, changed_at=@chg, device_info=@devinfo, source_ip=@ip, session_id=@sid, digital_signature=@sig, regulatory_status=@reg, ai_anomaly_score=@ais, validated=@val, comment=@com, old_value=@old, new_value=@new, signature_type=@sigtype, signature_valid=@sigok, export_status=@expst, export_time=@exptm, exported_by=@expby, restored_from_snapshot=@restored, restoration_reference=@restref, approval_status=@apprst, approval_time=@apprtm, approved_by=@apprby, deleted=@del, deleted_at=@delat, deleted_by=@delby, updated_at=NOW(), related_file=@rfile, related_photo=@rphoto, iot_event_id=@iot WHERE id=@id"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.DeviationAudit.Extensions.cs","INSERT","deviation_audit","action;ai_anomaly_score;approval_status;approval_time;approved_by;changed_at;comment;created_at;deleted;deleted_at;deleted_by;details;deviation_id;device_info;digital_signature;export_status;export_time;exported_by;iot_event_id;new_value;old_value;regulatory_status;related_file;related_photo;restoration_reference;restored_from_snapshot;session_id;signature_type;signature_valid;source_ip;updated_at;user_id;validated","deviation_audit",,"INSERT INTO deviation_audit (deviation_id, user_id, action, details, changed_at, device_info, source_ip, session_id, digital_signature, regulatory_status, ai_anomaly_score, validated, comment, old_value, new_value, signature_type, signature_valid, export_status, export_time, exported_by, restored_from_snapshot, restoration_reference, approval_status, approval_time, approved_by, deleted, deleted_at, deleted_by, created_at, updated_at, related_file, related_photo, iot_event_id) VALUES (@dev,@uid,@act,@det,@chg,@devinfo,@ip,@sid,@sig,@reg,@ais,@val,@com,@old,@new,@sigtype,@sigok,@expst,@exptm,@expby,@restored,@restref,@apprst,@apprtm,@apprby,@del,@delat,@delby,NOW(),NOW(),@rfile,@rphoto,@iot)"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.DeviationAudit.Extensions.cs","UPDATE","deviation_audit","action;ai_anomaly_score;approval_status;approval_time;approved_by;changed_at;comment;deleted;deleted_at;deleted_by;details;deviation_id;device_info;digital_signature;export_status;export_time;exported_by;iot_event_id;new_value;old_value;regulatory_status;related_file;related_photo;restoration_reference;restored_from_snapshot;session_id;signature_type;signature_valid;source_ip;updated_at;user_id;validated","deviation_audit",,"UPDATE deviation_audit SET deviation_id=@dev, user_id=@uid, action=@act, details=@det, changed_at=@chg, device_info=@devinfo, source_ip=@ip, session_id=@sid, digital_signature=@sig, regulatory_status=@reg, ai_anomaly_score=@ais, validated=@val, comment=@com, old_value=@old, new_value=@new, signature_type=@sigtype, signature_valid=@sigok, export_status=@expst, export_time=@exptm, exported_by=@expby, restored_from_snapshot=@restored, restoration_reference=@restref, approval_status=@apprst, approval_time=@apprtm, approved_by=@apprby, deleted=@del, deleted_at=@delat, deleted_by=@delby, updated_at=NOW(), related_file=@rfile, related_photo=@rphoto, iot_event_id=@iot WHERE id=@id"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.DeviationAudit.Extensions.cs","DELETE","deviation_audit","","deviation_audit",,"DELETE FROM deviation_audit WHERE id=@id"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.DeviationAudit.Extensions.cs","SELECT","deviation_audit","*","deviation_audit","System.Collections.Hashtable","SELECT * FROM deviation_audit WHERE id=@id LIMIT 1"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.DeviationAudit.Extensions.cs","SELECT","deviation_audit","*","deviation_audit","System.Collections.Hashtable","SELECT * FROM deviation_audit WHERE deviation_id=@id ORDER BY changed_at DESC, id DESC"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.DeviationAudit.Extensions.cs","SELECT","deviation_audit","*","deviation_audit","System.Collections.Hashtable","SELECT * FROM deviation_audit WHERE user_id=@id ORDER BY changed_at DESC, id DESC"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.DeviationAudit.Extensions.cs","SELECT","deviation_audit","*","deviation_audit","System.Collections.Hashtable","SELECT * FROM deviation_audit WHERE action=@a ORDER BY changed_at DESC, id DESC"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.DeviationAudit.Extensions.cs","SELECT","deviation_audit","*","deviation_audit","System.Collections.Hashtable","SELECT * FROM deviation_audit WHERE changed_at BETWEEN @f AND @t ORDER BY changed_at DESC, id DESC"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Deviations.Extensions.cs","INSERT","deviations","anomaly_score;assigned_investigator_id;assigned_investigator_name;audit_note;closed_at;closure_comment;code;description;digital_signature;investigation_started_at;is_critical;last_modified;last_modified_by_id;linked_capa_id;reported_at;reported_by_id;risk_score;root_cause;severity;source_ip;status;title","deviations",,"INSERT INTO deviations (code, title, description, reported_at, reported_by_id, severity, is_critical, status, assigned_investigator_id, assigned_investigator_name, investigation_started_at, root_cause, linked_capa_id, closure_comment, closed_at, digital_signature, risk_score, anomaly_score, last_modified, last_modified_by_id, source_ip, audit_note) VALUES (@code,@title,@desc,@rep,@rby,@sev,@crit,@status,@assid,@assname,@invstart,@rc,@lcapa,@clos,@closed,@sig,@risk,@anom,NOW(),@lmb,@ip,@audit)"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Deviations.Extensions.cs","UPDATE","deviations","anomaly_score;assigned_investigator_id;assigned_investigator_name;audit_note;closed_at;closure_comment;code;description;digital_signature;investigation_started_at;is_critical;last_modified;last_modified_by_id;linked_capa_id;reported_at;reported_by_id;risk_score;root_cause;severity;source_ip;status;title","deviations",,"UPDATE deviations SET code=@code, title=@title, description=@desc, reported_at=@rep, reported_by_id=@rby, severity=@sev, is_critical=@crit, status=@status, assigned_investigator_id=@assid, assigned_investigator_name=@assname, investigation_started_at=@invstart, root_cause=@rc, linked_capa_id=@lcapa, closure_comment=@clos, closed_at=@closed, digital_signature=@sig, risk_score=@risk, anomaly_score=@anom, last_modified=NOW(), last_modified_by_id=@lmb, source_ip=@ip, audit_note=@audit WHERE id=@id"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Deviations.Extensions.cs","SELECT","deviations","*","deviations","System.Collections.Hashtable","SELECT * FROM deviations ORDER BY id DESC"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Deviations.Extensions.cs","SELECT","deviations","*","deviations","System.Collections.Hashtable","SELECT * FROM deviations WHERE id=@id LIMIT 1"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Deviations.Extensions.cs","INSERT","deviations","anomaly_score;assigned_investigator_id;assigned_investigator_name;audit_note;closed_at;closure_comment;code;description;digital_signature;investigation_started_at;is_critical;last_modified;last_modified_by_id;linked_capa_id;reported_at;reported_by_id;risk_score;root_cause;severity;source_ip;status;title","deviations",,"INSERT INTO deviations (code, title, description, reported_at, reported_by_id, severity, is_critical, status, assigned_investigator_id, assigned_investigator_name, investigation_started_at, root_cause, linked_capa_id, closure_comment, closed_at, digital_signature, risk_score, anomaly_score, last_modified, last_modified_by_id, source_ip, audit_note) VALUES (@code,@title,@desc,@rep,@rby,@sev,@crit,@status,@assid,@assname,@invstart,@rc,@lcapa,@clos,@closed,@sig,@risk,@anom,NOW(),@lmb,@ip,@audit)"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Deviations.Extensions.cs","UPDATE","deviations","anomaly_score;assigned_investigator_id;assigned_investigator_name;audit_note;closed_at;closure_comment;code;description;digital_signature;investigation_started_at;is_critical;last_modified;last_modified_by_id;linked_capa_id;reported_at;reported_by_id;risk_score;root_cause;severity;source_ip;status;title","deviations",,"UPDATE deviations SET code=@code, title=@title, description=@desc, reported_at=@rep, reported_by_id=@rby, severity=@sev, is_critical=@crit, status=@status, assigned_investigator_id=@assid, assigned_investigator_name=@assname, investigation_started_at=@invstart, root_cause=@rc, linked_capa_id=@lcapa, closure_comment=@clos, closed_at=@closed, digital_signature=@sig, risk_score=@risk, anomaly_score=@anom, last_modified=NOW(), last_modified_by_id=@lmb, source_ip=@ip, audit_note=@audit WHERE id=@id"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Deviations.Extensions.cs","DELETE","deviations","","deviations",,"DELETE FROM deviations WHERE id=@id"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.DigitalSignatures.Extensions.cs","INSERT","digital_signatures","device_info;ip_address;method;note;public_key;record_id;signature_hash;signed_at;status;table_name;user_id","digital_signatures",,"INSERT INTO digital_signatures (table_name, record_id, user_id, signature_hash, method, status, signed_at, device_info, ip_address, note, public_key) VALUES (@table,@rid,@uid,@hash,@method,@status,@at,@dev,@ip,@note,@pk)"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.DigitalSignatures.Extensions.cs","SELECT","digital_signatures","*","digital_signatures","System.Collections.Hashtable","SELECT * FROM digital_signatures ORDER BY signed_at DESC, id DESC"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.DigitalSignatures.Extensions.cs","INSERT","digital_signatures","device_info;ip_address;method;note;public_key;record_id;signature_hash;signed_at;status;table_name;user_id","digital_signatures",,"INSERT INTO digital_signatures (table_name, record_id, user_id, signature_hash, method, status, signed_at, device_info, ip_address, note, public_key) VALUES (@table,@rid,@uid,@hash,@method,@status,@at,@dev,@ip,@note,@pk)"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.DigitalSignatures.Extensions.cs","UPDATE","digital_signatures","note;status","digital_signatures",,"UPDATE digital_signatures SET status='revoked', note=@note WHERE id=@id"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Documents.Extensions.cs","INSERT","documentcontrol","code;description;device_info;file_path;revision;status;title","documentcontrol",,"INSERT INTO documentcontrol (code, title, revision, status, file_path, description, device_info) VALUES (@code,@title,@rev,'draft',@file,@desc,@dev)"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Documents.Extensions.cs","SELECT","documentcontrol","*","documentcontrol","System.Collections.Hashtable","SELECT * FROM documentcontrol ORDER BY id DESC"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Documents.Extensions.cs","INSERT","documentcontrol","code;description;device_info;file_path;revision;status;title","documentcontrol",,"INSERT INTO documentcontrol (code, title, revision, status, file_path, description, device_info) VALUES (@code,@title,@rev,'draft',@file,@desc,@dev)"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Documents.Extensions.cs","UPDATE","documentcontrol","file_path;revision","documentcontrol",,"UPDATE documentcontrol SET revision=@rev, file_path=@file WHERE id=@id"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Documents.Extensions.cs","UPDATE","documentcontrol","status","documentcontrol",,"UPDATE documentcontrol SET status='approved' WHERE id=@id"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Documents.Extensions.cs","UPDATE","documentcontrol","status","documentcontrol",,"UPDATE documentcontrol SET status='published' WHERE id=@id"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Documents.Extensions.cs","UPDATE","documentcontrol","status","documentcontrol",,"UPDATE documentcontrol SET status='expired' WHERE id=@id"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Documents.Extensions.cs","UPDATE","documentcontrol","linked_change_controls","documentcontrol",,"UPDATE documentcontrol SET linked_change_controls = CONCAT(IFNULL(linked_change_controls,''), CASE WHEN linked_change_controls IS NULL OR linked_change_controls='' THEN '' ELSE ',' END, @cc) WHERE id=@id"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.ExternalServicers.Extensions.cs","INSERT","external_contractors","address;code;comment;contact_person;cooperation_end;cooperation_start;digital_signature;email;name;phone;registration_number;status;type","external_contractors",,"INSERT INTO external_contractors (name, code, registration_number, contact_person, email, phone, address, type, status, cooperation_start, cooperation_end, comment, digital_signature) VALUES (@name,@code,@reg,@contact,@em,@ph,@addr,@type,@status,@start,@end,@comm,@sig)"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.ExternalServicers.Extensions.cs","UPDATE","external_contractors","address;code;comment;contact_person;cooperation_end;cooperation_start;digital_signature;email;name;phone;registration_number;status;type","external_contractors",,"UPDATE external_contractors SET name=@name, code=@code, registration_number=@reg, contact_person=@contact, email=@em, phone=@ph, address=@addr, type=@type, status=@status, cooperation_start=@start, cooperation_end=@end, comment=@comm, digital_signature=@sig WHERE id=@id"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.ExternalServicers.Extensions.cs","SELECT","external_contractors","*","external_contractors","System.Collections.Hashtable","SELECT * FROM external_contractors ORDER BY name, id"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.ExternalServicers.Extensions.cs","INSERT","external_contractors","address;code;comment;contact_person;cooperation_end;cooperation_start;digital_signature;email;name;phone;registration_number;status;type","external_contractors",,"INSERT INTO external_contractors (name, code, registration_number, contact_person, email, phone, address, type, status, cooperation_start, cooperation_end, comment, digital_signature) VALUES (@name,@code,@reg,@contact,@em,@ph,@addr,@type,@status,@start,@end,@comm,@sig)"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.ExternalServicers.Extensions.cs","UPDATE","external_contractors","address;code;comment;contact_person;cooperation_end;cooperation_start;digital_signature;email;name;phone;registration_number;status;type","external_contractors",,"UPDATE external_contractors SET name=@name, code=@code, registration_number=@reg, contact_person=@contact, email=@em, phone=@ph, address=@addr, type=@type, status=@status, cooperation_start=@start, cooperation_end=@end, comment=@comm, digital_signature=@sig WHERE id=@id"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.ExternalServicers.Extensions.cs","DELETE","external_contractors","","external_contractors",,"DELETE FROM external_contractors WHERE id=@id"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.IncidentAudits.Extensions.cs","SELECT","incident_audit","*","incident_audit","System.Collections.Hashtable","SELECT * FROM incident_audit WHERE id=@id LIMIT 1"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.IncidentAudits.Extensions.cs","SELECT","incident_audit","*","incident_audit","System.Collections.Hashtable","SELECT * FROM incident_audit WHERE incident_id=@id ORDER BY action_at DESC, id DESC"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.IncidentAudits.Extensions.cs","SELECT","incident_audit","*","incident_audit","System.Collections.Hashtable","SELECT * FROM incident_audit WHERE user_id=@id ORDER BY action_at DESC, id DESC"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Machines.CoreExtensions.cs","INSERT","machines","acquisition_cost;cloud_device_guid;code;description;install_date;iot_device_id;location;manufacturer;model;name;procurement_date;qr_code;rfid_tag;serial_number;status;urs_doc","machines",,"INSERT INTO machines (code, name, description, model, manufacturer, location, install_date, procurement_date, status, urs_doc, serial_number, acquisition_cost, rfid_tag, qr_code, iot_device_id, cloud_device_guid) VALUES (@code,@name,@desc,@model,@mf,@loc,@inst,@proc,@status,@urs,@sn,@cost,@rfid,@qr,@iot,@cloud)"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Machines.CoreExtensions.cs","UPDATE","machines","acquisition_cost;cloud_device_guid;code;description;install_date;iot_device_id;location;manufacturer;model;name;procurement_date;qr_code;rfid_tag;serial_number;status;urs_doc","machines",,"UPDATE machines SET code=@code, name=@name, description=@desc, model=@model, manufacturer=@mf, location=@loc, install_date=@inst, procurement_date=@proc, status=@status, urs_doc=@urs, serial_number=@sn, acquisition_cost=@cost, rfid_tag=@rfid, qr_code=@qr, iot_device_id=@iot, cloud_device_guid=@cloud WHERE id=@id"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Machines.CoreExtensions.cs","SELECT","machines","*","machines","System.Collections.Hashtable","SELECT * FROM machines ORDER BY name, id"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Machines.CoreExtensions.cs","SELECT","machines","*","machines","System.Collections.Hashtable","SELECT * FROM machines WHERE id=@id LIMIT 1"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Machines.CoreExtensions.cs","INSERT","machines","acquisition_cost;cloud_device_guid;code;description;install_date;iot_device_id;location;manufacturer;model;name;procurement_date;qr_code;rfid_tag;serial_number;status;urs_doc","machines",,"INSERT INTO machines (code, name, description, model, manufacturer, location, install_date, procurement_date, status, urs_doc, serial_number, acquisition_cost, rfid_tag, qr_code, iot_device_id, cloud_device_guid) VALUES (@code,@name,@desc,@model,@mf,@loc,@inst,@proc,@status,@urs,@sn,@cost,@rfid,@qr,@iot,@cloud)"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Machines.CoreExtensions.cs","UPDATE","machines","acquisition_cost;cloud_device_guid;code;description;install_date;iot_device_id;location;manufacturer;model;name;procurement_date;qr_code;rfid_tag;serial_number;status;urs_doc","machines",,"UPDATE machines SET code=@code, name=@name, description=@desc, model=@model, manufacturer=@mf, location=@loc, install_date=@inst, procurement_date=@proc, status=@status, urs_doc=@urs, serial_number=@sn, acquisition_cost=@cost, rfid_tag=@rfid, qr_code=@qr, iot_device_id=@iot, cloud_device_guid=@cloud WHERE id=@id"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Machines.CoreExtensions.cs","DELETE","machines","","machines",,"DELETE FROM machines WHERE id=@id"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Notifications.Extensions.cs","SELECT","notification_queue;notification_templates","channel;coalesce(nt.name;code;created_at;id;json_unquote(json_extract(nq.payload;null;recipient_user_id;status;updated_at","notification_queue","System.Collections.Hashtable","SELECT nq.id, COALESCE(nt.name, nt.code, 'Notification') AS title, JSON_UNQUOTE(JSON_EXTRACT(nq.payload, '$.message')) AS message, nq.channel AS type, nq.status, NULL AS entity, NULL AS entity_id, NULL AS link, NULL AS recipients, nq.recipient_user_id AS recipient_id, NULL AS sender_id, NULL AS ip_address, NULL AS device_info, NULL AS session_id, nq.created_at, nq.updated_at FROM notification_queue nq LEFT JOIN notification_templates nt ON nt.id = nq.template_id ORDER BY nq.created_at DESC, nq.id DESC;"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Notifications.Extensions.cs","INSERT","notification_queue","channel;payload;recipient_user_id;scheduled_at;status;template_id","notification_queue",,"INSERT INTO notification_queue (template_id, recipient_user_id, channel, payload, scheduled_at, status) VALUES (NULL, @rid, @channel, JSON_OBJECT('title', @title, 'message', @msg, 'type', @type, 'priority', @prio), NOW(), 'queued')"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Notifications.Extensions.cs","SELECT","notification_queue;notification_templates","channel;coalesce(nt.name;code;created_at;id;json_unquote(json_extract(nq.payload;null;recipient_user_id;status;updated_at","notification_queue","System.Collections.Hashtable","SELECT nq.id, COALESCE(nt.name, nt.code, 'Notification') AS title, JSON_UNQUOTE(JSON_EXTRACT(nq.payload, '$.message')) AS message, nq.channel AS type, nq.status, NULL AS entity, NULL AS entity_id, NULL AS link, NULL AS recipients, nq.recipient_user_id AS recipient_id, NULL AS sender_id, NULL AS ip_address, NULL AS device_info, NULL AS session_id, nq.created_at, nq.updated_at FROM notification_queue nq LEFT JOIN notification_templates nt ON nt.id = nq.template_id ORDER BY nq.created_at DESC, nq.id DESC;"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Notifications.Extensions.cs","INSERT","notification_queue","channel;payload;recipient_user_id;scheduled_at;status;template_id","notification_queue",,"INSERT INTO notification_queue (template_id, recipient_user_id, channel, payload, scheduled_at, status) VALUES (NULL, @rid, @channel, JSON_OBJECT('title', @title, 'message', @msg, 'type', @type, 'priority', @prio), NOW(), 'queued')"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Ppm.Extensions.cs","INSERT","preventive_maintenance_plans","checklist_file;code;component_id;description;frequency;machine_id;name;next_due;status","preventive_maintenance_plans",,"INSERT INTO preventive_maintenance_plans (code, name, description, machine_id, component_id, frequency, checklist_file, next_due, status) VALUES (@code,@name,@desc,@mid,@cid,@freq,@file,@due,@status)"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Ppm.Extensions.cs","UPDATE","preventive_maintenance_plans","checklist_file;code;component_id;description;frequency;machine_id;name;next_due;status","preventive_maintenance_plans",,"UPDATE preventive_maintenance_plans SET code=@code, name=@name, description=@desc, machine_id=@mid, component_id=@cid, frequency=@freq, checklist_file=@file, next_due=@due, status=@status WHERE id=@id"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Ppm.Extensions.cs","SELECT","preventive_maintenance_plans","*","preventive_maintenance_plans","System.Collections.Hashtable","SELECT * FROM preventive_maintenance_plans ORDER BY id DESC"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Ppm.Extensions.cs","SELECT","ppm_plans","*","ppm_plans","System.Collections.Hashtable","SELECT * FROM ppm_plans ORDER BY id DESC"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Ppm.Extensions.cs","SELECT","preventive_maintenance_plans","*","preventive_maintenance_plans","System.Collections.Hashtable","SELECT * FROM preventive_maintenance_plans WHERE id=@id LIMIT 1"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Ppm.Extensions.cs","SELECT","ppm_plans","*","ppm_plans","System.Collections.Hashtable","SELECT * FROM ppm_plans WHERE id=@id LIMIT 1"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Ppm.Extensions.cs","INSERT","preventive_maintenance_plans","checklist_file;code;component_id;description;frequency;machine_id;name;next_due;status","preventive_maintenance_plans",,"INSERT INTO preventive_maintenance_plans (code, name, description, machine_id, component_id, frequency, checklist_file, next_due, status) VALUES (@code,@name,@desc,@mid,@cid,@freq,@file,@due,@status)"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Ppm.Extensions.cs","UPDATE","preventive_maintenance_plans","checklist_file;code;component_id;description;frequency;machine_id;name;next_due;status","preventive_maintenance_plans",,"UPDATE preventive_maintenance_plans SET code=@code, name=@name, description=@desc, machine_id=@mid, component_id=@cid, frequency=@freq, checklist_file=@file, next_due=@due, status=@status WHERE id=@id"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Ppm.Extensions.cs","DELETE","preventive_maintenance_plans","","preventive_maintenance_plans",,"DELETE FROM preventive_maintenance_plans WHERE id=@id"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Ppm.Extensions.cs","DELETE","ppm_plans","","ppm_plans",,"DELETE FROM ppm_plans WHERE id=@id"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Qualifications.Extensions.cs","INSERT","component_qualifications","certificate_number;component_id;qualification_date;status;supplier_id","component_qualifications",,"INSERT INTO component_qualifications (component_id, supplier_id, qualification_date, status, certificate_number) VALUES (@comp,@supp,@date,@status,@cert)"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Qualifications.Extensions.cs","UPDATE","component_qualifications","certificate_number;component_id;qualification_date;status;supplier_id","component_qualifications",,"UPDATE component_qualifications SET component_id=@comp, supplier_id=@supp, qualification_date=@date, status=@status, certificate_number=@cert WHERE id=@id"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Qualifications.Extensions.cs","SELECT","component_qualifications","*","component_qualifications","System.Collections.Hashtable","SELECT * FROM component_qualifications ORDER BY qualification_date DESC, id DESC"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Qualifications.Extensions.cs","INSERT","component_qualifications","certificate_number;component_id;qualification_date;status;supplier_id","component_qualifications",,"INSERT INTO component_qualifications (component_id, supplier_id, qualification_date, status, certificate_number) VALUES (@comp,@supp,@date,@status,@cert)"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Qualifications.Extensions.cs","UPDATE","component_qualifications","certificate_number;component_id;qualification_date;status;supplier_id","component_qualifications",,"UPDATE component_qualifications SET component_id=@comp, supplier_id=@supp, qualification_date=@date, status=@status, certificate_number=@cert WHERE id=@id"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Qualifications.Extensions.cs","DELETE","component_qualifications","","component_qualifications",,"DELETE FROM component_qualifications WHERE id=@id"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Rbac.CoreExtensions.cs","SELECT","permissions;user_permissions","1","user_permissions","System.Collections.Hashtable","SELECT 1 FROM user_permissions up JOIN permissions p ON p.id = up.permission_id WHERE up.user_id=@uid AND p.code=@code AND up.allowed=1 AND (up.expires_at IS NULL OR up.expires_at > NOW()) LIMIT 1;"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Rbac.CoreExtensions.cs","SELECT","user_roles","role_id","user_roles","System.Collections.Hashtable","SELECT role_id FROM user_roles WHERE user_id=@uid AND (expires_at IS NULL OR expires_at > NOW());"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Rbac.CoreExtensions.cs","SELECT","permissions;role_permissions","1","role_permissions","System.Collections.Hashtable","SELECT 1 FROM role_permissions rp JOIN permissions p ON p.id = rp.permission_id WHERE rp.role_id=@rid AND p.code=@code AND (rp.allowed IS NULL OR rp.allowed=1) LIMIT 1;"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Rbac.CoreExtensions.cs","SELECT","delegated_permissions;permissions","1","delegated_permissions","System.Collections.Hashtable","SELECT 1 FROM delegated_permissions d JOIN permissions p ON p.id = d.permission_id WHERE d.to_user_id=@uid AND p.code=@code AND (d.revoked IS NULL OR d.revoked=0) AND d.expires_at > NOW() LIMIT 1;"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Rbac.CoreExtensions.cs","SELECT","permissions;user_permissions","code","user_permissions","System.Collections.Hashtable","SELECT p.code FROM user_permissions up JOIN permissions p ON p.id = up.permission_id WHERE up.user_id=@uid AND up.allowed=1 AND (up.expires_at IS NULL OR up.expires_at > NOW()) ORDER BY p.code;"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Rbac.CoreExtensions.cs","SELECT","permissions;role_permissions","code","role_permissions","System.Collections.Hashtable","SELECT p.code FROM role_permissions rp JOIN permissions p ON p.id=rp.permission_id WHERE rp.role_id=@rid AND (rp.allowed IS NULL OR rp.allowed=1) ORDER BY p.code;"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Rbac.CoreExtensions.cs","SELECT","delegated_permissions;permissions","code","delegated_permissions","System.Collections.Hashtable","SELECT p.code FROM delegated_permissions d JOIN permissions p ON p.id = d.permission_id WHERE d.to_user_id=@uid AND (d.revoked IS NULL OR d.revoked=0) AND d.expires_at > NOW() ORDER BY p.code;"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Rbac.CoreExtensions.cs","INSERT","user_roles","expires_at;granted_at;granted_by;role_id;user_id","user_roles",,"INSERT INTO user_roles (user_id, role_id, granted_by, granted_at, expires_at) VALUES (@uid,@rid,@actor,NOW(),@exp) ON DUPLICATE KEY UPDATE granted_by = VALUES(granted_by), granted_at = VALUES(granted_at), expires_at = VALUES(expires_at);"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Rbac.CoreExtensions.cs","INSERT","user_permissions","allowed;expires_at;granted_at;granted_by;permission_id;reason;user_id","user_permissions",,"INSERT INTO user_permissions (user_id, permission_id, allowed, reason, granted_by, granted_at, expires_at) VALUES (@uid,@pid,@allow,@reason,@by,NOW(),@exp) ON DUPLICATE KEY UPDATE allowed = VALUES(allowed), reason = VALUES(reason), granted_by = VALUES(granted_by), granted_at = VALUES(granted_at), expires_at = VALUES(expires_at);"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Rbac.CoreExtensions.cs","INSERT","delegated_permissions","expires_at;from_user_id;granted_by;permission_id;reason;to_user_id","delegated_permissions",,"INSERT INTO delegated_permissions (from_user_id, to_user_id, permission_id, expires_at, reason, granted_by) VALUES (@from,@to,@pid,@exp,@reason,@by);"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Rbac.CoreExtensions.cs","UPDATE","delegated_permissions","revoked;revoked_at","delegated_permissions",,"UPDATE delegated_permissions SET revoked=1, revoked_at=NOW() WHERE id=@id"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Rbac.CoreExtensions.cs","INSERT+SELECT","delegated_permissions;permission_change_log","action;change_type;changed_by;ifnull(to_user_id;null;permission_id;role_id;user_id","permission_change_log","System.Collections.Hashtable","INSERT INTO permission_change_log (user_id, changed_by, change_type, role_id, permission_id, action) SELECT IFNULL(to_user_id, @actor), @actor, 'delegation', NULL, permission_id, 'revoke' FROM delegated_permissions WHERE id=@id;"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Rbac.CoreExtensions.cs","INSERT","permission_requests","permission_id;reason;requested_at;status;user_id","permission_requests",,"INSERT INTO permission_requests (user_id, permission_id, reason, status, requested_at) VALUES (@uid,@pid,@reason,'pending',NOW());"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Rbac.CoreExtensions.cs","UPDATE","permission_requests","review_comment;reviewed_at;reviewed_by;status","permission_requests",,"UPDATE permission_requests SET status='approved', reviewed_by=@rev, reviewed_at=NOW(), review_comment=@cmt WHERE id=@id"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Rbac.CoreExtensions.cs","UPDATE","permission_requests","review_comment;reviewed_at;reviewed_by;status","permission_requests",,"UPDATE permission_requests SET status='denied', reviewed_by=@rev, reviewed_at=NOW(), review_comment=@cmt WHERE id=@id"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Rbac.CoreExtensions.cs","INSERT","permission_change_log","action;change_type;changed_by;permission_id;role_id;user_id","permission_change_log",,"INSERT INTO permission_change_log (user_id, changed_by, change_type, role_id, permission_id, action) VALUES (@uid, @actor, @ctype, @rid, @pid, @act);"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Rbac.CoreExtensions.cs","SELECT","permissions;user_permissions","1","user_permissions","System.Collections.Hashtable","SELECT 1 FROM user_permissions up JOIN permissions p ON p.id = up.permission_id WHERE up.user_id=@uid AND p.code=@code AND up.allowed=1 AND (up.expires_at IS NULL OR up.expires_at > NOW()) LIMIT 1;"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Rbac.CoreExtensions.cs","SELECT","user_roles","role_id","user_roles","System.Collections.Hashtable","SELECT role_id FROM user_roles WHERE user_id=@uid AND (expires_at IS NULL OR expires_at > NOW());"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Rbac.CoreExtensions.cs","SELECT","permissions;role_permissions","1","role_permissions","System.Collections.Hashtable","SELECT 1 FROM role_permissions rp JOIN permissions p ON p.id = rp.permission_id WHERE rp.role_id=@rid AND p.code=@code AND (rp.allowed IS NULL OR rp.allowed=1) LIMIT 1;"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Rbac.CoreExtensions.cs","SELECT","delegated_permissions;permissions","1","delegated_permissions","System.Collections.Hashtable","SELECT 1 FROM delegated_permissions d JOIN permissions p ON p.id = d.permission_id WHERE d.to_user_id=@uid AND p.code=@code AND (d.revoked IS NULL OR d.revoked=0) AND d.expires_at > NOW() LIMIT 1;"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Rbac.CoreExtensions.cs","SELECT","permissions;user_permissions","code","user_permissions","System.Collections.Hashtable","SELECT p.code FROM user_permissions up JOIN permissions p ON p.id = up.permission_id WHERE up.user_id=@uid AND up.allowed=1 AND (up.expires_at IS NULL OR up.expires_at > NOW()) ORDER BY p.code;"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Rbac.CoreExtensions.cs","SELECT","permissions;role_permissions","code","role_permissions","System.Collections.Hashtable","SELECT p.code FROM role_permissions rp JOIN permissions p ON p.id=rp.permission_id WHERE rp.role_id=@rid AND (rp.allowed IS NULL OR rp.allowed=1) ORDER BY p.code;"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Rbac.CoreExtensions.cs","SELECT","delegated_permissions;permissions","code","delegated_permissions","System.Collections.Hashtable","SELECT p.code FROM delegated_permissions d JOIN permissions p ON p.id = d.permission_id WHERE d.to_user_id=@uid AND (d.revoked IS NULL OR d.revoked=0) AND d.expires_at > NOW() ORDER BY p.code;"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Rbac.CoreExtensions.cs","INSERT","user_roles","expires_at;granted_at;granted_by;role_id;user_id","user_roles",,"INSERT INTO user_roles (user_id, role_id, granted_by, granted_at, expires_at) VALUES (@uid,@rid,@actor,NOW(),@exp) ON DUPLICATE KEY UPDATE granted_by = VALUES(granted_by), granted_at = VALUES(granted_at), expires_at = VALUES(expires_at);"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Rbac.CoreExtensions.cs","DELETE","user_roles","","user_roles",,"DELETE FROM user_roles WHERE user_id=@uid AND role_id=@rid"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Rbac.CoreExtensions.cs","SELECT","permissions","id","permissions","System.Collections.Hashtable","SELECT id FROM permissions WHERE code=@code LIMIT 1"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Rbac.CoreExtensions.cs","INSERT","permissions","code;name","permissions",,"INSERT INTO permissions (code, name) VALUES (@code,@name)"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Rbac.CoreExtensions.cs","INSERT","user_permissions","allowed;expires_at;granted_at;granted_by;permission_id;reason;user_id","user_permissions",,"INSERT INTO user_permissions (user_id, permission_id, allowed, reason, granted_by, granted_at, expires_at) VALUES (@uid,@pid,@allow,@reason,@by,NOW(),@exp) ON DUPLICATE KEY UPDATE allowed = VALUES(allowed), reason = VALUES(reason), granted_by = VALUES(granted_by), granted_at = VALUES(granted_at), expires_at = VALUES(expires_at);"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Rbac.CoreExtensions.cs","DELETE","user_permissions","","user_permissions",,"DELETE FROM user_permissions WHERE user_id=@uid AND permission_id=@pid"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Rbac.CoreExtensions.cs","INSERT","delegated_permissions","expires_at;from_user_id;granted_by;permission_id;reason;to_user_id","delegated_permissions",,"INSERT INTO delegated_permissions (from_user_id, to_user_id, permission_id, expires_at, reason, granted_by) VALUES (@from,@to,@pid,@exp,@reason,@by);"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Rbac.CoreExtensions.cs","UPDATE","delegated_permissions","revoked;revoked_at","delegated_permissions",,"UPDATE delegated_permissions SET revoked=1, revoked_at=NOW() WHERE id=@id"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Rbac.CoreExtensions.cs","SELECT","delegated_permissions","permission_id;to_user_id","delegated_permissions","System.Collections.Hashtable","SELECT to_user_id, permission_id FROM delegated_permissions WHERE id=@id"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Rbac.CoreExtensions.cs","INSERT+SELECT","delegated_permissions;permission_change_log","action;change_type;changed_by;ifnull(to_user_id;null;permission_id;role_id;user_id","permission_change_log","System.Collections.Hashtable","INSERT INTO permission_change_log (user_id, changed_by, change_type, role_id, permission_id, action) SELECT IFNULL(to_user_id, @actor), @actor, 'delegation', NULL, permission_id, 'revoke' FROM delegated_permissions WHERE id=@id;"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Rbac.CoreExtensions.cs","INSERT","permission_requests","permission_id;reason;requested_at;status;user_id","permission_requests",,"INSERT INTO permission_requests (user_id, permission_id, reason, status, requested_at) VALUES (@uid,@pid,@reason,'pending',NOW());"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Rbac.CoreExtensions.cs","SELECT","permission_requests","*","permission_requests","System.Collections.Hashtable","SELECT * FROM permission_requests WHERE id=@id"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Rbac.CoreExtensions.cs","UPDATE","permission_requests","review_comment;reviewed_at;reviewed_by;status","permission_requests",,"UPDATE permission_requests SET status='approved', reviewed_by=@rev, reviewed_at=NOW(), review_comment=@cmt WHERE id=@id"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Rbac.CoreExtensions.cs","SELECT","permission_requests","*","permission_requests","System.Collections.Hashtable","SELECT * FROM permission_requests WHERE id=@id"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Rbac.CoreExtensions.cs","UPDATE","permission_requests","review_comment;reviewed_at;reviewed_by;status","permission_requests",,"UPDATE permission_requests SET status='denied', reviewed_by=@rev, reviewed_at=NOW(), review_comment=@cmt WHERE id=@id"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Rbac.CoreExtensions.cs","SELECT","roles","*","roles","System.Collections.Hashtable","SELECT * FROM roles ORDER BY name, id"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Rbac.CoreExtensions.cs","SELECT","permissions","*","permissions","System.Collections.Hashtable","SELECT * FROM permissions ORDER BY code, id"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Rbac.CoreExtensions.cs","INSERT","permission_change_log","action;change_type;changed_by;permission_id;role_id;user_id","permission_change_log",,"INSERT INTO permission_change_log (user_id, changed_by, change_type, role_id, permission_id, action) VALUES (@uid, @actor, @ctype, @rid, @pid, @act);"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Rbac.Extensions.cs","SELECT","users","*","users","System.Collections.Hashtable","SELECT * FROM users ORDER BY full_name, username, id;"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Rbac.Extensions.cs","SELECT","users","*","users","System.Collections.Hashtable","SELECT * FROM users WHERE id=@id LIMIT 1;"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Rbac.Extensions.cs","INSERT","user_roles","granted_at;granted_by;role_id;user_id","user_roles",,"INSERT INTO user_roles (user_id, role_id, granted_by, granted_at) VALUES (@uid,@rid,@actor,NOW()) ON DUPLICATE KEY UPDATE granted_by=VALUES(granted_by), granted_at=VALUES(granted_at);"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Rbac.Extensions.cs","INSERT","role_permissions","permission_id;role_id","role_permissions",,"INSERT INTO role_permissions (role_id, permission_id) VALUES (@rid,@pid) ON DUPLICATE KEY UPDATE role_id=role_id;"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Rbac.Extensions.cs","INSERT","user_audit","action;created_at;description;device_info;session_id;source_ip;user_id","user_audit",,"INSERT INTO user_audit (user_id, action, description, created_at, source_ip, device_info, session_id) VALUES (@uid,@act,@desc,NOW(),@ip,@dev,@sid)"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Rbac.Extensions.cs","INSERT","role_audit","action;created_at;description;device_info;role_id;session_id;source_ip","role_audit",,"INSERT INTO role_audit (role_id, action, description, created_at, source_ip, device_info, session_id) VALUES (@rid,@act,@desc,NOW(),@ip,@dev,@sid)"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Rbac.Extensions.cs","INSERT","export_print_log","file_path;filter_used;format;note;source_ip;table_name;user_id","export_print_log",,"INSERT INTO export_print_log (user_id, format, table_name, filter_used, file_path, source_ip, note) VALUES (NULL,@fmt,'users',@filter,@path,@ip,'Users export')"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Rbac.Extensions.cs","INSERT","export_print_log","file_path;filter_used;format;note;source_ip;table_name;user_id","export_print_log",,"INSERT INTO export_print_log (user_id, format, table_name, filter_used, file_path, source_ip, note) VALUES (NULL,@fmt,'roles',@filter,@path,@ip,'Roles export')"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Rbac.Extensions.cs","INSERT","export_print_log","file_path;filter_used;format;note;source_ip;table_name;user_id","export_print_log",,"INSERT INTO export_print_log (user_id, format, table_name, filter_used, file_path, source_ip, note) VALUES (NULL,@fmt,'permissions',@filter,@path,@ip,'Permissions export')"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Rbac.Extensions.cs","SELECT","users","*","users","System.Collections.Hashtable","SELECT * FROM users ORDER BY full_name, username, id;"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Rbac.Extensions.cs","SELECT","users","*","users","System.Collections.Hashtable","SELECT * FROM users WHERE id=@id LIMIT 1;"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Rbac.Extensions.cs","UPDATE","users","deleted_at;is_deleted","users",,"UPDATE users SET is_deleted=1, deleted_at=NOW() WHERE id=@id"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Rbac.Extensions.cs","DELETE","users","","users",,"DELETE FROM users WHERE id=@id"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Rbac.Extensions.cs","SELECT","roles","*","roles","System.Collections.Hashtable","SELECT * FROM roles ORDER BY name, id"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Rbac.Extensions.cs","SELECT","permissions","*","permissions","System.Collections.Hashtable","SELECT * FROM permissions ORDER BY code, id"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Rbac.Extensions.cs","INSERT","user_roles","granted_at;granted_by;role_id;user_id","user_roles",,"INSERT INTO user_roles (user_id, role_id, granted_by, granted_at) VALUES (@uid,@rid,@actor,NOW()) ON DUPLICATE KEY UPDATE granted_by=VALUES(granted_by), granted_at=VALUES(granted_at);"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Rbac.Extensions.cs","DELETE","user_roles","","user_roles",,"DELETE FROM user_roles WHERE user_id=@u AND role_id=@r"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Rbac.Extensions.cs","INSERT","role_permissions","permission_id;role_id","role_permissions",,"INSERT INTO role_permissions (role_id, permission_id) VALUES (@rid,@pid) ON DUPLICATE KEY UPDATE role_id=role_id;"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Rbac.Extensions.cs","DELETE","role_permissions","","role_permissions",,"DELETE FROM role_permissions WHERE role_id=@r AND permission_id=@p"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Rbac.Extensions.cs","INSERT","user_audit","action;created_at;description;device_info;session_id;source_ip;user_id","user_audit",,"INSERT INTO user_audit (user_id, action, description, created_at, source_ip, device_info, session_id) VALUES (@uid,@act,@desc,NOW(),@ip,@dev,@sid)"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Rbac.Extensions.cs","INSERT","role_audit","action;created_at;description;device_info;role_id;session_id;source_ip","role_audit",,"INSERT INTO role_audit (role_id, action, description, created_at, source_ip, device_info, session_id) VALUES (@rid,@act,@desc,NOW(),@ip,@dev,@sid)"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Rbac.Extensions.cs","INSERT","export_print_log","file_path;filter_used;format;note;source_ip;table_name;user_id","export_print_log",,"INSERT INTO export_print_log (user_id, format, table_name, filter_used, file_path, source_ip, note) VALUES (NULL,@fmt,'users',@filter,@path,@ip,'Users export')"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Rbac.Extensions.cs","INSERT","export_print_log","file_path;filter_used;format;note;source_ip;table_name;user_id","export_print_log",,"INSERT INTO export_print_log (user_id, format, table_name, filter_used, file_path, source_ip, note) VALUES (NULL,@fmt,'roles',@filter,@path,@ip,'Roles export')"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Rbac.Extensions.cs","INSERT","export_print_log","file_path;filter_used;format;note;source_ip;table_name;user_id","export_print_log",,"INSERT INTO export_print_log (user_id, format, table_name, filter_used, file_path, source_ip, note) VALUES (NULL,@fmt,'permissions',@filter,@path,@ip,'Permissions export')"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Rbac.Extensions.cs","SELECT","user_roles","role_id;user_id","user_roles","System.Collections.Hashtable","SELECT user_id, role_id FROM user_roles WHERE user_id IN ({inClause})"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Rbac.Extensions.cs","SELECT","user_permissions","permission_id;user_id","user_permissions","System.Collections.Hashtable","SELECT user_id, permission_id FROM user_permissions WHERE user_id IN ({inClause})"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.RiskAssessments.Extensions.cs","SELECT","risk_assessments","*","risk_assessments","System.Collections.Hashtable","SELECT * FROM risk_assessments ORDER BY id DESC"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Scheduler.Extensions.cs","SELECT","scheduled_jobs","*","scheduled_jobs","System.Collections.Hashtable","SELECT * FROM scheduled_jobs ORDER BY next_due, id"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Settings.Extensions.cs","SELECT","system_parameters","0;1;digital_signature;id;note;null;param_name;param_value;updated_at","system_parameters","System.Collections.Hashtable","SELECT id, param_name AS `key`, param_value AS `value`, NULL AS default_value, NULL AS value_type, NULL AS min_value, NULL AS max_value, note AS description, 'system' AS category, NULL AS subcategory, 0 AS is_sensitive, 1 AS is_global, NULL AS user_id, NULL AS role_id, NULL AS approved_by_id, NULL AS approved_at, digital_signature, '' AS status, updated_at, NULL AS updated_by_id, NULL AS expiry_date FROM system_parameters ORDER BY param_name;"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Settings.Extensions.cs","INSERT","system_parameters","note;param_name;param_value;updated_by","system_parameters",,"INSERT INTO system_parameters (param_name, param_value, updated_by, note) VALUES (@key, @val, @updby, @desc) ON DUPLICATE KEY UPDATE param_value=VALUES(param_value), updated_by=VALUES(updated_by), updated_at=CURRENT_TIMESTAMP, note=VALUES(note)"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Settings.Extensions.cs","INSERT","system_parameters","note;param_name;param_value;updated_by","system_parameters",,"INSERT INTO system_parameters (param_name, param_value, updated_by, note) VALUES (@key, @val, @updby, @note) ON DUPLICATE KEY UPDATE param_value=VALUES(param_value), updated_by=VALUES(updated_by), updated_at=CURRENT_TIMESTAMP, note=VALUES(note)"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Settings.Extensions.cs","SELECT","system_parameters","0;1;digital_signature;id;note;null;param_name;param_value;updated_at","system_parameters","System.Collections.Hashtable","SELECT id, param_name AS `key`, param_value AS `value`, NULL AS default_value, NULL AS value_type, NULL AS min_value, NULL AS max_value, note AS description, 'system' AS category, NULL AS subcategory, 0 AS is_sensitive, 1 AS is_global, NULL AS user_id, NULL AS role_id, NULL AS approved_by_id, NULL AS approved_at, digital_signature, '' AS status, updated_at, NULL AS updated_by_id, NULL AS expiry_date FROM system_parameters ORDER BY param_name;"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Settings.Extensions.cs","INSERT","system_parameters","note;param_name;param_value;updated_by","system_parameters",,"INSERT INTO system_parameters (param_name, param_value, updated_by, note) VALUES (@key, @val, @updby, @desc) ON DUPLICATE KEY UPDATE param_value=VALUES(param_value), updated_by=VALUES(updated_by), updated_at=CURRENT_TIMESTAMP, note=VALUES(note)"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Settings.Extensions.cs","INSERT","system_parameters","note;param_name;param_value;updated_by","system_parameters",,"INSERT INTO system_parameters (param_name, param_value, updated_by, note) VALUES (@key, @val, @updby, @note) ON DUPLICATE KEY UPDATE param_value=VALUES(param_value), updated_by=VALUES(updated_by), updated_at=CURRENT_TIMESTAMP, note=VALUES(note)"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Settings.Extensions.cs","DELETE","settings","","settings",,"DELETE FROM settings WHERE `key`=@k"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Settings.Extensions.cs","DELETE","system_parameters","","system_parameters",,"DELETE FROM system_parameters WHERE param_name=@k"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Settings.Extensions.cs","UPDATE","settings","updated_at;updated_by_id;value","settings",,"UPDATE settings SET `value`=default_value, updated_at=NOW(), updated_by_id=@u WHERE `key`=@k"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Settings.Extensions.cs","DELETE","system_parameters","","system_parameters",,"DELETE FROM system_parameters WHERE param_name=@k"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.SpareParts.Extensions.cs","INSERT","parts","barcode;blocked;category;code;default_supplier_id;description;digital_signature;image;last_modified;last_modified_by_id;location;min_stock_alert;name;price;regulatory_certificates;rfid;serial_or_lot;source_ip;status;stock","parts",,"INSERT INTO parts (code, name, description, category, barcode, rfid, serial_or_lot, default_supplier_id, price, stock, min_stock_alert, location, image, status, blocked, regulatory_certificates, digital_signature, last_modified, last_modified_by_id, source_ip) VALUES (@code,@name,@desc,@cat,@bar,@rfid,@serial,@supp,@price,@stock,@min,@loc,@img,@status,@blocked,@reg,@sig,NOW(),@lmb,@ip)"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.SpareParts.Extensions.cs","UPDATE","parts","barcode;blocked;category;code;default_supplier_id;description;digital_signature;image;last_modified;last_modified_by_id;location;min_stock_alert;name;price;regulatory_certificates;rfid;serial_or_lot;source_ip;status;stock","parts",,"UPDATE parts SET code=@code, name=@name, description=@desc, category=@cat, barcode=@bar, rfid=@rfid, serial_or_lot=@serial, default_supplier_id=@supp, price=@price, stock=@stock, min_stock_alert=@min, location=@loc, image=@img, status=@status, blocked=@blocked, regulatory_certificates=@reg, digital_signature=@sig, last_modified=NOW(), last_modified_by_id=@lmb, source_ip=@ip WHERE id=@id"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.SpareParts.Extensions.cs","SELECT","parts","*","parts","System.Collections.Hashtable","SELECT * FROM parts WHERE id=@id LIMIT 1"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.SpareParts.Extensions.cs","SELECT","parts","*","parts","System.Collections.Hashtable","SELECT * FROM parts ORDER BY name, id"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.SpareParts.Extensions.cs","INSERT","parts","barcode;blocked;category;code;default_supplier_id;description;digital_signature;image;last_modified;last_modified_by_id;location;min_stock_alert;name;price;regulatory_certificates;rfid;serial_or_lot;source_ip;status;stock","parts",,"INSERT INTO parts (code, name, description, category, barcode, rfid, serial_or_lot, default_supplier_id, price, stock, min_stock_alert, location, image, status, blocked, regulatory_certificates, digital_signature, last_modified, last_modified_by_id, source_ip) VALUES (@code,@name,@desc,@cat,@bar,@rfid,@serial,@supp,@price,@stock,@min,@loc,@img,@status,@blocked,@reg,@sig,NOW(),@lmb,@ip)"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.SpareParts.Extensions.cs","UPDATE","parts","barcode;blocked;category;code;default_supplier_id;description;digital_signature;image;last_modified;last_modified_by_id;location;min_stock_alert;name;price;regulatory_certificates;rfid;serial_or_lot;source_ip;status;stock","parts",,"UPDATE parts SET code=@code, name=@name, description=@desc, category=@cat, barcode=@bar, rfid=@rfid, serial_or_lot=@serial, default_supplier_id=@supp, price=@price, stock=@stock, min_stock_alert=@min, location=@loc, image=@img, status=@status, blocked=@blocked, regulatory_certificates=@reg, digital_signature=@sig, last_modified=NOW(), last_modified_by_id=@lmb, source_ip=@ip WHERE id=@id"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.SpareParts.Extensions.cs","DELETE","parts","","parts",,"DELETE FROM parts WHERE id=@id"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Suppliers.Extensions.cs","INSERT","suppliers","address;city;contract_file;country;email;name;notes;phone;status;supplier_type;vat_number;website","suppliers",,"INSERT INTO suppliers (name, vat_number, address, city, country, email, phone, website, supplier_type, notes, contract_file, status) VALUES (@name,@vat,@addr,@city,@country,@em,@ph,@web,@type,@notes,@contract,@status)"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Suppliers.Extensions.cs","UPDATE","suppliers","address;city;contract_file;country;email;name;notes;phone;status;supplier_type;vat_number;website","suppliers",,"UPDATE suppliers SET name=@name, vat_number=@vat, address=@addr, city=@city, country=@country, email=@em, phone=@ph, website=@web, supplier_type=@type, notes=@notes, contract_file=@contract, status=@status WHERE id=@id"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Suppliers.Extensions.cs","SELECT","suppliers","*","suppliers","System.Collections.Hashtable","SELECT * FROM suppliers ORDER BY name, id"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Suppliers.Extensions.cs","SELECT","suppliers","*","suppliers","System.Collections.Hashtable","SELECT * FROM suppliers WHERE id=@id LIMIT 1"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Suppliers.Extensions.cs","INSERT","suppliers","address;city;contract_file;country;email;name;notes;phone;status;supplier_type;vat_number;website","suppliers",,"INSERT INTO suppliers (name, vat_number, address, city, country, email, phone, website, supplier_type, notes, contract_file, status) VALUES (@name,@vat,@addr,@city,@country,@em,@ph,@web,@type,@notes,@contract,@status)"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Suppliers.Extensions.cs","UPDATE","suppliers","address;city;contract_file;country;email;name;notes;phone;status;supplier_type;vat_number;website","suppliers",,"UPDATE suppliers SET name=@name, vat_number=@vat, address=@addr, city=@city, country=@country, email=@em, phone=@ph, website=@web, supplier_type=@type, notes=@notes, contract_file=@contract, status=@status WHERE id=@id"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Suppliers.Extensions.cs","DELETE","suppliers","","suppliers",,"DELETE FROM suppliers WHERE id=@id"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Suppliers.Extensions.cs","DELETE","supplier","","supplier",,"DELETE FROM supplier WHERE id=@id"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.SystemEvents.QueryExtensions.cs","SELECT","system_event_log","description;device_info;event_type;field_name;id;new_value;old_value;processed;record_id;related_module;session_id;severity;source_ip;table_name;ts_utc;user_id","system_event_log","System.Collections.Hashtable","SELECT id, ts_utc, user_id, event_type, table_name, related_module, record_id, field_name, old_value, new_value, description, source_ip, device_info, session_id, severity, processed FROM system_event_log WHERE 1=1"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.TrainingRecords.Extensions.cs","SELECT","user_training","*","user_training","System.Collections.Hashtable","SELECT * FROM user_training ORDER BY training_date DESC, id DESC;"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.TrainingRecords.Extensions.cs","INSERT","user_training","certificate_file;notes;provider;status;training_date;training_type;user_id;valid_until","user_training",,"INSERT INTO user_training (user_id, training_type, training_date, valid_until, provider, status, certificate_file, notes) VALUES (@uid,@ttype,@tdate,@valid,@provider,@status,@cert_file,@notes);"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.TrainingRecords.Extensions.cs","UPDATE","user_training","status;user_id","user_training",,"UPDATE user_training SET user_id=@uid, status='assigned' WHERE id=@id;"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.TrainingRecords.Extensions.cs","UPDATE","user_training","status","user_training",,"UPDATE user_training SET status='pending_approval' WHERE id=@id;"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.TrainingRecords.Extensions.cs","UPDATE","user_training","status","user_training",,"UPDATE user_training SET status='completed' WHERE id=@id;"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.TrainingRecords.Extensions.cs","UPDATE","user_training","status","user_training",,"UPDATE user_training SET status='closed' WHERE id=@id;"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.TrainingRecords.Extensions.cs","INSERT","export_print_log","file_path;filter_used;format;note;source_ip;table_name;user_id","export_print_log",,"INSERT INTO export_print_log (user_id, format, table_name, filter_used, file_path, source_ip, note) VALUES (NULL,'csv','user_training',@filter,@path,@ip,'Training export')"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.TrainingRecords.Extensions.cs","INSERT","export_print_log","file_path;filter_used;format;note;source_ip;table_name;user_id","export_print_log",,"INSERT INTO export_print_log (user_id, format, table_name, filter_used, file_path, source_ip, note) VALUES (NULL,@fmt,'user_training',@filter,@path,@ip,'Training export')"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.TrainingRecords.Extensions.cs","SELECT","user_training","*","user_training","System.Collections.Hashtable","SELECT * FROM user_training ORDER BY training_date DESC, id DESC;"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.TrainingRecords.Extensions.cs","INSERT","user_training","certificate_file;notes;provider;status;training_date;training_type;user_id;valid_until","user_training",,"INSERT INTO user_training (user_id, training_type, training_date, valid_until, provider, status, certificate_file, notes) VALUES (@uid,@ttype,@tdate,@valid,@provider,@status,@cert_file,@notes);"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.TrainingRecords.Extensions.cs","UPDATE","user_training","status;user_id","user_training",,"UPDATE user_training SET user_id=@uid, status='assigned' WHERE id=@id;"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.TrainingRecords.Extensions.cs","UPDATE","user_training","status","user_training",,"UPDATE user_training SET status='pending_approval' WHERE id=@id;"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.TrainingRecords.Extensions.cs","UPDATE","user_training","status","user_training",,"UPDATE user_training SET status='completed' WHERE id=@id;"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.TrainingRecords.Extensions.cs","UPDATE","user_training","status","user_training",,"UPDATE user_training SET status='closed' WHERE id=@id;"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.TrainingRecords.Extensions.cs","INSERT","export_print_log","file_path;filter_used;format;note;source_ip;table_name;user_id","export_print_log",,"INSERT INTO export_print_log (user_id, format, table_name, filter_used, file_path, source_ip, note) VALUES (NULL,'csv','user_training',@filter,@path,@ip,'Training export')"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.TrainingRecords.Extensions.cs","INSERT","export_print_log","file_path;filter_used;format;note;source_ip;table_name;user_id","export_print_log",,"INSERT INTO export_print_log (user_id, format, table_name, filter_used, file_path, source_ip, note) VALUES (NULL,@fmt,'user_training',@filter,@path,@ip,'Training export')"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Users.Extensions.cs","SELECT","users","*","users","System.Collections.Hashtable","SELECT * FROM users WHERE id=@id LIMIT 1;"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Users.Extensions.cs","SELECT","users","*","users","System.Collections.Hashtable","SELECT * FROM users WHERE LOWER(username)=LOWER(@u) LIMIT 1;"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Users.Extensions.cs","INSERT","users","active;email;full_name;is_locked;is_two_factor_enabled;password_hash;role;username","users",,"INSERT INTO users (username, password_hash, full_name, email, role, active, is_locked, is_two_factor_enabled) VALUES(@un, @ph, @fn, @em, @ro, @ac, @lk, @tfa);"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Users.Extensions.cs","UPDATE","users","active;email;full_name;is_locked;is_two_factor_enabled;password_hash;role;username","users",,"UPDATE users SET username=@un, password_hash=@ph, full_name=@fn, email=@em, role=@ro, active=@ac, is_locked=@lk, is_two_factor_enabled=@tfa WHERE id=@id;"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Users.Extensions.cs","UPDATE","users","failed_login_attempts;last_failed_login","users",,"UPDATE users SET failed_login_attempts = IFNULL(failed_login_attempts,0) + 1, last_failed_login = NOW() WHERE id=@id"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Users.Extensions.cs","SELECT","users","*","users","System.Collections.Hashtable","SELECT * FROM users WHERE id=@id LIMIT 1;"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Users.Extensions.cs","SELECT","users","*","users","System.Collections.Hashtable","SELECT * FROM users WHERE LOWER(username)=LOWER(@u) LIMIT 1;"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Users.Extensions.cs","SELECT","users","*","users","System.Collections.Hashtable","SELECT * FROM users ORDER BY username"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Users.Extensions.cs","INSERT","users","active;email;full_name;is_locked;is_two_factor_enabled;password_hash;role;username","users",,"INSERT INTO users (username, password_hash, full_name, email, role, active, is_locked, is_two_factor_enabled) VALUES(@un, @ph, @fn, @em, @ro, @ac, @lk, @tfa);"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Users.Extensions.cs","UPDATE","users","active;email;full_name;is_locked;is_two_factor_enabled;password_hash;role;username","users",,"UPDATE users SET username=@un, password_hash=@ph, full_name=@fn, email=@em, role=@ro, active=@ac, is_locked=@lk, is_two_factor_enabled=@tfa WHERE id=@id;"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Users.Extensions.cs","UPDATE","users","failed_login_attempts;last_login","users",,"UPDATE users SET last_login=NOW(), failed_login_attempts=0 WHERE id=@id"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Users.Extensions.cs","UPDATE","users","failed_login_attempts;last_failed_login","users",,"UPDATE users SET failed_login_attempts = IFNULL(failed_login_attempts,0) + 1, last_failed_login = NOW() WHERE id=@id"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Users.Extensions.cs","UPDATE","users","is_locked","users",,"UPDATE users SET is_locked=1 WHERE id=@id"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Users.Extensions.cs","UPDATE","users","failed_login_attempts;is_locked","users",,"UPDATE users SET is_locked=0, failed_login_attempts=0 WHERE id=@id"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Users.Extensions.cs","UPDATE","users","is_two_factor_enabled","users",,"UPDATE users SET is_two_factor_enabled=@tfa WHERE id=@id"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Users.Extensions.cs","UPDATE","users","password_reset_required","users",,"UPDATE users SET password_reset_required=1 WHERE id=@id"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Users.Extensions.cs","DELETE","users","","users",,"DELETE FROM users WHERE id=@id"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Validations.Extensions.cs","SELECT","validations","*","validations","System.Collections.Hashtable","SELECT * FROM validations ORDER BY date_start IS NULL, date_start DESC, id DESC"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Validations.Extensions.cs","SELECT","validations","*","validations","System.Collections.Hashtable","SELECT * FROM validations WHERE id=@id LIMIT 1"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Validations.Extensions.cs","INSERT","validations","code;comment;component_id;date_end;date_start;digital_signature;documentation;machine_id;next_due;status;type","validations",,"INSERT INTO validations (code, type, machine_id, component_id, date_start, date_end, documentation, comment, status, digital_signature, next_due) VALUES (@code,@type,@machine,@comp,@ds,@de,@doc,@comm,@status,@sig,@next);"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Validations.Extensions.cs","UPDATE","validations","code;comment;component_id;date_end;date_start;digital_signature;documentation;machine_id;next_due;status;type","validations",,"UPDATE validations SET code=@code, type=@type, machine_id=@machine, component_id=@comp, date_start=@ds, date_end=@de, documentation=@doc, comment=@comm, status=@status, digital_signature=@sig, next_due=@next WHERE id=@id;"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Validations.Extensions.cs","DELETE","validations","","validations",,"DELETE FROM validations WHERE id=@id"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Validations.Extensions.cs","INSERT","validation_audit","action;changed_at;details;device_info;digital_signature;source_ip;user_id;validation_id","validation_audit",,"INSERT INTO validation_audit (validation_id, user_id, action, changed_at, details, digital_signature, source_ip, device_info) VALUES (@vid,@uid,@act,UTC_TIMESTAMP(),@det,@sig,@ip,@dev);"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Validations.Extensions.cs","SELECT","validations","*","validations","System.Collections.Hashtable","SELECT * FROM validations ORDER BY date_start IS NULL, date_start DESC, id DESC"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Validations.Extensions.cs","SELECT","validations","*","validations","System.Collections.Hashtable","SELECT * FROM validations WHERE id=@id LIMIT 1"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Validations.Extensions.cs","INSERT","validations","code;comment;component_id;date_end;date_start;digital_signature;documentation;machine_id;next_due;status;type","validations",,"INSERT INTO validations (code, type, machine_id, component_id, date_start, date_end, documentation, comment, status, digital_signature, next_due) VALUES (@code,@type,@machine,@comp,@ds,@de,@doc,@comm,@status,@sig,@next);"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Validations.Extensions.cs","UPDATE","validations","code;comment;component_id;date_end;date_start;digital_signature;documentation;machine_id;next_due;status;type","validations",,"UPDATE validations SET code=@code, type=@type, machine_id=@machine, component_id=@comp, date_start=@ds, date_end=@de, documentation=@doc, comment=@comm, status=@status, digital_signature=@sig, next_due=@next WHERE id=@id;"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Validations.Extensions.cs","DELETE","validations","","validations",,"DELETE FROM validations WHERE id=@id"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.Validations.Extensions.cs","INSERT","validation_audit","action;changed_at;details;device_info;digital_signature;source_ip;user_id;validation_id","validation_audit",,"INSERT INTO validation_audit (validation_id, user_id, action, changed_at, details, digital_signature, source_ip, device_info) VALUES (@vid,@uid,@act,UTC_TIMESTAMP(),@det,@sig,@ip,@dev);"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.WorkOrders.Extensions.cs","SELECT","work_orders","*","work_orders","System.Collections.Hashtable","SELECT * FROM work_orders ORDER BY date_open DESC, id DESC"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.WorkOrders.Extensions.cs","SELECT","work_orders","*","work_orders","System.Collections.Hashtable","SELECT * FROM work_orders WHERE id=@id LIMIT 1"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.WorkOrders.Extensions.cs","INSERT","work_orders","assigned_to;component_id;created_by;date_close;date_open;description;digital_signature;machine_id;priority;related_incident;result;status;type","work_orders",,"INSERT INTO work_orders (machine_id, component_id, type, created_by, assigned_to, date_open, date_close, description, result, status, digital_signature, priority, related_incident) VALUES (@mid, @cid, @type, @cby, @asgn, @open, @close, @desc, @res, @status, @sig, @prio, @inc)"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.WorkOrders.Extensions.cs","UPDATE","work_orders","assigned_to;component_id;created_by;date_close;date_open;description;digital_signature;machine_id;priority;related_incident;result;status;type","work_orders",,"UPDATE work_orders SET machine_id=@mid, component_id=@cid, type=@type, created_by=@cby, assigned_to=@asgn, date_open=@open, date_close=@close, description=@desc, result=@res, status=@status, digital_signature=@sig, priority=@prio, related_incident=@inc WHERE id=@id"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.WorkOrders.Extensions.cs","INSERT","work_orders","description;machine_id;priority;status;type","work_orders",,"INSERT INTO work_orders (machine_id, type, description, status, priority) VALUES (@mid, @type, @desc, @status, @prio)"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.WorkOrders.Extensions.cs","UPDATE","work_orders","description;machine_id;priority;status;type","work_orders",,"UPDATE work_orders SET machine_id=@mid, type=@type, description=@desc, status=@status, priority=@prio WHERE id=@id"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.WorkOrders.Extensions.cs","INSERT","work_order_audit","action;device_info;note;source_ip;user_id;work_order_id","work_order_audit",,"INSERT INTO work_order_audit (work_order_id, user_id, action, note, source_ip, device_info) VALUES (@wo, @uid, @act, @note, @ip, @dev)"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.WorkOrders.Extensions.cs","SELECT","work_orders","*","work_orders","System.Collections.Hashtable","SELECT * FROM work_orders ORDER BY date_open DESC, id DESC"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.WorkOrders.Extensions.cs","SELECT","work_orders","*","work_orders","System.Collections.Hashtable","SELECT * FROM work_orders WHERE id=@id LIMIT 1"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.WorkOrders.Extensions.cs","INSERT","work_orders","assigned_to;component_id;created_by;date_close;date_open;description;digital_signature;machine_id;priority;related_incident;result;status;type","work_orders",,"INSERT INTO work_orders (machine_id, component_id, type, created_by, assigned_to, date_open, date_close, description, result, status, digital_signature, priority, related_incident) VALUES (@mid, @cid, @type, @cby, @asgn, @open, @close, @desc, @res, @status, @sig, @prio, @inc)"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.WorkOrders.Extensions.cs","UPDATE","work_orders","assigned_to;component_id;created_by;date_close;date_open;description;digital_signature;machine_id;priority;related_incident;result;status;type","work_orders",,"UPDATE work_orders SET machine_id=@mid, component_id=@cid, type=@type, created_by=@cby, assigned_to=@asgn, date_open=@open, date_close=@close, description=@desc, result=@res, status=@status, digital_signature=@sig, priority=@prio, related_incident=@inc WHERE id=@id"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.WorkOrders.Extensions.cs","INSERT","work_orders","description;machine_id;priority;status;type","work_orders",,"INSERT INTO work_orders (machine_id, type, description, status, priority) VALUES (@mid, @type, @desc, @status, @prio)"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.WorkOrders.Extensions.cs","UPDATE","work_orders","description;machine_id;priority;status;type","work_orders",,"UPDATE work_orders SET machine_id=@mid, type=@type, description=@desc, status=@status, priority=@prio WHERE id=@id"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.WorkOrders.Extensions.cs","DELETE","work_orders","","work_orders",,"DELETE FROM work_orders WHERE id=@id"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.WorkOrders.Extensions.cs","DELETE","work_orders","","work_orders",,"DELETE FROM work_orders WHERE id=@id"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.WorkOrders.Extensions.cs","UPDATE","work_orders","status","work_orders",,"UPDATE work_orders SET status='zavrsen' WHERE id=@id"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.WorkOrders.Extensions.cs","UPDATE","work_orders","date_close;status","work_orders",,"UPDATE work_orders SET status='zavrsen', date_close=NOW() WHERE id=@id"
"C:\GitHub\YASGMP\YASGMP\Services\DatabaseService.WorkOrders.Extensions.cs","INSERT","work_order_audit","action;device_info;note;source_ip;user_id;work_order_id","work_order_audit",,"INSERT INTO work_order_audit (work_order_id, user_id, action, note, source_ip, device_info) VALUES (@wo, @uid, @act, @note, @ip, @dev)"
"C:\GitHub\YASGMP\YASGMP\Services\RBACService.cs","INSERT","role_permissions","allowed;assigned_at;assigned_by;permission_id;role_id","role_permissions",,"INSERT INTO role_permissions (role_id, permission_id, allowed, assigned_by, assigned_at) VALUES (@r, @p, 1, @u, UTC_TIMESTAMP()) ON DUPLICATE KEY UPDATE allowed=VALUES(allowed), assigned_by=VALUES(assigned_by), assigned_at=VALUES(assigned_at);"
"C:\GitHub\YASGMP\YASGMP\Services\RBACService.cs","INSERT","roles","compliance_tags;created_at;created_by_id;description;is_deleted;last_modified_by_id;name;notes;org_unit;updated_at;version","roles",,"INSERT INTO roles(name, description, org_unit, compliance_tags, is_deleted, notes, created_at, updated_at, created_by_id, last_modified_by_id, version) VALUES (@n,@d,@ou,@ct,0,@note,UTC_TIMESTAMP(),UTC_TIMESTAMP(),@by,@by,1); SELECT LAST_INSERT_ID();"
"C:\GitHub\YASGMP\YASGMP\Services\RBACService.cs","UPDATE","roles","compliance_tags;description;last_modified_by_id;name;notes;org_unit;updated_at;version","roles",,"UPDATE roles SET name=@n, description=@d, org_unit=@ou, compliance_tags=@ct, notes=@note, updated_at=UTC_TIMESTAMP(), last_modified_by_id=@by, version=version+1 WHERE id=@id AND is_deleted=0;"
"C:\GitHub\YASGMP\YASGMP\Services\RBACService.cs","INSERT","role_permissions","allowed;assigned_at;assigned_by;permission_id;role_id","role_permissions",,"INSERT INTO role_permissions (role_id, permission_id, allowed, assigned_by, assigned_at) VALUES (@r, @p, 1, @u, UTC_TIMESTAMP()) ON DUPLICATE KEY UPDATE allowed=VALUES(allowed), assigned_by=VALUES(assigned_by), assigned_at=VALUES(assigned_at);"
"C:\GitHub\YASGMP\YASGMP\Services\RBACService.cs","DELETE","role_permissions","","role_permissions",,"DELETE FROM role_permissions WHERE role_id=@r AND permission_id=@p"
"C:\GitHub\YASGMP\YASGMP\Services\RBACService.cs","INSERT","roles","compliance_tags;created_at;created_by_id;description;is_deleted;last_modified_by_id;name;notes;org_unit;updated_at;version","roles",,"INSERT INTO roles(name, description, org_unit, compliance_tags, is_deleted, notes, created_at, updated_at, created_by_id, last_modified_by_id, version) VALUES (@n,@d,@ou,@ct,0,@note,UTC_TIMESTAMP(),UTC_TIMESTAMP(),@by,@by,1); SELECT LAST_INSERT_ID();"
"C:\GitHub\YASGMP\YASGMP\Services\RBACService.cs","UPDATE","roles","compliance_tags;description;last_modified_by_id;name;notes;org_unit;updated_at;version","roles",,"UPDATE roles SET name=@n, description=@d, org_unit=@ou, compliance_tags=@ct, notes=@note, updated_at=UTC_TIMESTAMP(), last_modified_by_id=@by, version=version+1 WHERE id=@id AND is_deleted=0;"
"C:\GitHub\YASGMP\YASGMP\Services\RBACService.cs","UPDATE","roles","is_deleted;last_modified_by_id;updated_at;version","roles",,"UPDATE roles SET is_deleted=1, updated_at=UTC_TIMESTAMP(), last_modified_by_id=@by, version=version+1 WHERE id=@id"
"C:\GitHub\YASGMP\YASGMP\Services\RBACService.cs","DELETE","role_permissions","","role_permissions",,"DELETE FROM role_permissions WHERE role_id=@id"
"C:\GitHub\YASGMP\YASGMP\Services\RBACService.cs","DELETE","user_roles","","user_roles",,"DELETE FROM user_roles WHERE role_id=@id"
"C:\GitHub\YASGMP\YASGMP\Services\SupplierAuditService.cs","INSERT","supplier_audit","action;changed_at;details;device_info;digital_signature;source_ip;supplier_id;user_id","supplier_audit",,"INSERT INTO supplier_audit (supplier_id, user_id, action, details, changed_at, source_ip, device_info, digital_signature) VALUES (@supplierId, @userId, @action, @details, @changedAt, @sourceIp, @deviceInfo, @digitalSignature)"
"C:\GitHub\YASGMP\YASGMP\Services\SupplierAuditService.cs","INSERT","supplier_audit","action;changed_at;details;device_info;digital_signature;source_ip;supplier_id;user_id","supplier_audit",,"INSERT INTO supplier_audit (supplier_id, user_id, action, details, changed_at, source_ip, device_info, digital_signature) VALUES (@supplierId, @userId, @action, @details, @changedAt, @sourceIp, @deviceInfo, @digitalSignature)"
"C:\GitHub\YASGMP\YASGMP\Services\UserService.cs","UPDATE","users","password_hash","users",,"UPDATE users SET password_hash=@ph WHERE id=@id"
"C:\GitHub\YASGMP\YASGMP\Services\ValidationAuditService.cs","SELECT","validation_audit","*","validation_audit","System.Collections.Hashtable","SELECT * FROM validation_audit WHERE validation_id=@vid ORDER BY changed_at DESC"
"C:\GitHub\YASGMP\YASGMP\Services\ValidationAuditService.cs","SELECT","validation_audit","*","validation_audit","System.Collections.Hashtable","SELECT * FROM validation_audit WHERE id=@id"
"C:\GitHub\YASGMP\YASGMP\Services\WindowManagerService.cs","SELECT","user_window_layouts","height;pos_x;pos_y;width","user_window_layouts","System.Collections.Hashtable","SELECT pos_x, pos_y, width, height FROM user_window_layouts WHERE user_id=@u AND page_type=@p LIMIT 1;"
"C:\GitHub\YASGMP\YASGMP\Services\WindowManagerService.cs","INSERT","user_window_layouts","height;page_type;pos_x;pos_y;saved_at;user_id;width","user_window_layouts",,"INSERT INTO user_window_layouts (user_id, page_type, pos_x, pos_y, width, height, saved_at) VALUES (@u,@p,@x,@y,@w,@h,UTC_TIMESTAMP()) ON DUPLICATE KEY UPDATE pos_x=VALUES(pos_x), pos_y=VALUES(pos_y), width=VALUES(width), height=VALUES(height), saved_at=UTC_TIMESTAMP();"
"C:\GitHub\YASGMP\YASGMP\Services\WindowManagerService.cs","SELECT","user_window_layouts","height;pos_x;pos_y;width","user_window_layouts","System.Collections.Hashtable","SELECT pos_x, pos_y, width, height FROM user_window_layouts WHERE user_id=@u AND page_type=@p LIMIT 1;"
"C:\GitHub\YASGMP\YASGMP\Services\WindowManagerService.cs","INSERT","user_window_layouts","height;page_type;pos_x;pos_y;saved_at;user_id;width","user_window_layouts",,"INSERT INTO user_window_layouts (user_id, page_type, pos_x, pos_y, width, height, saved_at) VALUES (@u,@p,@x,@y,@w,@h,UTC_TIMESTAMP()) ON DUPLICATE KEY UPDATE pos_x=VALUES(pos_x), pos_y=VALUES(pos_y), width=VALUES(width), height=VALUES(height), saved_at=UTC_TIMESTAMP();"
"C:\GitHub\YASGMP\YASGMP\tools\schema\Snapshotter\Program.cs","SELECT","information_schema","character_maximum_length;collation_name;column_comment;column_default;column_key;column_name;column_type;data_type;datetime_precision;extra;is_nullable;numeric_precision;numeric_scale;table_name","information_schema","System.Collections.Hashtable","SELECT TABLE_NAME, COLUMN_NAME, DATA_TYPE, COLUMN_TYPE, IS_NULLABLE, COLUMN_DEFAULT, EXTRA, COLUMN_KEY, CHARACTER_MAXIMUM_LENGTH, NUMERIC_PRECISION, NUMERIC_SCALE, DATETIME_PRECISION, COLLATION_NAME, COLUMN_COMMENT FROM information_schema.columns WHERE table_schema = '{dbName}' ORDER BY TABLE_NAME, ORDINAL_POSITION;"
"C:\GitHub\YASGMP\YASGMP\tools\schema\Snapshotter\Program.cs","SELECT","information_schema","column_name;ordinal_position;table_name","information_schema","System.Collections.Hashtable","SELECT tc.TABLE_NAME, kcu.COLUMN_NAME, kcu.ORDINAL_POSITION FROM information_schema.table_constraints tc JOIN information_schema.key_column_usage kcu ON tc.CONSTRAINT_SCHEMA = kcu.CONSTRAINT_SCHEMA AND tc.TABLE_NAME = kcu.TABLE_NAME AND tc.CONSTRAINT_NAME = kcu.CONSTRAINT_NAME WHERE tc.CONSTRAINT_SCHEMA = '{dbName}' AND tc.CONSTRAINT_TYPE = 'PRIMARY KEY' ORDER BY tc.TABLE_NAME, kcu.ORDINAL_POSITION;"
"C:\GitHub\YASGMP\YASGMP\tools\schema\Snapshotter\Program.cs","SELECT","information_schema","column_name;constraint_name;delete_rule;ordinal_position;referenced_column_name;referenced_table_name;table_name;update_rule","information_schema","System.Collections.Hashtable","SELECT k.TABLE_NAME, k.CONSTRAINT_NAME, k.COLUMN_NAME, k.ORDINAL_POSITION, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME, rc.UPDATE_RULE, rc.DELETE_RULE FROM information_schema.key_column_usage k JOIN information_schema.referential_constraints rc ON rc.CONSTRAINT_SCHEMA = k.CONSTRAINT_SCHEMA AND rc.CONSTRAINT_NAME = k.CONSTRAINT_NAME WHERE k.CONSTRAINT_SCHEMA = '{dbName}' AND k.REFERENCED_TABLE_NAME IS NOT NULL ORDER BY k.TABLE_NAME, k.CONSTRAINT_NAME, k.ORDINAL_POSITION;"
"C:\GitHub\YASGMP\YASGMP\tools\schema\Snapshotter\Program.cs","SELECT","information_schema","cardinality;collation;column_name;comment;index_name;index_type;non_unique;nullable;seq_in_index;sub_part;table_name","information_schema","System.Collections.Hashtable","SELECT TABLE_NAME, INDEX_NAME, NON_UNIQUE, SEQ_IN_INDEX, COLUMN_NAME, COLLATION, CARDINALITY, SUB_PART, NULLABLE, INDEX_TYPE, COMMENT FROM information_schema.statistics WHERE TABLE_SCHEMA = '{dbName}' ORDER BY TABLE_NAME, INDEX_NAME, SEQ_IN_INDEX;"
"C:\GitHub\YASGMP\YASGMP\tools\schema\Snapshotter\Program.cs","SELECT","information_schema","schema_name","information_schema","System.Collections.Hashtable","SELECT SCHEMA_NAME FROM information_schema.schemata WHERE SCHEMA_NAME IN ('yasgmp','yasmp') ORDER BY SCHEMA_NAME='yasgmp' DESC LIMIT 1;"
"C:\GitHub\YASGMP\YASGMP\tools\schema\Snapshotter\Program.cs","SELECT","information_schema","table_name","information_schema","System.Collections.Hashtable","SELECT TABLE_NAME FROM information_schema.tables WHERE table_schema='{dbName}' AND TABLE_TYPE='BASE TABLE' ORDER BY TABLE_NAME;"
"C:\GitHub\YASGMP\YASGMP\tools\schema\Snapshotter\Program.cs","SELECT","information_schema","table_name","information_schema","System.Collections.Hashtable","SELECT TABLE_NAME FROM information_schema.views WHERE table_schema='{dbName}' ORDER BY TABLE_NAME;"
"C:\GitHub\YASGMP\YASGMP\tools\schema\Snapshotter\Program.cs","SELECT","information_schema","trigger_name","information_schema","System.Collections.Hashtable","SELECT TRIGGER_NAME FROM information_schema.triggers WHERE trigger_schema='{dbName}' ORDER BY TRIGGER_NAME;"
"C:\GitHub\YASGMP\YASGMP\tools\schema\Snapshotter\Program.cs","SELECT","information_schema","routine_name;routine_type","information_schema","System.Collections.Hashtable","SELECT ROUTINE_NAME, ROUTINE_TYPE FROM information_schema.routines WHERE ROUTINE_SCHEMA='{dbName}' ORDER BY ROUTINE_NAME;"
"C:\GitHub\YASGMP\YASGMP\tools\schema\Snapshotter\Program.cs","SELECT","information_schema","character_maximum_length;collation_name;column_comment;column_default;column_key;column_name;column_type;data_type;datetime_precision;extra;is_nullable;numeric_precision;numeric_scale;table_name","information_schema","System.Collections.Hashtable","SELECT TABLE_NAME, COLUMN_NAME, DATA_TYPE, COLUMN_TYPE, IS_NULLABLE, COLUMN_DEFAULT, EXTRA, COLUMN_KEY, CHARACTER_MAXIMUM_LENGTH, NUMERIC_PRECISION, NUMERIC_SCALE, DATETIME_PRECISION, COLLATION_NAME, COLUMN_COMMENT FROM information_schema.columns WHERE table_schema = '{dbName}' ORDER BY TABLE_NAME, ORDINAL_POSITION;"
"C:\GitHub\YASGMP\YASGMP\tools\schema\Snapshotter\Program.cs","SELECT","information_schema","column_name;ordinal_position;table_name","information_schema","System.Collections.Hashtable","SELECT tc.TABLE_NAME, kcu.COLUMN_NAME, kcu.ORDINAL_POSITION FROM information_schema.table_constraints tc JOIN information_schema.key_column_usage kcu ON tc.CONSTRAINT_SCHEMA = kcu.CONSTRAINT_SCHEMA AND tc.TABLE_NAME = kcu.TABLE_NAME AND tc.CONSTRAINT_NAME = kcu.CONSTRAINT_NAME WHERE tc.CONSTRAINT_SCHEMA = '{dbName}' AND tc.CONSTRAINT_TYPE = 'PRIMARY KEY' ORDER BY tc.TABLE_NAME, kcu.ORDINAL_POSITION;"
"C:\GitHub\YASGMP\YASGMP\tools\schema\Snapshotter\Program.cs","SELECT","information_schema","column_name;constraint_name;delete_rule;ordinal_position;referenced_column_name;referenced_table_name;table_name;update_rule","information_schema","System.Collections.Hashtable","SELECT k.TABLE_NAME, k.CONSTRAINT_NAME, k.COLUMN_NAME, k.ORDINAL_POSITION, k.REFERENCED_TABLE_NAME, k.REFERENCED_COLUMN_NAME, rc.UPDATE_RULE, rc.DELETE_RULE FROM information_schema.key_column_usage k JOIN information_schema.referential_constraints rc ON rc.CONSTRAINT_SCHEMA = k.CONSTRAINT_SCHEMA AND rc.CONSTRAINT_NAME = k.CONSTRAINT_NAME WHERE k.CONSTRAINT_SCHEMA = '{dbName}' AND k.REFERENCED_TABLE_NAME IS NOT NULL ORDER BY k.TABLE_NAME, k.CONSTRAINT_NAME, k.ORDINAL_POSITION;"
"C:\GitHub\YASGMP\YASGMP\tools\schema\Snapshotter\Program.cs","SELECT","information_schema","cardinality;collation;column_name;comment;index_name;index_type;non_unique;nullable;seq_in_index;sub_part;table_name","information_schema","System.Collections.Hashtable","SELECT TABLE_NAME, INDEX_NAME, NON_UNIQUE, SEQ_IN_INDEX, COLUMN_NAME, COLLATION, CARDINALITY, SUB_PART, NULLABLE, INDEX_TYPE, COMMENT FROM information_schema.statistics WHERE TABLE_SCHEMA = '{dbName}' ORDER BY TABLE_NAME, INDEX_NAME, SEQ_IN_INDEX;"
"C:\GitHub\YASGMP\YASGMP\tools\SchemaSnapshot\Program.cs","SELECT","information_schema","engine;ifnull(table_comment;table_collation","information_schema","System.Collections.Hashtable","SELECT ENGINE, TABLE_COLLATION, IFNULL(TABLE_COMMENT,'') FROM information_schema.tables WHERE table_schema=DATABASE() AND table_name=@t"
"C:\GitHub\YASGMP\YASGMP\tools\SchemaSnapshot\Program.cs","SELECT","information_schema","column_default;column_name;column_type;data_type;extra;ifnull(column_comment;is_nullable;ordinal_position","information_schema","System.Collections.Hashtable","SELECT COLUMN_NAME, DATA_TYPE, COLUMN_TYPE, IS_NULLABLE, COLUMN_DEFAULT, EXTRA, ORDINAL_POSITION, IFNULL(COLUMN_COMMENT,'') FROM information_schema.columns WHERE table_schema=DATABASE() AND table_name=@t ORDER BY ORDINAL_POSITION"
"C:\GitHub\YASGMP\YASGMP\tools\SchemaSnapshot\Program.cs","SELECT","information_schema","column_name;constraint_name","information_schema","System.Collections.Hashtable","SELECT COLUMN_NAME, CONSTRAINT_NAME FROM information_schema.key_column_usage WHERE table_schema=DATABASE() AND table_name=@t"
"C:\GitHub\YASGMP\YASGMP\tools\SchemaSnapshot\Program.cs","SELECT","information_schema","table_name","information_schema","System.Collections.Hashtable","SELECT table_name FROM information_schema.tables WHERE table_schema=DATABASE()"
"C:\GitHub\YASGMP\YASGMP\tools\SchemaSnapshot\Program.cs","SELECT","information_schema","engine;ifnull(table_comment;table_collation","information_schema","System.Collections.Hashtable","SELECT ENGINE, TABLE_COLLATION, IFNULL(TABLE_COMMENT,'') FROM information_schema.tables WHERE table_schema=DATABASE() AND table_name=@t"
"C:\GitHub\YASGMP\YASGMP\tools\SchemaSnapshot\Program.cs","SELECT","information_schema","column_default;column_name;column_type;data_type;extra;ifnull(column_comment;is_nullable;ordinal_position","information_schema","System.Collections.Hashtable","SELECT COLUMN_NAME, DATA_TYPE, COLUMN_TYPE, IS_NULLABLE, COLUMN_DEFAULT, EXTRA, ORDINAL_POSITION, IFNULL(COLUMN_COMMENT,'') FROM information_schema.columns WHERE table_schema=DATABASE() AND table_name=@t ORDER BY ORDINAL_POSITION"
"C:\GitHub\YASGMP\YASGMP\tools\SchemaSnapshot\Program.cs","SELECT","information_schema","column_name;constraint_name","information_schema","System.Collections.Hashtable","SELECT COLUMN_NAME, CONSTRAINT_NAME FROM information_schema.key_column_usage WHERE table_schema=DATABASE() AND table_name=@t"
"C:\GitHub\YASGMP\YASGMP\tools\SchemaSync\Program.cs","SELECT","information_schema","table_name","information_schema","System.Collections.Hashtable","SELECT table_name FROM information_schema.tables WHERE table_schema=DATABASE()"
"C:\GitHub\YASGMP\YASGMP\tools\SchemaSync\Program.cs","SELECT","information_schema","column_name","information_schema","System.Collections.Hashtable","SELECT column_name FROM information_schema.columns WHERE table_schema=DATABASE() AND table_name=@t"
"C:\GitHub\YASGMP\YASGMP\tools\SourceSchemaSync\Program.cs","SELECT","information_schema","column_name;table_name","information_schema","System.Collections.Hashtable","SELECT table_name, column_name FROM information_schema.columns WHERE table_schema = DATABASE()"
"C:\GitHub\YASGMP\YASGMP\ViewModels\CalibrationsViewModel.cs","SELECT","calibrations","*","calibrations","System.Collections.Hashtable","SELECT * FROM calibrations ORDER BY calibration_date DESC"
"C:\GitHub\YASGMP\YASGMP\ViewModels\CalibrationsViewModel.cs","DELETE","calibrations","","calibrations",,"DELETE FROM calibrations WHERE id=@id"
"C:\GitHub\YASGMP\YASGMP\ViewModels\ChangeControlViewModel.cs","SELECT","change_controls","*","change_controls","System.Collections.Hashtable","SELECT * FROM change_controls"
"C:\GitHub\YASGMP\YASGMP\ViewModels\ChangeControlViewModel.cs","INSERT","change_controls","code;date_requested;description;requested_by_id;status;title","change_controls",,"INSERT INTO change_controls (code, title, description, status, requested_by_id, date_requested) VALUES (@code, @title, @desc, @status, @rbid, @dt)"
"C:\GitHub\YASGMP\YASGMP\ViewModels\ChangeControlViewModel.cs","UPDATE","change_controls","status","change_controls",,"UPDATE change_controls SET status=@status WHERE id=@id"
"C:\GitHub\YASGMP\YASGMP\ViewModels\ChangeControlViewModel.cs","UPDATE","change_controls","status","change_controls",,"UPDATE change_controls SET status=@status WHERE id=@id"
"C:\GitHub\YASGMP\YASGMP\ViewModels\ChangeControlViewModel.cs","UPDATE","change_controls","status","change_controls",,"UPDATE change_controls SET status=@status WHERE id=@id"
"C:\GitHub\YASGMP\YASGMP\Views\CalibrationsPage.xaml.cs","INSERT","calibrations","calibration_date;cert_doc;comment;component_id;digital_signature;last_modified;last_modified_by_id;next_due;result;supplier_id","calibrations",,"INSERT INTO calibrations (component_id, supplier_id, calibration_date, next_due, cert_doc, result, comment, digital_signature, last_modified, last_modified_by_id) VALUES (@cid, @supid, @cdate, @ndue, @cert, @res, @comm, @sig, @mod, @modby)"
"C:\GitHub\YASGMP\YASGMP\Views\CalibrationsPage.xaml.cs","UPDATE","calibrations","calibration_date;cert_doc;comment;component_id;digital_signature;last_modified;last_modified_by_id;next_due;result;supplier_id","calibrations",,"UPDATE calibrations SET component_id=@cid, supplier_id=@supid, calibration_date=@cdate, next_due=@ndue, cert_doc=@cert, result=@res, comment=@comm, digital_signature=@sig, last_modified=@mod, last_modified_by_id=@modby WHERE id=@id"
"C:\GitHub\YASGMP\YASGMP\Views\CalibrationsPage.xaml.cs","SELECT","calibrations","*","calibrations","System.Collections.Hashtable","SELECT * FROM calibrations ORDER BY calibration_date DESC"
"C:\GitHub\YASGMP\YASGMP\Views\CalibrationsPage.xaml.cs","INSERT","calibrations","calibration_date;cert_doc;comment;component_id;digital_signature;last_modified;last_modified_by_id;next_due;result;supplier_id","calibrations",,"INSERT INTO calibrations (component_id, supplier_id, calibration_date, next_due, cert_doc, result, comment, digital_signature, last_modified, last_modified_by_id) VALUES (@cid, @supid, @cdate, @ndue, @cert, @res, @comm, @sig, @mod, @modby)"
"C:\GitHub\YASGMP\YASGMP\Views\CalibrationsPage.xaml.cs","UPDATE","calibrations","calibration_date;cert_doc;comment;component_id;digital_signature;last_modified;last_modified_by_id;next_due;result;supplier_id","calibrations",,"UPDATE calibrations SET component_id=@cid, supplier_id=@supid, calibration_date=@cdate, next_due=@ndue, cert_doc=@cert, result=@res, comment=@comm, digital_signature=@sig, last_modified=@mod, last_modified_by_id=@modby WHERE id=@id"
"C:\GitHub\YASGMP\YASGMP\Views\ComponentsPage.xaml.cs","SELECT","machine_components","code;id;install_date;machine_id;name;sop_doc;status;type","machine_components","System.Collections.Hashtable","SELECT id, machine_id, code, name, type, sop_doc, status, install_date FROM machine_components WHERE is_deleted = 0 OR is_deleted IS NULL ORDER BY name;"
"C:\GitHub\YASGMP\YASGMP\Views\ComponentsPage.xaml.cs","INSERT","machine_components","code;install_date;machine_id;name;sop_doc;status;type","machine_components",,"INSERT INTO machine_components (machine_id, code, name, type, sop_doc, status, install_date) VALUES (@machine_id, @code, @name, @type, @sop_doc, @status, @install_date);"
"C:\GitHub\YASGMP\YASGMP\Views\ComponentsPage.xaml.cs","UPDATE","machine_components","code;install_date;machine_id;name;sop_doc;status;type","machine_components",,"UPDATE machine_components SET machine_id=@machine_id, code=@code, name=@name, type=@type, sop_doc=@sop_doc, status=@status, install_date=@install_date WHERE id=@id;"
"C:\GitHub\YASGMP\YASGMP\Views\ComponentsPage.xaml.cs","UPDATE","machine_components","deleted_at;is_deleted","machine_components",,"UPDATE machine_components SET is_deleted=1, deleted_at=NOW() WHERE id=@id;"
"C:\GitHub\YASGMP\YASGMP\Views\ComponentsPage.xaml.cs","SELECT","machine_components","code;id;install_date;machine_id;name;sop_doc;status;type","machine_components","System.Collections.Hashtable","SELECT id, machine_id, code, name, type, sop_doc, status, install_date FROM machine_components WHERE is_deleted = 0 OR is_deleted IS NULL ORDER BY name;"
"C:\GitHub\YASGMP\YASGMP\Views\ComponentsPage.xaml.cs","INSERT","machine_components","code;install_date;machine_id;name;sop_doc;status;type","machine_components",,"INSERT INTO machine_components (machine_id, code, name, type, sop_doc, status, install_date) VALUES (@machine_id, @code, @name, @type, @sop_doc, @status, @install_date);"
"C:\GitHub\YASGMP\YASGMP\Views\ComponentsPage.xaml.cs","UPDATE","machine_components","code;install_date;machine_id;name;sop_doc;status;type","machine_components",,"UPDATE machine_components SET machine_id=@machine_id, code=@code, name=@name, type=@type, sop_doc=@sop_doc, status=@status, install_date=@install_date WHERE id=@id;"
"C:\GitHub\YASGMP\YASGMP\Views\ComponentsPage.xaml.cs","UPDATE","machine_components","deleted_at;is_deleted","machine_components",,"UPDATE machine_components SET is_deleted=1, deleted_at=NOW() WHERE id=@id;"
"C:\GitHub\YASGMP\YASGMP\Views\MachinesPage.xaml.cs","SELECT","machines","code;id;install_date;location;manufacturer;name;qr_code;status;urs_doc","machines","System.Collections.Hashtable","SELECT id, code, name, manufacturer, location, install_date, urs_doc, status, qr_code FROM machines"
"C:\GitHub\YASGMP\YASGMP\Views\MachinesPage.xaml.cs","INSERT","machines","code;install_date;location;manufacturer;name;qr_code;status;urs_doc","machines",,"INSERT INTO machines (code, name, manufacturer, location, install_date, urs_doc, status, qr_code) VALUES (@code, @name, @manufacturer, @location, @install_date, @urs_doc, @status, @qr_code)"
"C:\GitHub\YASGMP\YASGMP\Views\MachinesPage.xaml.cs","UPDATE","machines","code;install_date;location;manufacturer;name;qr_code;status;urs_doc","machines",,"UPDATE machines SET code=@code, name=@name, manufacturer=@manufacturer, location=@location, install_date=@install_date, urs_doc=@urs_doc, status=@status, qr_code=@qr_code WHERE id=@id"
"C:\GitHub\YASGMP\YASGMP\Views\MachinesPage.xaml.cs","SELECT","machines","code;id;install_date;location;manufacturer;name;qr_code;status;urs_doc","machines","System.Collections.Hashtable","SELECT id, code, name, manufacturer, location, install_date, urs_doc, status, qr_code FROM machines"
"C:\GitHub\YASGMP\YASGMP\Views\MachinesPage.xaml.cs","INSERT","machines","code;install_date;location;manufacturer;name;qr_code;status;urs_doc","machines",,"INSERT INTO machines (code, name, manufacturer, location, install_date, urs_doc, status, qr_code) VALUES (@code, @name, @manufacturer, @location, @install_date, @urs_doc, @status, @qr_code)"
"C:\GitHub\YASGMP\YASGMP\Views\MachinesPage.xaml.cs","UPDATE","machines","code;install_date;location;manufacturer;name;qr_code;status;urs_doc","machines",,"UPDATE machines SET code=@code, name=@name, manufacturer=@manufacturer, location=@location, install_date=@install_date, urs_doc=@urs_doc, status=@status, qr_code=@qr_code WHERE id=@id"
"C:\GitHub\YASGMP\YASGMP\Views\MachinesPage.xaml.cs","DELETE","machines","","machines",,"DELETE FROM machines WHERE id=@id"
"C:\GitHub\YASGMP\YASGMP\Views\PartsPage.xaml.cs","SELECT","parts","code;id;image;location;name;price;stock;supplier","parts","System.Collections.Hashtable","SELECT id, code, name, supplier, price, stock, location, image FROM parts"
"C:\GitHub\YASGMP\YASGMP\Views\PartsPage.xaml.cs","INSERT","parts","code;image;location;name;price;stock;supplier","parts",,"INSERT INTO parts (code, name, supplier, price, stock, location, image) VALUES (@code, @name, @supplier, @price, @stock, @location, @image)"
"C:\GitHub\YASGMP\YASGMP\Views\PartsPage.xaml.cs","UPDATE","parts","code;image;location;name;price;stock;supplier","parts",,"UPDATE parts SET code=@code, name=@name, supplier=@supplier, price=@price, stock=@stock, location=@location, image=@image WHERE id=@id"
"C:\GitHub\YASGMP\YASGMP\Views\PartsPage.xaml.cs","SELECT","parts","code;id;image;location;name;price;stock;supplier","parts","System.Collections.Hashtable","SELECT id, code, name, supplier, price, stock, location, image FROM parts"
"C:\GitHub\YASGMP\YASGMP\Views\PartsPage.xaml.cs","INSERT","parts","code;image;location;name;price;stock;supplier","parts",,"INSERT INTO parts (code, name, supplier, price, stock, location, image) VALUES (@code, @name, @supplier, @price, @stock, @location, @image)"
"C:\GitHub\YASGMP\YASGMP\Views\PartsPage.xaml.cs","UPDATE","parts","code;image;location;name;price;stock;supplier","parts",,"UPDATE parts SET code=@code, name=@name, supplier=@supplier, price=@price, stock=@stock, location=@location, image=@image WHERE id=@id"
"C:\GitHub\YASGMP\YASGMP\Views\PartsPage.xaml.cs","DELETE","parts","","parts",,"DELETE FROM parts WHERE id=@id"
"C:\GitHub\YASGMP\YASGMP\Views\SuppliersPage.xaml.cs","SELECT","suppliers","address;city;contract_file;country;email;id;name;notes;phone;supplier_type;vat_number;website","suppliers","System.Collections.Hashtable","SELECT id, name, vat_number, address, city, country, email, phone, website, supplier_type, notes, contract_file FROM suppliers"
"C:\GitHub\YASGMP\YASGMP\Views\SuppliersPage.xaml.cs","INSERT","suppliers","address;city;contract_file;country;email;name;notes;phone;supplier_type;vat_number;website","suppliers",,"INSERT INTO suppliers (name, vat_number, address, city, country, email, phone, website, supplier_type, notes, contract_file) VALUES (@name, @vat_number, @address, @city, @country, @email, @phone, @website, @supplier_type, @notes, @contract_file)"
"C:\GitHub\YASGMP\YASGMP\Views\SuppliersPage.xaml.cs","UPDATE","suppliers","address;city;contract_file;country;email;name;notes;phone;supplier_type;vat_number;website","suppliers",,"UPDATE suppliers SET name=@name, vat_number=@vat_number, address=@address, city=@city, country=@country, email=@email, phone=@phone, website=@website, supplier_type=@supplier_type, notes=@notes, contract_file=@contract_file WHERE id=@id"
"C:\GitHub\YASGMP\YASGMP\Views\SuppliersPage.xaml.cs","SELECT","suppliers","address;city;contract_file;country;email;id;name;notes;phone;supplier_type;vat_number;website","suppliers","System.Collections.Hashtable","SELECT id, name, vat_number, address, city, country, email, phone, website, supplier_type, notes, contract_file FROM suppliers"
"C:\GitHub\YASGMP\YASGMP\Views\SuppliersPage.xaml.cs","INSERT","suppliers","address;city;contract_file;country;email;name;notes;phone;supplier_type;vat_number;website","suppliers",,"INSERT INTO suppliers (name, vat_number, address, city, country, email, phone, website, supplier_type, notes, contract_file) VALUES (@name, @vat_number, @address, @city, @country, @email, @phone, @website, @supplier_type, @notes, @contract_file)"
"C:\GitHub\YASGMP\YASGMP\Views\SuppliersPage.xaml.cs","UPDATE","suppliers","address;city;contract_file;country;email;name;notes;phone;supplier_type;vat_number;website","suppliers",,"UPDATE suppliers SET name=@name, vat_number=@vat_number, address=@address, city=@city, country=@country, email=@email, phone=@phone, website=@website, supplier_type=@supplier_type, notes=@notes, contract_file=@contract_file WHERE id=@id"
"C:\GitHub\YASGMP\YASGMP\Views\SuppliersPage.xaml.cs","DELETE","suppliers","","suppliers",,"DELETE FROM suppliers WHERE id=@id"
