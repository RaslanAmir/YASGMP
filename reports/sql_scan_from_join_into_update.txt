.\db execute\01a_ref_support.sql:10:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\db execute\01a_ref_support.sql:23:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\db execute\01a_ref_support.sql:27:  CONSTRAINT `fk_ref_value_domain` FOREIGN KEY (`domain_id`) REFERENCES `ref_domain` (`id`) ON DELETE CASCADE ON UPDATE CASCADE
.\db execute\01a_ref_support.sql:43:    INSERT INTO ref_domain(`name`) VALUES (p_domain)
.\db execute\01a_ref_support.sql:48:    INSERT INTO ref_value(`domain_id`,`code`,`label`,`is_active`)
.\db execute\01_align_core.sql:14:        SELECT 1 FROM INFORMATION_SCHEMA.COLUMNS
.\db execute\01_align_core.sql:59:CALL add_column_if_missing('deviations','updated_at', 'datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP');
.\db execute\README.txt:28:  SELECT COUNT(*) FROM system_event_log WHERE event_time > NOW() - INTERVAL 10 MINUTE;
.\db execute\README.txt:31:  SELECT column_name FROM information_schema.columns WHERE table_schema='yasgmp' AND table_name='system_event_log';
.\db execute\README.txt:32:  SELECT column_name FROM information_schema.columns WHERE table_schema='yasgmp' AND table_name='user_login_audit';
.\YASGMP.sql:44:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\YASGMP.sql:72:    IF (SELECT COUNT(*) FROM users WHERE id = NEW.admin_id) = 0 THEN
.\YASGMP.sql:92:  INSERT INTO system_event_log
.\YASGMP.sql:113:/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `trg_admin_activity_log_au_audit` AFTER UPDATE ON `admin_activity_log` FOR EACH ROW BEGIN
.\YASGMP.sql:114:  INSERT INTO system_event_log
.\YASGMP.sql:137:  INSERT INTO system_event_log
.\YASGMP.sql:166:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\YASGMP.sql:194:  INSERT INTO system_event_log
.\YASGMP.sql:215:/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `trg_api_audit_log_au_audit` AFTER UPDATE ON `api_audit_log` FOR EACH ROW BEGIN
.\YASGMP.sql:216:  INSERT INTO system_event_log
.\YASGMP.sql:239:  INSERT INTO system_event_log
.\YASGMP.sql:267:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\YASGMP.sql:293:  INSERT INTO system_event_log
.\YASGMP.sql:314:/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `trg_api_keys_au_audit` AFTER UPDATE ON `api_keys` FOR EACH ROW BEGIN
.\YASGMP.sql:315:  INSERT INTO system_event_log
.\YASGMP.sql:338:  INSERT INTO system_event_log
.\YASGMP.sql:372:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\YASGMP.sql:402:  INSERT INTO system_event_log
.\YASGMP.sql:423:/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `trg_api_usage_log_au_audit` AFTER UPDATE ON `api_usage_log` FOR EACH ROW BEGIN
.\YASGMP.sql:424:  INSERT INTO system_event_log
.\YASGMP.sql:447:  INSERT INTO system_event_log
.\YASGMP.sql:478:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\YASGMP.sql:503:  INSERT INTO system_event_log
.\YASGMP.sql:524:/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `trg_attachments_au_audit` AFTER UPDATE ON `attachments` FOR EACH ROW BEGIN
.\YASGMP.sql:525:  INSERT INTO system_event_log
.\YASGMP.sql:548:  INSERT INTO system_event_log
.\YASGMP.sql:574:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\YASGMP.sql:599:  INSERT INTO system_event_log
.\YASGMP.sql:620:/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `trg_buildings_au_audit` AFTER UPDATE ON `buildings` FOR EACH ROW BEGIN
.\YASGMP.sql:621:  INSERT INTO system_event_log
.\YASGMP.sql:629:    INSERT INTO system_event_log
.\YASGMP.sql:638:    INSERT INTO system_event_log
.\YASGMP.sql:661:  INSERT INTO system_event_log
.\YASGMP.sql:692:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\YASGMP.sql:721:  INSERT INTO system_event_log
.\YASGMP.sql:742:/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `trg_calibration_audit_log_au_audit` AFTER UPDATE ON `calibration_audit_log` FOR EACH ROW BEGIN
.\YASGMP.sql:743:  INSERT INTO system_event_log
.\YASGMP.sql:766:  INSERT INTO system_event_log
.\YASGMP.sql:796:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\YASGMP.sql:823:  INSERT INTO system_event_log
.\YASGMP.sql:844:/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `trg_calibration_export_log_au_audit` AFTER UPDATE ON `calibration_export_log` FOR EACH ROW BEGIN
.\YASGMP.sql:845:  INSERT INTO system_event_log
.\YASGMP.sql:868:  INSERT INTO system_event_log
.\YASGMP.sql:898:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\YASGMP.sql:945:  INSERT INTO system_event_log
.\YASGMP.sql:966:/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `trg_cs_sync_u` BEFORE UPDATE ON `calibration_sensors` FOR EACH ROW BEGIN
.\YASGMP.sql:986:/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `trg_calibration_sensors_au_audit` AFTER UPDATE ON `calibration_sensors` FOR EACH ROW BEGIN
.\YASGMP.sql:987:  INSERT INTO system_event_log
.\YASGMP.sql:1010:  INSERT INTO system_event_log
.\YASGMP.sql:1040:  `last_modified` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\YASGMP.sql:1044:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\YASGMP.sql:1095:    INSERT INTO calibration_audit_log (
.\YASGMP.sql:1102:    INSERT INTO system_event_log(user_id, event_type, table_name, related_module, record_id, description, source_ip, severity)
.\YASGMP.sql:1121:  INSERT INTO system_event_log
.\YASGMP.sql:1142:/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `trg_cal_sync2_u` BEFORE UPDATE ON `calibrations` FOR EACH ROW BEGIN
.\YASGMP.sql:1162:/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `trg_calibrations_update` AFTER UPDATE ON `calibrations` FOR EACH ROW BEGIN
.\YASGMP.sql:1163:    INSERT INTO calibration_audit_log (
.\YASGMP.sql:1169:    INSERT INTO system_event_log(user_id, event_type, table_name, related_module, record_id, field_name, old_value, new_value, description, source_ip, severity)
.\YASGMP.sql:1187:/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `trg_calibrations_au_audit` AFTER UPDATE ON `calibrations` FOR EACH ROW BEGIN
.\YASGMP.sql:1188:  INSERT INTO system_event_log
.\YASGMP.sql:1211:    INSERT INTO calibration_audit_log (
.\YASGMP.sql:1217:    INSERT INTO system_event_log(user_id, event_type, table_name, related_module, record_id, description, source_ip, severity)
.\YASGMP.sql:1236:  INSERT INTO system_event_log
.\YASGMP.sql:1266:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\YASGMP.sql:1293:  INSERT INTO system_event_log
.\YASGMP.sql:1314:/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `trg_capa_action_log_au_audit` AFTER UPDATE ON `capa_action_log` FOR EACH ROW BEGIN
.\YASGMP.sql:1315:  INSERT INTO system_event_log
.\YASGMP.sql:1338:  INSERT INTO system_event_log
.\YASGMP.sql:1366:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\YASGMP.sql:1391:  INSERT INTO system_event_log
.\YASGMP.sql:1412:/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `trg_capa_actions_au_audit` AFTER UPDATE ON `capa_actions` FOR EACH ROW BEGIN
.\YASGMP.sql:1413:  INSERT INTO system_event_log
.\YASGMP.sql:1436:  INSERT INTO system_event_log
.\YASGMP.sql:1466:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\YASGMP.sql:1512:  INSERT INTO system_event_log
.\YASGMP.sql:1533:/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `trg_capa_sync_u` BEFORE UPDATE ON `capa_cases` FOR EACH ROW BEGIN
.\YASGMP.sql:1553:/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `trg_capa_cases_au_audit` AFTER UPDATE ON `capa_cases` FOR EACH ROW BEGIN
.\YASGMP.sql:1554:  INSERT INTO system_event_log
.\YASGMP.sql:1577:  INSERT INTO system_event_log
.\YASGMP.sql:1606:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\YASGMP.sql:1633:  INSERT INTO system_event_log
.\YASGMP.sql:1654:/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `trg_capa_status_history_au_audit` AFTER UPDATE ON `capa_status_history` FOR EACH ROW BEGIN
.\YASGMP.sql:1655:  INSERT INTO system_event_log
.\YASGMP.sql:1678:  INSERT INTO system_event_log
.\YASGMP.sql:1706:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\YASGMP.sql:1731:  INSERT INTO system_event_log
.\YASGMP.sql:1752:/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `trg_checklist_items_au_audit` AFTER UPDATE ON `checklist_items` FOR EACH ROW BEGIN
.\YASGMP.sql:1753:  INSERT INTO system_event_log
.\YASGMP.sql:1776:  INSERT INTO system_event_log
.\YASGMP.sql:1803:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\YASGMP.sql:1829:  INSERT INTO system_event_log
.\YASGMP.sql:1850:/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `trg_checklist_templates_au_audit` AFTER UPDATE ON `checklist_templates` FOR EACH ROW BEGIN
.\YASGMP.sql:1851:  INSERT INTO system_event_log
.\YASGMP.sql:1859:    INSERT INTO system_event_log
.\YASGMP.sql:1868:    INSERT INTO system_event_log
.\YASGMP.sql:1891:  INSERT INTO system_event_log
.\YASGMP.sql:1918:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\YASGMP.sql:1943:  INSERT INTO system_event_log
.\YASGMP.sql:1964:/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `trg_comments_au_audit` AFTER UPDATE ON `comments` FOR EACH ROW BEGIN
.\YASGMP.sql:1965:  INSERT INTO system_event_log
.\YASGMP.sql:1988:  INSERT INTO system_event_log
.\YASGMP.sql:2016:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\YASGMP.sql:2045:  INSERT INTO system_event_log
.\YASGMP.sql:2066:/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `trg_component_devices_au_audit` AFTER UPDATE ON `component_devices` FOR EACH ROW BEGIN
.\YASGMP.sql:2067:  INSERT INTO system_event_log
.\YASGMP.sql:2090:  INSERT INTO system_event_log
.\YASGMP.sql:2116:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\YASGMP.sql:2142:  INSERT INTO system_event_log
.\YASGMP.sql:2163:/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `trg_component_models_au_audit` AFTER UPDATE ON `component_models` FOR EACH ROW BEGIN
.\YASGMP.sql:2164:  INSERT INTO system_event_log
.\YASGMP.sql:2187:  INSERT INTO system_event_log
.\YASGMP.sql:2213:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\YASGMP.sql:2240:  INSERT INTO system_event_log
.\YASGMP.sql:2261:/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `trg_component_parts_au_audit` AFTER UPDATE ON `component_parts` FOR EACH ROW BEGIN
.\YASGMP.sql:2262:  INSERT INTO system_event_log
.\YASGMP.sql:2285:  INSERT INTO system_event_log
.\YASGMP.sql:2315:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\YASGMP.sql:2340:  INSERT INTO system_event_log
.\YASGMP.sql:2361:/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `trg_component_qualifications_au_audit` AFTER UPDATE ON `component_qualifications` FOR EACH ROW BEGIN
.\YASGMP.sql:2362:  INSERT INTO system_event_log
.\YASGMP.sql:2385:  INSERT INTO system_event_log
.\YASGMP.sql:2410:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\YASGMP.sql:2435:  INSERT INTO system_event_log
.\YASGMP.sql:2456:/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `trg_component_types_au_audit` AFTER UPDATE ON `component_types` FOR EACH ROW BEGIN
.\YASGMP.sql:2457:  INSERT INTO system_event_log
.\YASGMP.sql:2465:    INSERT INTO system_event_log
.\YASGMP.sql:2474:    INSERT INTO system_event_log
.\YASGMP.sql:2497:  INSERT INTO system_event_log
.\YASGMP.sql:2528:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\YASGMP.sql:2556:  INSERT INTO system_event_log
.\YASGMP.sql:2577:/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `trg_config_change_log_au_audit` AFTER UPDATE ON `config_change_log` FOR EACH ROW BEGIN
.\YASGMP.sql:2578:  INSERT INTO system_event_log
.\YASGMP.sql:2601:  INSERT INTO system_event_log
.\YASGMP.sql:2636:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\YASGMP.sql:2663:  INSERT INTO system_event_log
.\YASGMP.sql:2684:/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `trg_contractor_intervention_audit_au_audit` AFTER UPDATE ON `contractor_intervention_audit` FOR EACH ROW BEGIN
.\YASGMP.sql:2685:  INSERT INTO system_event_log
.\YASGMP.sql:2708:  INSERT INTO system_event_log
.\YASGMP.sql:2738:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\YASGMP.sql:2765:  INSERT INTO system_event_log
.\YASGMP.sql:2786:/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `trg_contractor_interventions_au_audit` AFTER UPDATE ON `contractor_interventions` FOR EACH ROW BEGIN
.\YASGMP.sql:2787:  INSERT INTO system_event_log
.\YASGMP.sql:2810:  INSERT INTO system_event_log
.\YASGMP.sql:2838:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\YASGMP.sql:2864:  INSERT INTO system_event_log
.\YASGMP.sql:2885:/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `trg_dashboards_au_audit` AFTER UPDATE ON `dashboards` FOR EACH ROW BEGIN
.\YASGMP.sql:2886:  INSERT INTO system_event_log
.\YASGMP.sql:2909:  INSERT INTO system_event_log
.\YASGMP.sql:2941:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\YASGMP.sql:2972:  INSERT INTO system_event_log
.\YASGMP.sql:2993:/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `trg_delegated_permissions_au_audit` AFTER UPDATE ON `delegated_permissions` FOR EACH ROW BEGIN
.\YASGMP.sql:2994:  INSERT INTO system_event_log
.\YASGMP.sql:3017:  INSERT INTO system_event_log
.\YASGMP.sql:3050:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\YASGMP.sql:3078:  INSERT INTO system_event_log
.\YASGMP.sql:3099:/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `trg_delete_log_au_audit` AFTER UPDATE ON `delete_log` FOR EACH ROW BEGIN
.\YASGMP.sql:3100:  INSERT INTO system_event_log
.\YASGMP.sql:3123:  INSERT INTO system_event_log
.\YASGMP.sql:3149:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\YASGMP.sql:3175:  INSERT INTO system_event_log
.\YASGMP.sql:3196:/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `trg_departments_au_audit` AFTER UPDATE ON `departments` FOR EACH ROW BEGIN
.\YASGMP.sql:3197:  INSERT INTO system_event_log
.\YASGMP.sql:3205:    INSERT INTO system_event_log
.\YASGMP.sql:3214:    INSERT INTO system_event_log
.\YASGMP.sql:3237:  INSERT INTO system_event_log
.\YASGMP.sql:3290:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\YASGMP.sql:3330:  INSERT INTO system_event_log
.\YASGMP.sql:3351:/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `trg_deviation_audit_au_audit` AFTER UPDATE ON `deviation_audit` FOR EACH ROW BEGIN
.\YASGMP.sql:3352:  INSERT INTO system_event_log
.\YASGMP.sql:3375:  INSERT INTO system_event_log
.\YASGMP.sql:3398:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\YASGMP.sql:3421:  INSERT INTO system_event_log
.\YASGMP.sql:3442:/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `trg_deviations_au_audit` AFTER UPDATE ON `deviations` FOR EACH ROW BEGIN
.\YASGMP.sql:3443:  INSERT INTO system_event_log
.\YASGMP.sql:3466:  INSERT INTO system_event_log
.\YASGMP.sql:3499:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\YASGMP.sql:3524:  INSERT INTO system_event_log
.\YASGMP.sql:3545:/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `trg_digital_signatures_au_audit` AFTER UPDATE ON `digital_signatures` FOR EACH ROW BEGIN
.\YASGMP.sql:3546:  INSERT INTO system_event_log
.\YASGMP.sql:3569:  INSERT INTO system_event_log
.\YASGMP.sql:3599:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\YASGMP.sql:3624:  INSERT INTO system_event_log
.\YASGMP.sql:3645:/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `trg_document_versions_au_audit` AFTER UPDATE ON `document_versions` FOR EACH ROW BEGIN
.\YASGMP.sql:3646:  INSERT INTO system_event_log
.\YASGMP.sql:3669:  INSERT INTO system_event_log
.\YASGMP.sql:3704:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\YASGMP.sql:3734:  INSERT INTO system_event_log
.\YASGMP.sql:3755:/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `trg_entity_audit_log_au_audit` AFTER UPDATE ON `entity_audit_log` FOR EACH ROW BEGIN
.\YASGMP.sql:3756:  INSERT INTO system_event_log
.\YASGMP.sql:3779:  INSERT INTO system_event_log
.\YASGMP.sql:3805:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\YASGMP.sql:3831:  INSERT INTO system_event_log
.\YASGMP.sql:3852:/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `trg_entity_tags_au_audit` AFTER UPDATE ON `entity_tags` FOR EACH ROW BEGIN
.\YASGMP.sql:3853:  INSERT INTO system_event_log
.\YASGMP.sql:3876:  INSERT INTO system_event_log
.\YASGMP.sql:3901:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\YASGMP.sql:3934:  INSERT INTO system_event_log
.\YASGMP.sql:3955:/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `trg_export_print_log_au_audit` AFTER UPDATE ON `export_print_log` FOR EACH ROW BEGIN
.\YASGMP.sql:3956:  INSERT INTO system_event_log
.\YASGMP.sql:3979:  INSERT INTO system_event_log
.\YASGMP.sql:4008:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\YASGMP.sql:4031:  INSERT INTO system_event_log
.\YASGMP.sql:4052:/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `trg_external_contractors_au_audit` AFTER UPDATE ON `external_contractors` FOR EACH ROW BEGIN
.\YASGMP.sql:4053:  INSERT INTO system_event_log
.\YASGMP.sql:4061:    INSERT INTO system_event_log
.\YASGMP.sql:4084:  INSERT INTO system_event_log
.\YASGMP.sql:4111:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\YASGMP.sql:4136:  INSERT INTO system_event_log
.\YASGMP.sql:4157:/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `trg_failure_modes_au_audit` AFTER UPDATE ON `failure_modes` FOR EACH ROW BEGIN
.\YASGMP.sql:4158:  INSERT INTO system_event_log
.\YASGMP.sql:4166:    INSERT INTO system_event_log
.\YASGMP.sql:4189:  INSERT INTO system_event_log
.\YASGMP.sql:4222:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\YASGMP.sql:4251:  INSERT INTO system_event_log
.\YASGMP.sql:4272:/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `trg_forensic_user_change_log_au_audit` AFTER UPDATE ON `forensic_user_change_log` FOR EACH ROW BEGIN
.\YASGMP.sql:4273:  INSERT INTO system_event_log
.\YASGMP.sql:4296:  INSERT INTO system_event_log
.\YASGMP.sql:4331:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\YASGMP.sql:4379:  INSERT INTO system_event_log
.\YASGMP.sql:4400:/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `trg_inc_sync_u` BEFORE UPDATE ON `incident_log` FOR EACH ROW BEGIN
.\YASGMP.sql:4420:/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `trg_incident_log_au_audit` AFTER UPDATE ON `incident_log` FOR EACH ROW BEGIN
.\YASGMP.sql:4421:  INSERT INTO system_event_log
.\YASGMP.sql:4444:  INSERT INTO system_event_log
.\YASGMP.sql:4474:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\YASGMP.sql:4525:  INSERT INTO system_event_log
.\YASGMP.sql:4546:/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `trg_insp_sync_u` BEFORE UPDATE ON `inspections` FOR EACH ROW BEGIN
.\YASGMP.sql:4570:/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `trg_inspections_au_audit` AFTER UPDATE ON `inspections` FOR EACH ROW BEGIN
.\YASGMP.sql:4571:  INSERT INTO system_event_log
.\YASGMP.sql:4594:  INSERT INTO system_event_log
.\YASGMP.sql:4625:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\YASGMP.sql:4648:  INSERT INTO system_event_log
.\YASGMP.sql:4669:/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `trg_integration_log_au_audit` AFTER UPDATE ON `integration_log` FOR EACH ROW BEGIN
.\YASGMP.sql:4670:  INSERT INTO system_event_log
.\YASGMP.sql:4693:  INSERT INTO system_event_log
.\YASGMP.sql:4724:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\YASGMP.sql:4754:  INSERT INTO system_event_log
.\YASGMP.sql:4775:/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `trg_inventory_transactions_au_audit` AFTER UPDATE ON `inventory_transactions` FOR EACH ROW BEGIN
.\YASGMP.sql:4776:  INSERT INTO system_event_log
.\YASGMP.sql:4799:  INSERT INTO system_event_log
.\YASGMP.sql:4830:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\YASGMP.sql:4855:  INSERT INTO system_event_log
.\YASGMP.sql:4876:/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `trg_iot_anomaly_log_au_audit` AFTER UPDATE ON `iot_anomaly_log` FOR EACH ROW BEGIN
.\YASGMP.sql:4877:  INSERT INTO system_event_log
.\YASGMP.sql:4900:  INSERT INTO system_event_log
.\YASGMP.sql:4929:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\YASGMP.sql:4955:  INSERT INTO system_event_log
.\YASGMP.sql:4976:/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `trg_iot_devices_au_audit` AFTER UPDATE ON `iot_devices` FOR EACH ROW BEGIN
.\YASGMP.sql:4977:  INSERT INTO system_event_log
.\YASGMP.sql:5000:  INSERT INTO system_event_log
.\YASGMP.sql:5023:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\YASGMP.sql:5046:  INSERT INTO system_event_log
.\YASGMP.sql:5067:/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `trg_iot_event_audit_au_audit` AFTER UPDATE ON `iot_event_audit` FOR EACH ROW BEGIN
.\YASGMP.sql:5068:  INSERT INTO system_event_log
.\YASGMP.sql:5091:  INSERT INTO system_event_log
.\YASGMP.sql:5117:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\YASGMP.sql:5143:  INSERT INTO system_event_log
.\YASGMP.sql:5164:/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `trg_iot_gateways_au_audit` AFTER UPDATE ON `iot_gateways` FOR EACH ROW BEGIN
.\YASGMP.sql:5165:  INSERT INTO system_event_log
.\YASGMP.sql:5173:    INSERT INTO system_event_log
.\YASGMP.sql:5182:    INSERT INTO system_event_log
.\YASGMP.sql:5205:  INSERT INTO system_event_log
.\YASGMP.sql:5238:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\YASGMP.sql:5267:  INSERT INTO system_event_log
.\YASGMP.sql:5288:/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `trg_iot_sensor_data_au_audit` AFTER UPDATE ON `iot_sensor_data` FOR EACH ROW BEGIN
.\YASGMP.sql:5289:  INSERT INTO system_event_log
.\YASGMP.sql:5312:  INSERT INTO system_event_log
.\YASGMP.sql:5342:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\YASGMP.sql:5368:  INSERT INTO system_event_log
.\YASGMP.sql:5389:/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `trg_irregularities_log_au_audit` AFTER UPDATE ON `irregularities_log` FOR EACH ROW BEGIN
.\YASGMP.sql:5390:  INSERT INTO system_event_log
.\YASGMP.sql:5413:  INSERT INTO system_event_log
.\YASGMP.sql:5437:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\YASGMP.sql:5461:  INSERT INTO system_event_log
.\YASGMP.sql:5482:/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `trg_job_titles_au_audit` AFTER UPDATE ON `job_titles` FOR EACH ROW BEGIN
.\YASGMP.sql:5483:  INSERT INTO system_event_log
.\YASGMP.sql:5506:  INSERT INTO system_event_log
.\YASGMP.sql:5538:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\YASGMP.sql:5564:  INSERT INTO system_event_log
.\YASGMP.sql:5585:/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `trg_locations_au_audit` AFTER UPDATE ON `locations` FOR EACH ROW BEGIN
.\YASGMP.sql:5586:  INSERT INTO system_event_log
.\YASGMP.sql:5594:    INSERT INTO system_event_log
.\YASGMP.sql:5603:    INSERT INTO system_event_log
.\YASGMP.sql:5626:  INSERT INTO system_event_log
.\YASGMP.sql:5651:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\YASGMP.sql:5676:  INSERT INTO system_event_log
.\YASGMP.sql:5697:/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `trg_lookup_domain_au_audit` AFTER UPDATE ON `lookup_domain` FOR EACH ROW BEGIN
.\YASGMP.sql:5698:  INSERT INTO system_event_log
.\YASGMP.sql:5721:  INSERT INTO system_event_log
.\YASGMP.sql:5749:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\YASGMP.sql:5775:  INSERT INTO system_event_log
.\YASGMP.sql:5796:/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `trg_lookup_value_au_audit` AFTER UPDATE ON `lookup_value` FOR EACH ROW BEGIN
.\YASGMP.sql:5797:  INSERT INTO system_event_log
.\YASGMP.sql:5820:  INSERT INTO system_event_log
.\YASGMP.sql:5850:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\YASGMP.sql:5888:  INSERT INTO system_event_log
.\YASGMP.sql:5909:/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `trg_machine_components_au_audit` AFTER UPDATE ON `machine_components` FOR EACH ROW BEGIN
.\YASGMP.sql:5910:  INSERT INTO system_event_log
.\YASGMP.sql:5918:    INSERT INTO system_event_log
.\YASGMP.sql:5927:    INSERT INTO system_event_log
.\YASGMP.sql:5950:  INSERT INTO system_event_log
.\YASGMP.sql:5979:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\YASGMP.sql:6027:  INSERT INTO system_event_log
.\YASGMP.sql:6048:/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `trg_mle_sync_u` BEFORE UPDATE ON `machine_lifecycle_event` FOR EACH ROW BEGIN
.\YASGMP.sql:6068:/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `trg_machine_lifecycle_event_au_audit` AFTER UPDATE ON `machine_lifecycle_event` FOR EACH ROW BEGIN
.\YASGMP.sql:6069:  INSERT INTO system_event_log
.\YASGMP.sql:6092:  INSERT INTO system_event_log
.\YASGMP.sql:6119:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\YASGMP.sql:6147:  INSERT INTO system_event_log
.\YASGMP.sql:6168:/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `trg_machine_models_au_audit` AFTER UPDATE ON `machine_models` FOR EACH ROW BEGIN
.\YASGMP.sql:6169:  INSERT INTO system_event_log
.\YASGMP.sql:6192:  INSERT INTO system_event_log
.\YASGMP.sql:6217:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\YASGMP.sql:6242:  INSERT INTO system_event_log
.\YASGMP.sql:6263:/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `trg_machine_types_au_audit` AFTER UPDATE ON `machine_types` FOR EACH ROW BEGIN
.\YASGMP.sql:6264:  INSERT INTO system_event_log
.\YASGMP.sql:6272:    INSERT INTO system_event_log
.\YASGMP.sql:6281:    INSERT INTO system_event_log
.\YASGMP.sql:6304:  INSERT INTO system_event_log
.\YASGMP.sql:6352:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\YASGMP.sql:6443:  INSERT INTO system_event_log
.\YASGMP.sql:6468:  INSERT INTO system_event_log
.\YASGMP.sql:6489:/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `trg_m_sync_u` BEFORE UPDATE ON `machines` FOR EACH ROW BEGIN
.\YASGMP.sql:6513:/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `trg_machines_bu` BEFORE UPDATE ON `machines` FOR EACH ROW BEGIN
.\YASGMP.sql:6531:/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `trg_machines_au` AFTER UPDATE ON `machines` FOR EACH ROW BEGIN
.\YASGMP.sql:6532:  INSERT INTO system_event_log
.\YASGMP.sql:6556:/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `trg_machines_au_audit` AFTER UPDATE ON `machines` FOR EACH ROW BEGIN
.\YASGMP.sql:6557:  INSERT INTO system_event_log
.\YASGMP.sql:6565:    INSERT INTO system_event_log
.\YASGMP.sql:6574:    INSERT INTO system_event_log
.\YASGMP.sql:6597:  INSERT INTO system_event_log
.\YASGMP.sql:6622:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\YASGMP.sql:6647:  INSERT INTO system_event_log
.\YASGMP.sql:6668:/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `trg_manufacturers_au_audit` AFTER UPDATE ON `manufacturers` FOR EACH ROW BEGIN
.\YASGMP.sql:6669:  INSERT INTO system_event_log
.\YASGMP.sql:6677:    INSERT INTO system_event_log
.\YASGMP.sql:6700:  INSERT INTO system_event_log
.\YASGMP.sql:6725:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\YASGMP.sql:6750:  INSERT INTO system_event_log
.\YASGMP.sql:6771:/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `trg_measurement_units_au_audit` AFTER UPDATE ON `measurement_units` FOR EACH ROW BEGIN
.\YASGMP.sql:6772:  INSERT INTO system_event_log
.\YASGMP.sql:6780:    INSERT INTO system_event_log
.\YASGMP.sql:6789:    INSERT INTO system_event_log
.\YASGMP.sql:6812:  INSERT INTO system_event_log
.\YASGMP.sql:6842:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\YASGMP.sql:6867:  INSERT INTO system_event_log
.\YASGMP.sql:6888:/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `trg_mobile_device_log_au_audit` AFTER UPDATE ON `mobile_device_log` FOR EACH ROW BEGIN
.\YASGMP.sql:6889:  INSERT INTO system_event_log
.\YASGMP.sql:6912:  INSERT INTO system_event_log
.\YASGMP.sql:6943:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\YASGMP.sql:6970:  INSERT INTO system_event_log
.\YASGMP.sql:6991:/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `trg_notification_queue_au_audit` AFTER UPDATE ON `notification_queue` FOR EACH ROW BEGIN
.\YASGMP.sql:6992:  INSERT INTO system_event_log
.\YASGMP.sql:7015:  INSERT INTO system_event_log
.\YASGMP.sql:7043:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\YASGMP.sql:7068:  INSERT INTO system_event_log
.\YASGMP.sql:7089:/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `trg_notification_templates_au_audit` AFTER UPDATE ON `notification_templates` FOR EACH ROW BEGIN
.\YASGMP.sql:7090:  INSERT INTO system_event_log
.\YASGMP.sql:7098:    INSERT INTO system_event_log
.\YASGMP.sql:7107:    INSERT INTO system_event_log
.\YASGMP.sql:7130:  INSERT INTO system_event_log
.\YASGMP.sql:7156:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\YASGMP.sql:7184:  INSERT INTO system_event_log
.\YASGMP.sql:7205:/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `trg_part_bom_au_audit` AFTER UPDATE ON `part_bom` FOR EACH ROW BEGIN
.\YASGMP.sql:7206:  INSERT INTO system_event_log
.\YASGMP.sql:7229:  INSERT INTO system_event_log
.\YASGMP.sql:7257:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\YASGMP.sql:7284:  INSERT INTO system_event_log
.\YASGMP.sql:7305:/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `trg_part_supplier_prices_au_audit` AFTER UPDATE ON `part_supplier_prices` FOR EACH ROW BEGIN
.\YASGMP.sql:7306:  INSERT INTO system_event_log
.\YASGMP.sql:7329:  INSERT INTO system_event_log
.\YASGMP.sql:7357:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\YASGMP.sql:7383:  INSERT INTO system_event_log
.\YASGMP.sql:7404:/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `trg_parts_au_audit` AFTER UPDATE ON `parts` FOR EACH ROW BEGIN
.\YASGMP.sql:7405:  INSERT INTO system_event_log
.\YASGMP.sql:7413:    INSERT INTO system_event_log
.\YASGMP.sql:7422:    INSERT INTO system_event_log
.\YASGMP.sql:7445:  INSERT INTO system_event_log
.\YASGMP.sql:7480:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\YASGMP.sql:7511:  INSERT INTO system_event_log
.\YASGMP.sql:7532:/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `trg_permission_change_log_au_audit` AFTER UPDATE ON `permission_change_log` FOR EACH ROW BEGIN
.\YASGMP.sql:7533:  INSERT INTO system_event_log
.\YASGMP.sql:7556:  INSERT INTO system_event_log
.\YASGMP.sql:7587:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\YASGMP.sql:7616:  INSERT INTO system_event_log
.\YASGMP.sql:7637:/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `trg_permission_requests_au_audit` AFTER UPDATE ON `permission_requests` FOR EACH ROW BEGIN
.\YASGMP.sql:7638:  INSERT INTO system_event_log
.\YASGMP.sql:7661:  INSERT INTO system_event_log
.\YASGMP.sql:7688:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\YASGMP.sql:7713:  INSERT INTO system_event_log
.\YASGMP.sql:7734:/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `trg_permissions_au_audit` AFTER UPDATE ON `permissions` FOR EACH ROW BEGIN
.\YASGMP.sql:7735:  INSERT INTO system_event_log
.\YASGMP.sql:7743:    INSERT INTO system_event_log
.\YASGMP.sql:7766:  INSERT INTO system_event_log
.\YASGMP.sql:7798:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\YASGMP.sql:7827:  INSERT INTO system_event_log
.\YASGMP.sql:7848:/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `trg_photos_au_audit` AFTER UPDATE ON `photos` FOR EACH ROW BEGIN
.\YASGMP.sql:7849:  INSERT INTO system_event_log
.\YASGMP.sql:7872:  INSERT INTO system_event_log
.\YASGMP.sql:7901:  `last_modified` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\YASGMP.sql:7902:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\YASGMP.sql:7905:  CONSTRAINT `fk_ppm_plans_machine` FOREIGN KEY (`machine_id`) REFERENCES `machines` (`id`) ON DELETE CASCADE ON UPDATE CASCADE
.\YASGMP.sql:7927:  INSERT INTO system_event_log
.\YASGMP.sql:7948:/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `trg_ppm_plans_au_audit` AFTER UPDATE ON `ppm_plans` FOR EACH ROW BEGIN
.\YASGMP.sql:7949:  INSERT INTO system_event_log
.\YASGMP.sql:7972:  INSERT INTO system_event_log
.\YASGMP.sql:8007:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\YASGMP.sql:8040:  INSERT INTO system_event_log
.\YASGMP.sql:8061:/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `trg_preventive_maintenance_plans_au_audit` AFTER UPDATE ON `preventive_maintenance_plans` FOR EACH ROW BEGIN
.\YASGMP.sql:8062:  INSERT INTO system_event_log
.\YASGMP.sql:8070:    INSERT INTO system_event_log
.\YASGMP.sql:8079:    INSERT INTO system_event_log
.\YASGMP.sql:8102:  INSERT INTO system_event_log
.\YASGMP.sql:8134:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\YASGMP.sql:8187:  INSERT INTO system_event_log
.\YASGMP.sql:8208:/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `trg_qe_sync_u` BEFORE UPDATE ON `quality_events` FOR EACH ROW BEGIN
.\YASGMP.sql:8232:/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `trg_quality_events_au_audit` AFTER UPDATE ON `quality_events` FOR EACH ROW BEGIN
.\YASGMP.sql:8233:  INSERT INTO system_event_log
.\YASGMP.sql:8256:  INSERT INTO system_event_log
.\YASGMP.sql:8287:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\YASGMP.sql:8312:  INSERT INTO system_event_log
.\YASGMP.sql:8333:/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `trg_report_schedule_au_audit` AFTER UPDATE ON `report_schedule` FOR EACH ROW BEGIN
.\YASGMP.sql:8334:  INSERT INTO system_event_log
.\YASGMP.sql:8357:  INSERT INTO system_event_log
.\YASGMP.sql:8386:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\YASGMP.sql:8411:  INSERT INTO system_event_log
.\YASGMP.sql:8432:/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `trg_requalification_schedule_au_audit` AFTER UPDATE ON `requalification_schedule` FOR EACH ROW BEGIN
.\YASGMP.sql:8433:  INSERT INTO system_event_log
.\YASGMP.sql:8456:  INSERT INTO system_event_log
.\YASGMP.sql:8485:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\YASGMP.sql:8511:  INSERT INTO system_event_log
.\YASGMP.sql:8532:/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `trg_role_audit_au_audit` AFTER UPDATE ON `role_audit` FOR EACH ROW BEGIN
.\YASGMP.sql:8533:  INSERT INTO system_event_log
.\YASGMP.sql:8556:  INSERT INTO system_event_log
.\YASGMP.sql:8581:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\YASGMP.sql:8613:  INSERT INTO system_event_log
.\YASGMP.sql:8634:/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `trg_role_permissions_au_audit` AFTER UPDATE ON `role_permissions` FOR EACH ROW BEGIN
.\YASGMP.sql:8635:  INSERT INTO system_event_log
.\YASGMP.sql:8658:  INSERT INTO system_event_log
.\YASGMP.sql:8687:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\YASGMP.sql:8719:  INSERT INTO system_event_log
.\YASGMP.sql:8740:/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `trg_roles_au_audit` AFTER UPDATE ON `roles` FOR EACH ROW BEGIN
.\YASGMP.sql:8741:  INSERT INTO system_event_log
.\YASGMP.sql:8749:    INSERT INTO system_event_log
.\YASGMP.sql:8772:  INSERT INTO system_event_log
.\YASGMP.sql:8799:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\YASGMP.sql:8824:  INSERT INTO system_event_log
.\YASGMP.sql:8845:/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `trg_rooms_au_audit` AFTER UPDATE ON `rooms` FOR EACH ROW BEGIN
.\YASGMP.sql:8846:  INSERT INTO system_event_log
.\YASGMP.sql:8854:    INSERT INTO system_event_log
.\YASGMP.sql:8863:    INSERT INTO system_event_log
.\YASGMP.sql:8886:  INSERT INTO system_event_log
.\YASGMP.sql:8920:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\YASGMP.sql:8949:  INSERT INTO system_event_log
.\YASGMP.sql:8970:/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `trg_scheduled_job_audit_log_au_audit` AFTER UPDATE ON `scheduled_job_audit_log` FOR EACH ROW BEGIN
.\YASGMP.sql:8971:  INSERT INTO system_event_log
.\YASGMP.sql:8994:  INSERT INTO system_event_log
.\YASGMP.sql:9041:  `last_modified` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\YASGMP.sql:9048:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\YASGMP.sql:9082:    INSERT INTO scheduled_job_audit_log (
.\YASGMP.sql:9105:  INSERT INTO system_event_log
.\YASGMP.sql:9126:/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `trg_scheduled_jobs_update` AFTER UPDATE ON `scheduled_jobs` FOR EACH ROW BEGIN
.\YASGMP.sql:9127:    INSERT INTO scheduled_job_audit_log (
.\YASGMP.sql:9149:/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `trg_scheduled_jobs_au_audit` AFTER UPDATE ON `scheduled_jobs` FOR EACH ROW BEGIN
.\YASGMP.sql:9150:  INSERT INTO system_event_log
.\YASGMP.sql:9158:    INSERT INTO system_event_log
.\YASGMP.sql:9181:    INSERT INTO scheduled_job_audit_log (
.\YASGMP.sql:9203:  INSERT INTO system_event_log
.\YASGMP.sql:9234:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\YASGMP.sql:9260:  INSERT INTO system_event_log
.\YASGMP.sql:9281:/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `trg_schema_migration_log_au_audit` AFTER UPDATE ON `schema_migration_log` FOR EACH ROW BEGIN
.\YASGMP.sql:9282:  INSERT INTO system_event_log
.\YASGMP.sql:9305:  INSERT INTO system_event_log
.\YASGMP.sql:9338:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\YASGMP.sql:9370:    IF (SELECT COUNT(*) FROM users WHERE id = NEW.user_id) = 0 THEN
.\YASGMP.sql:9375:    IF (SELECT COUNT(*) FROM users WHERE id = NEW.approved_by) = 0 THEN
.\YASGMP.sql:9395:  INSERT INTO system_event_log
.\YASGMP.sql:9416:/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `trg_sensitive_data_access_log_au_audit` AFTER UPDATE ON `sensitive_data_access_log` FOR EACH ROW BEGIN
.\YASGMP.sql:9417:  INSERT INTO system_event_log
.\YASGMP.sql:9440:  INSERT INTO system_event_log
.\YASGMP.sql:9468:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\YASGMP.sql:9504:    INSERT INTO units(code,name,quantity) VALUES (NEW.unit, NEW.unit, NULL)
.\YASGMP.sql:9505:    ON DUPLICATE KEY UPDATE id=LAST_INSERT_ID(id), name=VALUES(name);
.\YASGMP.sql:9524:  INSERT INTO system_event_log
.\YASGMP.sql:9545:/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `trg_sdl_sync_u` BEFORE UPDATE ON `sensor_data_logs` FOR EACH ROW BEGIN
.\YASGMP.sql:9552:    INSERT INTO units(code,name) VALUES (NEW.unit, NEW.unit)
.\YASGMP.sql:9553:    ON DUPLICATE KEY UPDATE id=LAST_INSERT_ID(id), name=VALUES(name);
.\YASGMP.sql:9571:/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `trg_sensor_data_logs_au_audit` AFTER UPDATE ON `sensor_data_logs` FOR EACH ROW BEGIN
.\YASGMP.sql:9572:  INSERT INTO system_event_log
.\YASGMP.sql:9595:  INSERT INTO system_event_log
.\YASGMP.sql:9622:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\YASGMP.sql:9647:  INSERT INTO system_event_log
.\YASGMP.sql:9668:/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `trg_sensor_models_au_audit` AFTER UPDATE ON `sensor_models` FOR EACH ROW BEGIN
.\YASGMP.sql:9669:  INSERT INTO system_event_log
.\YASGMP.sql:9692:  INSERT INTO system_event_log
.\YASGMP.sql:9721:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\YASGMP.sql:9747:  INSERT INTO system_event_log
.\YASGMP.sql:9768:/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `trg_sensor_types_au_audit` AFTER UPDATE ON `sensor_types` FOR EACH ROW BEGIN
.\YASGMP.sql:9769:  INSERT INTO system_event_log
.\YASGMP.sql:9777:    INSERT INTO system_event_log
.\YASGMP.sql:9786:    INSERT INTO system_event_log
.\YASGMP.sql:9809:  INSERT INTO system_event_log
.\YASGMP.sql:9842:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\YASGMP.sql:9872:  INSERT INTO system_event_log
.\YASGMP.sql:9893:/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `trg_session_log_au_audit` AFTER UPDATE ON `session_log` FOR EACH ROW BEGIN
.\YASGMP.sql:9894:  INSERT INTO system_event_log
.\YASGMP.sql:9917:  INSERT INTO system_event_log
.\YASGMP.sql:9943:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\YASGMP.sql:9967:  INSERT INTO system_event_log
.\YASGMP.sql:9988:/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `trg_sites_au_audit` AFTER UPDATE ON `sites` FOR EACH ROW BEGIN
.\YASGMP.sql:9989:  INSERT INTO system_event_log
.\YASGMP.sql:9997:    INSERT INTO system_event_log
.\YASGMP.sql:10006:    INSERT INTO system_event_log
.\YASGMP.sql:10029:  INSERT INTO system_event_log
.\YASGMP.sql:10057:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\YASGMP.sql:10084:  INSERT INTO system_event_log
.\YASGMP.sql:10105:/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `trg_sop_document_log_au_audit` AFTER UPDATE ON `sop_document_log` FOR EACH ROW BEGIN
.\YASGMP.sql:10106:  INSERT INTO system_event_log
.\YASGMP.sql:10129:  INSERT INTO system_event_log
.\YASGMP.sql:10161:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\YASGMP.sql:10189:  INSERT INTO system_event_log
.\YASGMP.sql:10210:/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `trg_sop_documents_au_audit` AFTER UPDATE ON `sop_documents` FOR EACH ROW BEGIN
.\YASGMP.sql:10211:  INSERT INTO system_event_log
.\YASGMP.sql:10219:    INSERT INTO system_event_log
.\YASGMP.sql:10228:    INSERT INTO system_event_log
.\YASGMP.sql:10251:  INSERT INTO system_event_log
.\YASGMP.sql:10279:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\YASGMP.sql:10308:  INSERT INTO system_event_log
.\YASGMP.sql:10329:/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `trg_stock_levels_au_audit` AFTER UPDATE ON `stock_levels` FOR EACH ROW BEGIN
.\YASGMP.sql:10330:  INSERT INTO system_event_log
.\YASGMP.sql:10353:  INSERT INTO system_event_log
.\YASGMP.sql:10382:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\YASGMP.sql:10409:  INSERT INTO system_event_log
.\YASGMP.sql:10430:/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `trg_supplier_risk_audit_au_audit` AFTER UPDATE ON `supplier_risk_audit` FOR EACH ROW BEGIN
.\YASGMP.sql:10431:  INSERT INTO system_event_log
.\YASGMP.sql:10454:  INSERT INTO system_event_log
.\YASGMP.sql:10501:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\YASGMP.sql:10550:  INSERT INTO system_event_log
.\YASGMP.sql:10571:/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `trg_sup_sync_u` BEFORE UPDATE ON `suppliers` FOR EACH ROW BEGIN
.\YASGMP.sql:10595:/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `trg_suppliers_au_audit` AFTER UPDATE ON `suppliers` FOR EACH ROW BEGIN
.\YASGMP.sql:10596:  INSERT INTO system_event_log
.\YASGMP.sql:10604:    INSERT INTO system_event_log
.\YASGMP.sql:10613:    INSERT INTO system_event_log
.\YASGMP.sql:10636:  INSERT INTO system_event_log
.\YASGMP.sql:10677:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\YASGMP.sql:10745:    IF (SELECT COUNT(*) FROM users WHERE id = NEW.user_id) = 0 THEN
.\YASGMP.sql:10764:/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `trg_system_event_log_bu` BEFORE UPDATE ON `system_event_log` FOR EACH ROW BEGIN
.\YASGMP.sql:10834:  INSERT INTO system_event_log
.\YASGMP.sql:10855:/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `trg_system_parameters_au_audit` AFTER UPDATE ON `system_parameters` FOR EACH ROW BEGIN
.\YASGMP.sql:10856:  INSERT INTO system_event_log
.\YASGMP.sql:10879:  INSERT INTO system_event_log
.\YASGMP.sql:10903:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\YASGMP.sql:10927:  INSERT INTO system_event_log
.\YASGMP.sql:10948:/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `trg_tags_au_audit` AFTER UPDATE ON `tags` FOR EACH ROW BEGIN
.\YASGMP.sql:10949:  INSERT INTO system_event_log
.\YASGMP.sql:10972:  INSERT INTO system_event_log
.\YASGMP.sql:10999:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\YASGMP.sql:11023:  INSERT INTO system_event_log
.\YASGMP.sql:11044:/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `trg_tenants_au_audit` AFTER UPDATE ON `tenants` FOR EACH ROW BEGIN
.\YASGMP.sql:11045:  INSERT INTO system_event_log
.\YASGMP.sql:11053:    INSERT INTO system_event_log
.\YASGMP.sql:11062:    INSERT INTO system_event_log
.\YASGMP.sql:11085:  INSERT INTO system_event_log
.\YASGMP.sql:11114:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\YASGMP.sql:11140:  INSERT INTO system_event_log
.\YASGMP.sql:11161:/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `trg_user_audit_au_audit` AFTER UPDATE ON `user_audit` FOR EACH ROW BEGIN
.\YASGMP.sql:11162:  INSERT INTO system_event_log
.\YASGMP.sql:11185:  INSERT INTO system_event_log
.\YASGMP.sql:11217:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\YASGMP.sql:11242:  INSERT INTO system_event_log
.\YASGMP.sql:11263:/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `trg_user_esignatures_au_audit` AFTER UPDATE ON `user_esignatures` FOR EACH ROW BEGIN
.\YASGMP.sql:11264:  INSERT INTO system_event_log
.\YASGMP.sql:11287:  INSERT INTO system_event_log
.\YASGMP.sql:11326:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\YASGMP.sql:11354:  INSERT INTO system_event_log
.\YASGMP.sql:11375:/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `trg_user_login_audit_au_audit` AFTER UPDATE ON `user_login_audit` FOR EACH ROW BEGIN
.\YASGMP.sql:11376:  INSERT INTO system_event_log
.\YASGMP.sql:11399:  INSERT INTO system_event_log
.\YASGMP.sql:11428:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\YASGMP.sql:11457:  INSERT INTO system_event_log
.\YASGMP.sql:11478:/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `trg_user_permissions_au_audit` AFTER UPDATE ON `user_permissions` FOR EACH ROW BEGIN
.\YASGMP.sql:11479:  INSERT INTO system_event_log
.\YASGMP.sql:11502:  INSERT INTO system_event_log
.\YASGMP.sql:11529:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\YASGMP.sql:11565:  INSERT INTO system_event_log
.\YASGMP.sql:11586:/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `trg_user_roles_au_audit` AFTER UPDATE ON `user_roles` FOR EACH ROW BEGIN
.\YASGMP.sql:11587:  INSERT INTO system_event_log
.\YASGMP.sql:11610:  INSERT INTO system_event_log
.\YASGMP.sql:11636:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\YASGMP.sql:11664:  INSERT INTO system_event_log
.\YASGMP.sql:11685:/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `trg_user_subscriptions_au_audit` AFTER UPDATE ON `user_subscriptions` FOR EACH ROW BEGIN
.\YASGMP.sql:11686:  INSERT INTO system_event_log
.\YASGMP.sql:11709:  INSERT INTO system_event_log
.\YASGMP.sql:11740:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\YASGMP.sql:11765:  INSERT INTO system_event_log
.\YASGMP.sql:11786:/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `trg_user_training_au_audit` AFTER UPDATE ON `user_training` FOR EACH ROW BEGIN
.\YASGMP.sql:11787:  INSERT INTO system_event_log
.\YASGMP.sql:11810:  INSERT INTO system_event_log
.\YASGMP.sql:11840:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\YASGMP.sql:11898:  `last_modified` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\YASGMP.sql:11904:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\YASGMP.sql:11940:  INSERT INTO system_event_log
.\YASGMP.sql:11961:/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `trg_users_au_audit` AFTER UPDATE ON `users` FOR EACH ROW BEGIN
.\YASGMP.sql:11962:  INSERT INTO system_event_log
.\YASGMP.sql:11985:  INSERT INTO system_event_log
.\YASGMP.sql:12057:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\YASGMP.sql:12084:  INSERT INTO system_event_log
.\YASGMP.sql:12105:/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `trg_validations_au_audit` AFTER UPDATE ON `validations` FOR EACH ROW BEGIN
.\YASGMP.sql:12106:  INSERT INTO system_event_log
.\YASGMP.sql:12129:  INSERT INTO system_event_log
.\YASGMP.sql:14584:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\YASGMP.sql:14612:  INSERT INTO system_event_log
.\YASGMP.sql:14633:/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `trg_warehouses_au_audit` AFTER UPDATE ON `warehouses` FOR EACH ROW BEGIN
.\YASGMP.sql:14634:  INSERT INTO system_event_log
.\YASGMP.sql:14642:    INSERT INTO system_event_log
.\YASGMP.sql:14665:  INSERT INTO system_event_log
.\YASGMP.sql:14699:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\YASGMP.sql:14726:  INSERT INTO system_event_log
.\YASGMP.sql:14747:/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `trg_work_order_audit_au_audit` AFTER UPDATE ON `work_order_audit` FOR EACH ROW BEGIN
.\YASGMP.sql:14748:  INSERT INTO system_event_log
.\YASGMP.sql:14771:  INSERT INTO system_event_log
.\YASGMP.sql:14799:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\YASGMP.sql:14826:  INSERT INTO system_event_log
.\YASGMP.sql:14847:/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `trg_work_order_checklist_item_au_audit` AFTER UPDATE ON `work_order_checklist_item` FOR EACH ROW BEGIN
.\YASGMP.sql:14848:  INSERT INTO system_event_log
.\YASGMP.sql:14871:  INSERT INTO system_event_log
.\YASGMP.sql:14898:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\YASGMP.sql:14925:  INSERT INTO system_event_log
.\YASGMP.sql:14946:/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `trg_work_order_comments_au_audit` AFTER UPDATE ON `work_order_comments` FOR EACH ROW BEGIN
.\YASGMP.sql:14947:  INSERT INTO system_event_log
.\YASGMP.sql:14970:  INSERT INTO system_event_log
.\YASGMP.sql:14995:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\YASGMP.sql:15021:  INSERT INTO system_event_log
.\YASGMP.sql:15042:/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `trg_work_order_parts_au_audit` AFTER UPDATE ON `work_order_parts` FOR EACH ROW BEGIN
.\YASGMP.sql:15043:  INSERT INTO system_event_log
.\YASGMP.sql:15066:  INSERT INTO system_event_log
.\YASGMP.sql:15096:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\YASGMP.sql:15123:  INSERT INTO system_event_log
.\YASGMP.sql:15144:/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `trg_work_order_signatures_au_audit` AFTER UPDATE ON `work_order_signatures` FOR EACH ROW BEGIN
.\YASGMP.sql:15145:  INSERT INTO system_event_log
.\YASGMP.sql:15168:  INSERT INTO system_event_log
.\YASGMP.sql:15197:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\YASGMP.sql:15224:  INSERT INTO system_event_log
.\YASGMP.sql:15245:/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `trg_work_order_status_log_au_audit` AFTER UPDATE ON `work_order_status_log` FOR EACH ROW BEGIN
.\YASGMP.sql:15246:  INSERT INTO system_event_log
.\YASGMP.sql:15269:  INSERT INTO system_event_log
.\YASGMP.sql:15305:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\YASGMP.sql:15375:  INSERT INTO system_event_log
.\YASGMP.sql:15396:/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `trg_wo_sync_u` BEFORE UPDATE ON `work_orders` FOR EACH ROW BEGIN
.\YASGMP.sql:15424:/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `trg_work_orders_au_audit` AFTER UPDATE ON `work_orders` FOR EACH ROW BEGIN
.\YASGMP.sql:15425:  INSERT INTO system_event_log
.\YASGMP.sql:15448:  INSERT INTO system_event_log
.\YASGMP.sql:15552:  IF EXISTS (SELECT 1 FROM information_schema.tables
.\YASGMP.sql:15554:    IF NOT EXISTS (SELECT 1 FROM information_schema.columns
.\YASGMP.sql:15580:  IF EXISTS (SELECT 1 FROM information_schema.tables
.\YASGMP.sql:15582:    IF NOT EXISTS (SELECT 1 FROM information_schema.table_constraints
.\YASGMP.sql:15608:  IF EXISTS (SELECT 1 FROM information_schema.tables
.\YASGMP.sql:15610:    IF NOT EXISTS (SELECT 1 FROM information_schema.statistics
.\YASGMP.sql:15636:  UPDATE work_orders wo
.\YASGMP.sql:15637:  JOIN ref_domain d ON d.code='work_order_status'
.\YASGMP.sql:15638:  JOIN ref_value rv ON rv.domain_id=d.id AND rv.code=wo.status
.\YASGMP.sql:15642:  UPDATE work_orders wo
.\YASGMP.sql:15643:  JOIN ref_domain d ON d.code='work_order_type'
.\YASGMP.sql:15644:  JOIN ref_value rv ON rv.domain_id=d.id AND rv.code=wo.type
.\YASGMP.sql:15648:  UPDATE work_orders wo
.\YASGMP.sql:15649:  JOIN ref_domain d ON d.code='priority'
.\YASGMP.sql:15650:  JOIN ref_value rv ON rv.domain_id=d.id AND rv.code=wo.priority
.\YASGMP.sql:15655:  UPDATE inspections i
.\YASGMP.sql:15656:  JOIN ref_domain d1 ON d1.code='inspection_type'
.\YASGMP.sql:15657:  JOIN ref_value rv1 ON rv1.domain_id=d1.id AND rv1.code=i.type
.\YASGMP.sql:15661:  UPDATE inspections i
.\YASGMP.sql:15662:  JOIN ref_domain d2 ON d2.code='inspection_result'
.\YASGMP.sql:15663:  JOIN ref_value rv2 ON rv2.domain_id=d2.id AND rv2.code=i.result
.\YASGMP.sql:15668:  UPDATE calibrations c
.\YASGMP.sql:15669:  JOIN ref_domain d ON d.code='calibration_result'
.\YASGMP.sql:15670:  JOIN ref_value rv ON rv.domain_id=d.id AND rv.code=c.result
.\YASGMP.sql:15675:  UPDATE quality_events q
.\YASGMP.sql:15676:  JOIN ref_domain d ON d.code='quality_event_type'
.\YASGMP.sql:15677:  JOIN ref_value rv ON rv.domain_id=d.id AND rv.code=q.event_type
.\YASGMP.sql:15681:  UPDATE quality_events q
.\YASGMP.sql:15682:  JOIN ref_domain d ON d.code='quality_status'
.\YASGMP.sql:15683:  JOIN ref_value rv ON rv.domain_id=d.id AND rv.code=q.status
.\YASGMP.sql:15688:  UPDATE machines m
.\YASGMP.sql:15689:  JOIN ref_domain d ON d.code='asset_status'
.\YASGMP.sql:15690:  JOIN ref_value rv ON rv.domain_id=d.id AND rv.code=m.status
.\YASGMP.sql:15694:  UPDATE machines m
.\YASGMP.sql:15695:  JOIN ref_domain d ON d.code='lifecycle_phase'
.\YASGMP.sql:15696:  JOIN ref_value rv ON rv.domain_id=d.id AND rv.code=m.lifecycle_phase
.\YASGMP.sql:15701:  UPDATE suppliers s
.\YASGMP.sql:15702:  JOIN ref_domain d1 ON d1.code='supplier_status'
.\YASGMP.sql:15703:  JOIN ref_value rv1 ON rv1.domain_id=d1.id AND rv1.code=s.status
.\YASGMP.sql:15707:  UPDATE suppliers s
.\YASGMP.sql:15708:  JOIN ref_domain d2 ON d2.code='supplier_type'
.\YASGMP.sql:15709:  JOIN ref_value rv2 ON rv2.domain_id=d2.id AND rv2.code=s.type
.\YASGMP.sql:15734:      FROM INFORMATION_SCHEMA.TABLES
.\YASGMP.sql:15741:    FETCH cur INTO tbl;
.\YASGMP.sql:15747:      SELECT 1 FROM INFORMATION_SCHEMA.COLUMNS
.\YASGMP.sql:15758:      SELECT 1 FROM INFORMATION_SCHEMA.COLUMNS
.\YASGMP.sql:15764:                      ' ADD COLUMN updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP');
.\YASGMP.sql:15798:  SELECT id INTO v_domain_id
.\YASGMP.sql:15799:    FROM lookup_domain
.\YASGMP.sql:15808:    'JOIN lookup_value v ',
.\YASGMP.sql:15855:    INSERT INTO ref_domain(code, name)
.\YASGMP.sql:15857:      ON DUPLICATE KEY UPDATE id = LAST_INSERT_ID(id);
.\YASGMP.sql:15861:    INSERT INTO ref_value(domain_id, code, name, is_active)
.\YASGMP.sql:15900:  SELECT COUNT(*)>0 INTO has_id       FROM information_schema.columns WHERE table_schema = DATABASE() AND table_name = p_table AND column_name = 'id';
.\YASGMP.sql:15901:  SELECT COUNT(*)>0 INTO has_code     FROM information_schema.columns WHERE table_schema = DATABASE() AND table_name = p_table AND column_name = 'code';
.\YASGMP.sql:15902:  SELECT COUNT(*)>0 INTO has_name     FROM information_schema.columns WHERE table_schema = DATABASE() AND table_name = p_table AND column_name = 'name';
.\YASGMP.sql:15903:  SELECT COUNT(*)>0 INTO has_number   FROM information_schema.columns WHERE table_schema = DATABASE() AND table_name = p_table AND column_name = 'number';
.\YASGMP.sql:15904:  SELECT COUNT(*)>0 INTO has_username FROM information_schema.columns WHERE table_schema = DATABASE() AND table_name = p_table AND column_name = 'username';
.\YASGMP.sql:15915:'  INSERT INTO system_event_log\n',
.\YASGMP.sql:15929:'AFTER UPDATE ON ', p_table, '\nFOR EACH ROW\nBEGIN\n',
.\YASGMP.sql:15930:'  INSERT INTO system_event_log\n',
.\YASGMP.sql:15943:'    INSERT INTO system_event_log (user_id, event_type, table_name, related_module, record_id, field_name, old_value, new_value, description, source_ip, device_info, session_id, severity)\n',
.\YASGMP.sql:15948:'    INSERT INTO system_event_log (user_id, event_type, table_name, related_module, record_id, field_name, old_value, new_value, description, source_ip, device_info, session_id, severity)\n',
.\YASGMP.sql:15955:'  INSERT INTO system_event_log\n',
.\YASGMP.sql:15997:  FROM INFORMATION_SCHEMA.TRIGGERS
.\YASGMP.sql:16033:  FROM INFORMATION_SCHEMA.TRIGGERS
.\YASGMP.sql:16062:    INSERT INTO calibration_export_log (
.\tools\SourceSchemaSync\Program.cs:30:        await using (var cmd = new MySqlCommand("SELECT table_name, column_name FROM information_schema.columns WHERE table_schema = DATABASE()", conn))
.\Services\AuditService.cs:143:INSERT INTO entity_audit_log
.\Services\AuditService.cs:180:INSERT INTO export_audit_log
.\Services\AuditService.cs:242:                FROM entity_audit_log a
.\Services\AuditService.cs:243:                LEFT JOIN users u ON u.id = a.user_id
.\Services\AuditService.cs:329:                FROM system_event_log s
.\Services\AuditService.cs:330:                LEFT JOIN users u ON u.id = s.user_id
.\Services\AuditService.cs:404:            const string sql = @"SELECT COUNT(*) FROM information_schema.TABLES
.\Services\AuditService.cs:412:            const string sql = @"SELECT COUNT(*) FROM information_schema.COLUMNS
.\Services\CAPAAuditService.cs:44:            const string sql = @"INSERT INTO capa_audit_log 
.\Services\CAPAAuditService.cs:70:            const string sql = @"UPDATE capa_audit_log SET 
.\Services\CAPAAuditService.cs:93:            const string sql = @"DELETE FROM capa_audit_log WHERE id=@id";
.\tools\SchemaSync\Program.cs:77:        await using (var cmd = new MySqlCommand("SELECT table_name FROM information_schema.tables WHERE table_schema=DATABASE()", conn))
.\tools\SchemaSync\Program.cs:100:            await using (var cmd = new MySqlCommand("SELECT column_name FROM information_schema.columns WHERE table_schema=DATABASE() AND table_name=@t", conn))
.\tools\SchemaSnapshot\Program.cs:144:                    await using (var cmd = new MySqlCommand("SELECT TABLE_NAME, TABLE_TYPE FROM information_schema.tables WHERE table_schema = DATABASE() ORDER BY TABLE_NAME", conn))
.\tools\SchemaSnapshot\Program.cs:177:                        await using (var cmd = new MySqlCommand(@"SELECT ENGINE, TABLE_COLLATION, IFNULL(TABLE_COMMENT,'') FROM information_schema.tables WHERE table_schema = DATABASE() AND table_name = @t", conn))
.\tools\SchemaSnapshot\Program.cs:192:                                                                  FROM information_schema.columns
.\tools\SchemaSnapshot\Program.cs:220:                                                                  FROM information_schema.statistics
.\tools\SchemaSnapshot\Program.cs:249:                                                                  FROM information_schema.key_column_usage k
.\tools\SchemaSnapshot\Program.cs:250:                                                                  LEFT JOIN information_schema.referential_constraints rc
.\tools\SchemaSnapshot\Program.cs:302:                    await using (var cmdTrig = new MySqlCommand("SELECT TRIGGER_NAME, EVENT_MANIPULATION, EVENT_OBJECT_TABLE, ACTION_TIMING FROM information_schema.triggers WHERE trigger_schema = DATABASE() ORDER BY TRIGGER_NAME", conn))
.\tools\SchemaSnapshot\Program.cs:338:                    await using (var cmd = new MySqlCommand("SELECT ROUTINE_NAME, ROUTINE_TYPE FROM information_schema.routines WHERE ROUTINE_SCHEMA = DATABASE() ORDER BY ROUTINE_NAME", conn))
.\tools\schema\snapshots\triggers.sql:3:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:14:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:24:CREATE DEFINER=`root`@`localhost` TRIGGER `trg_admin_activity_log_au_audit` AFTER UPDATE ON `admin_activity_log` FOR EACH ROW BEGIN
.\tools\schema\snapshots\triggers.sql:25:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:38:    IF (SELECT COUNT(*) FROM users WHERE id = NEW.admin_id) = 0 THEN
.\tools\schema\snapshots\triggers.sql:47:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:58:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:68:CREATE DEFINER=`root`@`localhost` TRIGGER `trg_api_audit_log_au_audit` AFTER UPDATE ON `api_audit_log` FOR EACH ROW BEGIN
.\tools\schema\snapshots\triggers.sql:69:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:81:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:92:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:102:CREATE DEFINER=`root`@`localhost` TRIGGER `trg_api_keys_au_audit` AFTER UPDATE ON `api_keys` FOR EACH ROW BEGIN
.\tools\schema\snapshots\triggers.sql:103:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:115:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:126:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:136:CREATE DEFINER=`root`@`localhost` TRIGGER `trg_api_usage_log_au_audit` AFTER UPDATE ON `api_usage_log` FOR EACH ROW BEGIN
.\tools\schema\snapshots\triggers.sql:137:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:149:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:160:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:170:CREATE DEFINER=`root`@`localhost` TRIGGER `trg_attachments_au_audit` AFTER UPDATE ON `attachments` FOR EACH ROW BEGIN
.\tools\schema\snapshots\triggers.sql:171:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:183:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:194:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:204:CREATE DEFINER=`root`@`localhost` TRIGGER `trg_buildings_au_audit` AFTER UPDATE ON `buildings` FOR EACH ROW BEGIN
.\tools\schema\snapshots\triggers.sql:205:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:213:    INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:222:    INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:234:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:245:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:255:CREATE DEFINER=`root`@`localhost` TRIGGER `trg_calibrations_au_audit` AFTER UPDATE ON `calibrations` FOR EACH ROW BEGIN
.\tools\schema\snapshots\triggers.sql:256:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:268:    INSERT INTO calibration_audit_log (
.\tools\schema\snapshots\triggers.sql:274:    INSERT INTO system_event_log(user_id, event_type, table_name, related_module, record_id, description, source_ip, severity)
.\tools\schema\snapshots\triggers.sql:282:    INSERT INTO calibration_audit_log (
.\tools\schema\snapshots\triggers.sql:289:    INSERT INTO system_event_log(user_id, event_type, table_name, related_module, record_id, description, source_ip, severity)
.\tools\schema\snapshots\triggers.sql:296:CREATE DEFINER=`root`@`localhost` TRIGGER `trg_calibrations_update` AFTER UPDATE ON `calibrations` FOR EACH ROW BEGIN
.\tools\schema\snapshots\triggers.sql:297:    INSERT INTO calibration_audit_log (
.\tools\schema\snapshots\triggers.sql:303:    INSERT INTO system_event_log(user_id, event_type, table_name, related_module, record_id, field_name, old_value, new_value, description, source_ip, severity)
.\tools\schema\snapshots\triggers.sql:311:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:322:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:332:CREATE DEFINER=`root`@`localhost` TRIGGER `trg_calibration_audit_log_au_audit` AFTER UPDATE ON `calibration_audit_log` FOR EACH ROW BEGIN
.\tools\schema\snapshots\triggers.sql:333:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:345:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:356:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:366:CREATE DEFINER=`root`@`localhost` TRIGGER `trg_calibration_export_log_au_audit` AFTER UPDATE ON `calibration_export_log` FOR EACH ROW BEGIN
.\tools\schema\snapshots\triggers.sql:367:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:379:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:390:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:400:CREATE DEFINER=`root`@`localhost` TRIGGER `trg_calibration_sensors_au_audit` AFTER UPDATE ON `calibration_sensors` FOR EACH ROW BEGIN
.\tools\schema\snapshots\triggers.sql:401:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:419:CREATE DEFINER=`root`@`localhost` TRIGGER `trg_cal_sync2_u` BEFORE UPDATE ON `calibrations` FOR EACH ROW BEGIN
.\tools\schema\snapshots\triggers.sql:429:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:440:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:450:CREATE DEFINER=`root`@`localhost` TRIGGER `trg_capa_actions_au_audit` AFTER UPDATE ON `capa_actions` FOR EACH ROW BEGIN
.\tools\schema\snapshots\triggers.sql:451:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:463:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:474:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:484:CREATE DEFINER=`root`@`localhost` TRIGGER `trg_capa_action_log_au_audit` AFTER UPDATE ON `capa_action_log` FOR EACH ROW BEGIN
.\tools\schema\snapshots\triggers.sql:485:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:497:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:508:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:518:CREATE DEFINER=`root`@`localhost` TRIGGER `trg_capa_cases_au_audit` AFTER UPDATE ON `capa_cases` FOR EACH ROW BEGIN
.\tools\schema\snapshots\triggers.sql:519:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:531:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:542:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:552:CREATE DEFINER=`root`@`localhost` TRIGGER `trg_capa_status_history_au_audit` AFTER UPDATE ON `capa_status_history` FOR EACH ROW BEGIN
.\tools\schema\snapshots\triggers.sql:553:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:571:CREATE DEFINER=`root`@`localhost` TRIGGER `trg_capa_sync_u` BEFORE UPDATE ON `capa_cases` FOR EACH ROW BEGIN
.\tools\schema\snapshots\triggers.sql:581:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:592:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:602:CREATE DEFINER=`root`@`localhost` TRIGGER `trg_checklist_items_au_audit` AFTER UPDATE ON `checklist_items` FOR EACH ROW BEGIN
.\tools\schema\snapshots\triggers.sql:603:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:615:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:626:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:636:CREATE DEFINER=`root`@`localhost` TRIGGER `trg_checklist_templates_au_audit` AFTER UPDATE ON `checklist_templates` FOR EACH ROW BEGIN
.\tools\schema\snapshots\triggers.sql:637:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:645:    INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:654:    INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:666:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:677:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:687:CREATE DEFINER=`root`@`localhost` TRIGGER `trg_comments_au_audit` AFTER UPDATE ON `comments` FOR EACH ROW BEGIN
.\tools\schema\snapshots\triggers.sql:688:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:700:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:711:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:721:CREATE DEFINER=`root`@`localhost` TRIGGER `trg_component_devices_au_audit` AFTER UPDATE ON `component_devices` FOR EACH ROW BEGIN
.\tools\schema\snapshots\triggers.sql:722:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:734:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:745:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:755:CREATE DEFINER=`root`@`localhost` TRIGGER `trg_component_models_au_audit` AFTER UPDATE ON `component_models` FOR EACH ROW BEGIN
.\tools\schema\snapshots\triggers.sql:756:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:768:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:779:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:789:CREATE DEFINER=`root`@`localhost` TRIGGER `trg_component_parts_au_audit` AFTER UPDATE ON `component_parts` FOR EACH ROW BEGIN
.\tools\schema\snapshots\triggers.sql:790:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:802:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:813:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:823:CREATE DEFINER=`root`@`localhost` TRIGGER `trg_component_qualifications_au_audit` AFTER UPDATE ON `component_qualifications` FOR EACH ROW BEGIN
.\tools\schema\snapshots\triggers.sql:824:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:836:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:847:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:857:CREATE DEFINER=`root`@`localhost` TRIGGER `trg_component_types_au_audit` AFTER UPDATE ON `component_types` FOR EACH ROW BEGIN
.\tools\schema\snapshots\triggers.sql:858:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:866:    INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:875:    INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:887:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:898:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:908:CREATE DEFINER=`root`@`localhost` TRIGGER `trg_config_change_log_au_audit` AFTER UPDATE ON `config_change_log` FOR EACH ROW BEGIN
.\tools\schema\snapshots\triggers.sql:909:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:921:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:932:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:942:CREATE DEFINER=`root`@`localhost` TRIGGER `trg_contractor_interventions_au_audit` AFTER UPDATE ON `contractor_interventions` FOR EACH ROW BEGIN
.\tools\schema\snapshots\triggers.sql:943:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:955:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:966:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:976:CREATE DEFINER=`root`@`localhost` TRIGGER `trg_contractor_intervention_audit_au_audit` AFTER UPDATE ON `contractor_intervention_audit` FOR EACH ROW BEGIN
.\tools\schema\snapshots\triggers.sql:977:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:995:CREATE DEFINER=`root`@`localhost` TRIGGER `trg_cs_sync_u` BEFORE UPDATE ON `calibration_sensors` FOR EACH ROW BEGIN
.\tools\schema\snapshots\triggers.sql:1005:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:1016:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:1026:CREATE DEFINER=`root`@`localhost` TRIGGER `trg_dashboards_au_audit` AFTER UPDATE ON `dashboards` FOR EACH ROW BEGIN
.\tools\schema\snapshots\triggers.sql:1027:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:1039:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:1050:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:1060:CREATE DEFINER=`root`@`localhost` TRIGGER `trg_delegated_permissions_au_audit` AFTER UPDATE ON `delegated_permissions` FOR EACH ROW BEGIN
.\tools\schema\snapshots\triggers.sql:1061:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:1073:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:1084:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:1094:CREATE DEFINER=`root`@`localhost` TRIGGER `trg_delete_log_au_audit` AFTER UPDATE ON `delete_log` FOR EACH ROW BEGIN
.\tools\schema\snapshots\triggers.sql:1095:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:1107:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:1118:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:1128:CREATE DEFINER=`root`@`localhost` TRIGGER `trg_departments_au_audit` AFTER UPDATE ON `departments` FOR EACH ROW BEGIN
.\tools\schema\snapshots\triggers.sql:1129:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:1137:    INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:1146:    INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:1158:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:1169:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:1179:CREATE DEFINER=`root`@`localhost` TRIGGER `trg_deviations_au_audit` AFTER UPDATE ON `deviations` FOR EACH ROW BEGIN
.\tools\schema\snapshots\triggers.sql:1180:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:1192:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:1203:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:1213:CREATE DEFINER=`root`@`localhost` TRIGGER `trg_deviation_audit_au_audit` AFTER UPDATE ON `deviation_audit` FOR EACH ROW BEGIN
.\tools\schema\snapshots\triggers.sql:1214:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:1226:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:1237:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:1247:CREATE DEFINER=`root`@`localhost` TRIGGER `trg_digital_signatures_au_audit` AFTER UPDATE ON `digital_signatures` FOR EACH ROW BEGIN
.\tools\schema\snapshots\triggers.sql:1248:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:1260:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:1271:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:1281:CREATE DEFINER=`root`@`localhost` TRIGGER `trg_document_versions_au_audit` AFTER UPDATE ON `document_versions` FOR EACH ROW BEGIN
.\tools\schema\snapshots\triggers.sql:1282:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:1294:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:1305:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:1315:CREATE DEFINER=`root`@`localhost` TRIGGER `trg_entity_audit_log_au_audit` AFTER UPDATE ON `entity_audit_log` FOR EACH ROW BEGIN
.\tools\schema\snapshots\triggers.sql:1316:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:1328:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:1339:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:1349:CREATE DEFINER=`root`@`localhost` TRIGGER `trg_entity_tags_au_audit` AFTER UPDATE ON `entity_tags` FOR EACH ROW BEGIN
.\tools\schema\snapshots\triggers.sql:1350:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:1362:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:1373:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:1383:CREATE DEFINER=`root`@`localhost` TRIGGER `trg_export_print_log_au_audit` AFTER UPDATE ON `export_print_log` FOR EACH ROW BEGIN
.\tools\schema\snapshots\triggers.sql:1384:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:1396:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:1407:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:1417:CREATE DEFINER=`root`@`localhost` TRIGGER `trg_external_contractors_au_audit` AFTER UPDATE ON `external_contractors` FOR EACH ROW BEGIN
.\tools\schema\snapshots\triggers.sql:1418:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:1426:    INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:1438:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:1449:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:1459:CREATE DEFINER=`root`@`localhost` TRIGGER `trg_failure_modes_au_audit` AFTER UPDATE ON `failure_modes` FOR EACH ROW BEGIN
.\tools\schema\snapshots\triggers.sql:1460:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:1468:    INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:1480:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:1491:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:1501:CREATE DEFINER=`root`@`localhost` TRIGGER `trg_forensic_user_change_log_au_audit` AFTER UPDATE ON `forensic_user_change_log` FOR EACH ROW BEGIN
.\tools\schema\snapshots\triggers.sql:1502:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:1514:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:1525:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:1535:CREATE DEFINER=`root`@`localhost` TRIGGER `trg_incident_log_au_audit` AFTER UPDATE ON `incident_log` FOR EACH ROW BEGIN
.\tools\schema\snapshots\triggers.sql:1536:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:1554:CREATE DEFINER=`root`@`localhost` TRIGGER `trg_inc_sync_u` BEFORE UPDATE ON `incident_log` FOR EACH ROW BEGIN
.\tools\schema\snapshots\triggers.sql:1564:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:1575:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:1585:CREATE DEFINER=`root`@`localhost` TRIGGER `trg_inspections_au_audit` AFTER UPDATE ON `inspections` FOR EACH ROW BEGIN
.\tools\schema\snapshots\triggers.sql:1586:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:1606:CREATE DEFINER=`root`@`localhost` TRIGGER `trg_insp_sync_u` BEFORE UPDATE ON `inspections` FOR EACH ROW BEGIN
.\tools\schema\snapshots\triggers.sql:1620:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:1631:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:1641:CREATE DEFINER=`root`@`localhost` TRIGGER `trg_integration_log_au_audit` AFTER UPDATE ON `integration_log` FOR EACH ROW BEGIN
.\tools\schema\snapshots\triggers.sql:1642:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:1654:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:1665:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:1675:CREATE DEFINER=`root`@`localhost` TRIGGER `trg_inventory_transactions_au_audit` AFTER UPDATE ON `inventory_transactions` FOR EACH ROW BEGIN
.\tools\schema\snapshots\triggers.sql:1676:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:1688:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:1699:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:1709:CREATE DEFINER=`root`@`localhost` TRIGGER `trg_iot_anomaly_log_au_audit` AFTER UPDATE ON `iot_anomaly_log` FOR EACH ROW BEGIN
.\tools\schema\snapshots\triggers.sql:1710:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:1722:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:1733:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:1743:CREATE DEFINER=`root`@`localhost` TRIGGER `trg_iot_devices_au_audit` AFTER UPDATE ON `iot_devices` FOR EACH ROW BEGIN
.\tools\schema\snapshots\triggers.sql:1744:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:1756:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:1767:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:1777:CREATE DEFINER=`root`@`localhost` TRIGGER `trg_iot_event_audit_au_audit` AFTER UPDATE ON `iot_event_audit` FOR EACH ROW BEGIN
.\tools\schema\snapshots\triggers.sql:1778:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:1790:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:1801:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:1811:CREATE DEFINER=`root`@`localhost` TRIGGER `trg_iot_gateways_au_audit` AFTER UPDATE ON `iot_gateways` FOR EACH ROW BEGIN
.\tools\schema\snapshots\triggers.sql:1812:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:1820:    INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:1829:    INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:1841:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:1852:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:1862:CREATE DEFINER=`root`@`localhost` TRIGGER `trg_iot_sensor_data_au_audit` AFTER UPDATE ON `iot_sensor_data` FOR EACH ROW BEGIN
.\tools\schema\snapshots\triggers.sql:1863:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:1875:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:1886:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:1896:CREATE DEFINER=`root`@`localhost` TRIGGER `trg_irregularities_log_au_audit` AFTER UPDATE ON `irregularities_log` FOR EACH ROW BEGIN
.\tools\schema\snapshots\triggers.sql:1897:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:1909:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:1920:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:1930:CREATE DEFINER=`root`@`localhost` TRIGGER `trg_job_titles_au_audit` AFTER UPDATE ON `job_titles` FOR EACH ROW BEGIN
.\tools\schema\snapshots\triggers.sql:1931:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:1943:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:1954:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:1964:CREATE DEFINER=`root`@`localhost` TRIGGER `trg_locations_au_audit` AFTER UPDATE ON `locations` FOR EACH ROW BEGIN
.\tools\schema\snapshots\triggers.sql:1965:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:1973:    INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:1982:    INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:1994:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:2005:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:2015:CREATE DEFINER=`root`@`localhost` TRIGGER `trg_lookup_domain_au_audit` AFTER UPDATE ON `lookup_domain` FOR EACH ROW BEGIN
.\tools\schema\snapshots\triggers.sql:2016:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:2028:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:2039:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:2049:CREATE DEFINER=`root`@`localhost` TRIGGER `trg_lookup_value_au_audit` AFTER UPDATE ON `lookup_value` FOR EACH ROW BEGIN
.\tools\schema\snapshots\triggers.sql:2050:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:2062:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:2073:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:2087:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:2097:CREATE DEFINER=`root`@`localhost` TRIGGER `trg_machines_au` AFTER UPDATE ON `machines` FOR EACH ROW BEGIN
.\tools\schema\snapshots\triggers.sql:2098:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:2111:CREATE DEFINER=`root`@`localhost` TRIGGER `trg_machines_au_audit` AFTER UPDATE ON `machines` FOR EACH ROW BEGIN
.\tools\schema\snapshots\triggers.sql:2112:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:2120:    INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:2129:    INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:2148:CREATE DEFINER=`root`@`localhost` TRIGGER `trg_machines_bu` BEFORE UPDATE ON `machines` FOR EACH ROW BEGIN
.\tools\schema\snapshots\triggers.sql:2156:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:2167:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:2177:CREATE DEFINER=`root`@`localhost` TRIGGER `trg_machine_components_au_audit` AFTER UPDATE ON `machine_components` FOR EACH ROW BEGIN
.\tools\schema\snapshots\triggers.sql:2178:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:2186:    INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:2195:    INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:2207:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:2218:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:2228:CREATE DEFINER=`root`@`localhost` TRIGGER `trg_machine_lifecycle_event_au_audit` AFTER UPDATE ON `machine_lifecycle_event` FOR EACH ROW BEGIN
.\tools\schema\snapshots\triggers.sql:2229:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:2241:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:2252:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:2262:CREATE DEFINER=`root`@`localhost` TRIGGER `trg_machine_models_au_audit` AFTER UPDATE ON `machine_models` FOR EACH ROW BEGIN
.\tools\schema\snapshots\triggers.sql:2263:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:2275:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:2286:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:2296:CREATE DEFINER=`root`@`localhost` TRIGGER `trg_machine_types_au_audit` AFTER UPDATE ON `machine_types` FOR EACH ROW BEGIN
.\tools\schema\snapshots\triggers.sql:2297:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:2305:    INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:2314:    INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:2326:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:2337:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:2347:CREATE DEFINER=`root`@`localhost` TRIGGER `trg_manufacturers_au_audit` AFTER UPDATE ON `manufacturers` FOR EACH ROW BEGIN
.\tools\schema\snapshots\triggers.sql:2348:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:2356:    INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:2368:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:2379:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:2389:CREATE DEFINER=`root`@`localhost` TRIGGER `trg_measurement_units_au_audit` AFTER UPDATE ON `measurement_units` FOR EACH ROW BEGIN
.\tools\schema\snapshots\triggers.sql:2390:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:2398:    INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:2407:    INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:2425:CREATE DEFINER=`root`@`localhost` TRIGGER `trg_mle_sync_u` BEFORE UPDATE ON `machine_lifecycle_event` FOR EACH ROW BEGIN
.\tools\schema\snapshots\triggers.sql:2435:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:2446:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:2456:CREATE DEFINER=`root`@`localhost` TRIGGER `trg_mobile_device_log_au_audit` AFTER UPDATE ON `mobile_device_log` FOR EACH ROW BEGIN
.\tools\schema\snapshots\triggers.sql:2457:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:2477:CREATE DEFINER=`root`@`localhost` TRIGGER `trg_m_sync_u` BEFORE UPDATE ON `machines` FOR EACH ROW BEGIN
.\tools\schema\snapshots\triggers.sql:2491:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:2502:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:2512:CREATE DEFINER=`root`@`localhost` TRIGGER `trg_notification_queue_au_audit` AFTER UPDATE ON `notification_queue` FOR EACH ROW BEGIN
.\tools\schema\snapshots\triggers.sql:2513:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:2525:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:2536:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:2546:CREATE DEFINER=`root`@`localhost` TRIGGER `trg_notification_templates_au_audit` AFTER UPDATE ON `notification_templates` FOR EACH ROW BEGIN
.\tools\schema\snapshots\triggers.sql:2547:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:2555:    INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:2564:    INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:2576:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:2587:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:2597:CREATE DEFINER=`root`@`localhost` TRIGGER `trg_parts_au_audit` AFTER UPDATE ON `parts` FOR EACH ROW BEGIN
.\tools\schema\snapshots\triggers.sql:2598:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:2606:    INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:2615:    INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:2627:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:2638:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:2648:CREATE DEFINER=`root`@`localhost` TRIGGER `trg_part_bom_au_audit` AFTER UPDATE ON `part_bom` FOR EACH ROW BEGIN
.\tools\schema\snapshots\triggers.sql:2649:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:2661:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:2672:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:2682:CREATE DEFINER=`root`@`localhost` TRIGGER `trg_part_supplier_prices_au_audit` AFTER UPDATE ON `part_supplier_prices` FOR EACH ROW BEGIN
.\tools\schema\snapshots\triggers.sql:2683:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:2695:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:2706:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:2716:CREATE DEFINER=`root`@`localhost` TRIGGER `trg_permissions_au_audit` AFTER UPDATE ON `permissions` FOR EACH ROW BEGIN
.\tools\schema\snapshots\triggers.sql:2717:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:2725:    INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:2737:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:2748:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:2758:CREATE DEFINER=`root`@`localhost` TRIGGER `trg_permission_change_log_au_audit` AFTER UPDATE ON `permission_change_log` FOR EACH ROW BEGIN
.\tools\schema\snapshots\triggers.sql:2759:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:2771:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:2782:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:2792:CREATE DEFINER=`root`@`localhost` TRIGGER `trg_permission_requests_au_audit` AFTER UPDATE ON `permission_requests` FOR EACH ROW BEGIN
.\tools\schema\snapshots\triggers.sql:2793:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:2805:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:2816:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:2826:CREATE DEFINER=`root`@`localhost` TRIGGER `trg_photos_au_audit` AFTER UPDATE ON `photos` FOR EACH ROW BEGIN
.\tools\schema\snapshots\triggers.sql:2827:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:2839:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:2850:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:2860:CREATE DEFINER=`root`@`localhost` TRIGGER `trg_ppm_plans_au_audit` AFTER UPDATE ON `ppm_plans` FOR EACH ROW BEGIN
.\tools\schema\snapshots\triggers.sql:2861:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:2873:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:2884:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:2894:CREATE DEFINER=`root`@`localhost` TRIGGER `trg_preventive_maintenance_plans_au_audit` AFTER UPDATE ON `preventive_maintenance_plans` FOR EACH ROW BEGIN
.\tools\schema\snapshots\triggers.sql:2895:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:2903:    INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:2912:    INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:2932:CREATE DEFINER=`root`@`localhost` TRIGGER `trg_qe_sync_u` BEFORE UPDATE ON `quality_events` FOR EACH ROW BEGIN
.\tools\schema\snapshots\triggers.sql:2946:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:2957:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:2967:CREATE DEFINER=`root`@`localhost` TRIGGER `trg_quality_events_au_audit` AFTER UPDATE ON `quality_events` FOR EACH ROW BEGIN
.\tools\schema\snapshots\triggers.sql:2968:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:2980:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:2991:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:3001:CREATE DEFINER=`root`@`localhost` TRIGGER `trg_report_schedule_au_audit` AFTER UPDATE ON `report_schedule` FOR EACH ROW BEGIN
.\tools\schema\snapshots\triggers.sql:3002:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:3014:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:3025:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:3035:CREATE DEFINER=`root`@`localhost` TRIGGER `trg_requalification_schedule_au_audit` AFTER UPDATE ON `requalification_schedule` FOR EACH ROW BEGIN
.\tools\schema\snapshots\triggers.sql:3036:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:3048:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:3059:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:3069:CREATE DEFINER=`root`@`localhost` TRIGGER `trg_roles_au_audit` AFTER UPDATE ON `roles` FOR EACH ROW BEGIN
.\tools\schema\snapshots\triggers.sql:3070:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:3078:    INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:3090:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:3101:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:3111:CREATE DEFINER=`root`@`localhost` TRIGGER `trg_role_audit_au_audit` AFTER UPDATE ON `role_audit` FOR EACH ROW BEGIN
.\tools\schema\snapshots\triggers.sql:3112:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:3124:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:3135:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:3145:CREATE DEFINER=`root`@`localhost` TRIGGER `trg_role_permissions_au_audit` AFTER UPDATE ON `role_permissions` FOR EACH ROW BEGIN
.\tools\schema\snapshots\triggers.sql:3146:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:3158:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:3169:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:3179:CREATE DEFINER=`root`@`localhost` TRIGGER `trg_rooms_au_audit` AFTER UPDATE ON `rooms` FOR EACH ROW BEGIN
.\tools\schema\snapshots\triggers.sql:3180:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:3188:    INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:3197:    INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:3209:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:3220:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:3230:CREATE DEFINER=`root`@`localhost` TRIGGER `trg_scheduled_jobs_au_audit` AFTER UPDATE ON `scheduled_jobs` FOR EACH ROW BEGIN
.\tools\schema\snapshots\triggers.sql:3231:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:3239:    INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:3251:    INSERT INTO scheduled_job_audit_log (
.\tools\schema\snapshots\triggers.sql:3262:    INSERT INTO scheduled_job_audit_log (
.\tools\schema\snapshots\triggers.sql:3273:CREATE DEFINER=`root`@`localhost` TRIGGER `trg_scheduled_jobs_update` AFTER UPDATE ON `scheduled_jobs` FOR EACH ROW BEGIN
.\tools\schema\snapshots\triggers.sql:3274:    INSERT INTO scheduled_job_audit_log (
.\tools\schema\snapshots\triggers.sql:3286:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:3297:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:3307:CREATE DEFINER=`root`@`localhost` TRIGGER `trg_scheduled_job_audit_log_au_audit` AFTER UPDATE ON `scheduled_job_audit_log` FOR EACH ROW BEGIN
.\tools\schema\snapshots\triggers.sql:3308:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:3320:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:3331:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:3341:CREATE DEFINER=`root`@`localhost` TRIGGER `trg_schema_migration_log_au_audit` AFTER UPDATE ON `schema_migration_log` FOR EACH ROW BEGIN
.\tools\schema\snapshots\triggers.sql:3342:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:3359:    INSERT INTO units(code,name,quantity) VALUES (NEW.unit, NEW.unit, NULL)
.\tools\schema\snapshots\triggers.sql:3360:    ON DUPLICATE KEY UPDATE id=LAST_INSERT_ID(id), name=VALUES(name);
.\tools\schema\snapshots\triggers.sql:3367:CREATE DEFINER=`root`@`localhost` TRIGGER `trg_sdl_sync_u` BEFORE UPDATE ON `sensor_data_logs` FOR EACH ROW BEGIN
.\tools\schema\snapshots\triggers.sql:3374:    INSERT INTO units(code,name) VALUES (NEW.unit, NEW.unit)
.\tools\schema\snapshots\triggers.sql:3375:    ON DUPLICATE KEY UPDATE id=LAST_INSERT_ID(id), name=VALUES(name);
.\tools\schema\snapshots\triggers.sql:3384:    IF (SELECT COUNT(*) FROM users WHERE id = NEW.user_id) = 0 THEN
.\tools\schema\snapshots\triggers.sql:3389:    IF (SELECT COUNT(*) FROM users WHERE id = NEW.approved_by) = 0 THEN
.\tools\schema\snapshots\triggers.sql:3398:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:3409:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:3419:CREATE DEFINER=`root`@`localhost` TRIGGER `trg_sensitive_data_access_log_au_audit` AFTER UPDATE ON `sensitive_data_access_log` FOR EACH ROW BEGIN
.\tools\schema\snapshots\triggers.sql:3420:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:3432:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:3443:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:3453:CREATE DEFINER=`root`@`localhost` TRIGGER `trg_sensor_data_logs_au_audit` AFTER UPDATE ON `sensor_data_logs` FOR EACH ROW BEGIN
.\tools\schema\snapshots\triggers.sql:3454:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:3466:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:3477:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:3487:CREATE DEFINER=`root`@`localhost` TRIGGER `trg_sensor_models_au_audit` AFTER UPDATE ON `sensor_models` FOR EACH ROW BEGIN
.\tools\schema\snapshots\triggers.sql:3488:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:3500:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:3511:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:3521:CREATE DEFINER=`root`@`localhost` TRIGGER `trg_sensor_types_au_audit` AFTER UPDATE ON `sensor_types` FOR EACH ROW BEGIN
.\tools\schema\snapshots\triggers.sql:3522:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:3530:    INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:3539:    INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:3551:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:3562:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:3572:CREATE DEFINER=`root`@`localhost` TRIGGER `trg_session_log_au_audit` AFTER UPDATE ON `session_log` FOR EACH ROW BEGIN
.\tools\schema\snapshots\triggers.sql:3573:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:3585:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:3596:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:3606:CREATE DEFINER=`root`@`localhost` TRIGGER `trg_sites_au_audit` AFTER UPDATE ON `sites` FOR EACH ROW BEGIN
.\tools\schema\snapshots\triggers.sql:3607:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:3615:    INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:3624:    INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:3636:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:3647:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:3657:CREATE DEFINER=`root`@`localhost` TRIGGER `trg_sop_documents_au_audit` AFTER UPDATE ON `sop_documents` FOR EACH ROW BEGIN
.\tools\schema\snapshots\triggers.sql:3658:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:3666:    INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:3675:    INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:3687:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:3698:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:3708:CREATE DEFINER=`root`@`localhost` TRIGGER `trg_sop_document_log_au_audit` AFTER UPDATE ON `sop_document_log` FOR EACH ROW BEGIN
.\tools\schema\snapshots\triggers.sql:3709:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:3721:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:3732:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:3742:CREATE DEFINER=`root`@`localhost` TRIGGER `trg_stock_levels_au_audit` AFTER UPDATE ON `stock_levels` FOR EACH ROW BEGIN
.\tools\schema\snapshots\triggers.sql:3743:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:3755:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:3766:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:3776:CREATE DEFINER=`root`@`localhost` TRIGGER `trg_suppliers_au_audit` AFTER UPDATE ON `suppliers` FOR EACH ROW BEGIN
.\tools\schema\snapshots\triggers.sql:3777:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:3785:    INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:3794:    INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:3806:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:3817:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:3827:CREATE DEFINER=`root`@`localhost` TRIGGER `trg_supplier_risk_audit_au_audit` AFTER UPDATE ON `supplier_risk_audit` FOR EACH ROW BEGIN
.\tools\schema\snapshots\triggers.sql:3828:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:3848:CREATE DEFINER=`root`@`localhost` TRIGGER `trg_sup_sync_u` BEFORE UPDATE ON `suppliers` FOR EACH ROW BEGIN
.\tools\schema\snapshots\triggers.sql:3877:CREATE DEFINER=`root`@`localhost` TRIGGER `trg_system_event_log_bu` BEFORE UPDATE ON `system_event_log` FOR EACH ROW BEGIN
.\tools\schema\snapshots\triggers.sql:3906:    IF (SELECT COUNT(*) FROM users WHERE id = NEW.user_id) = 0 THEN
.\tools\schema\snapshots\triggers.sql:3915:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:3926:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:3936:CREATE DEFINER=`root`@`localhost` TRIGGER `trg_system_parameters_au_audit` AFTER UPDATE ON `system_parameters` FOR EACH ROW BEGIN
.\tools\schema\snapshots\triggers.sql:3937:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:3949:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:3960:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:3970:CREATE DEFINER=`root`@`localhost` TRIGGER `trg_tags_au_audit` AFTER UPDATE ON `tags` FOR EACH ROW BEGIN
.\tools\schema\snapshots\triggers.sql:3971:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:3983:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:3994:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:4004:CREATE DEFINER=`root`@`localhost` TRIGGER `trg_tenants_au_audit` AFTER UPDATE ON `tenants` FOR EACH ROW BEGIN
.\tools\schema\snapshots\triggers.sql:4005:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:4013:    INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:4022:    INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:4034:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:4045:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:4055:CREATE DEFINER=`root`@`localhost` TRIGGER `trg_users_au_audit` AFTER UPDATE ON `users` FOR EACH ROW BEGIN
.\tools\schema\snapshots\triggers.sql:4056:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:4068:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:4079:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:4089:CREATE DEFINER=`root`@`localhost` TRIGGER `trg_user_audit_au_audit` AFTER UPDATE ON `user_audit` FOR EACH ROW BEGIN
.\tools\schema\snapshots\triggers.sql:4090:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:4102:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:4113:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:4123:CREATE DEFINER=`root`@`localhost` TRIGGER `trg_user_esignatures_au_audit` AFTER UPDATE ON `user_esignatures` FOR EACH ROW BEGIN
.\tools\schema\snapshots\triggers.sql:4124:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:4136:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:4147:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:4157:CREATE DEFINER=`root`@`localhost` TRIGGER `trg_user_login_audit_au_audit` AFTER UPDATE ON `user_login_audit` FOR EACH ROW BEGIN
.\tools\schema\snapshots\triggers.sql:4158:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:4170:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:4181:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:4191:CREATE DEFINER=`root`@`localhost` TRIGGER `trg_user_permissions_au_audit` AFTER UPDATE ON `user_permissions` FOR EACH ROW BEGIN
.\tools\schema\snapshots\triggers.sql:4192:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:4204:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:4215:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:4225:CREATE DEFINER=`root`@`localhost` TRIGGER `trg_user_roles_au_audit` AFTER UPDATE ON `user_roles` FOR EACH ROW BEGIN
.\tools\schema\snapshots\triggers.sql:4226:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:4238:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:4249:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:4259:CREATE DEFINER=`root`@`localhost` TRIGGER `trg_user_subscriptions_au_audit` AFTER UPDATE ON `user_subscriptions` FOR EACH ROW BEGIN
.\tools\schema\snapshots\triggers.sql:4260:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:4272:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:4283:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:4293:CREATE DEFINER=`root`@`localhost` TRIGGER `trg_user_training_au_audit` AFTER UPDATE ON `user_training` FOR EACH ROW BEGIN
.\tools\schema\snapshots\triggers.sql:4294:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:4306:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:4317:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:4327:CREATE DEFINER=`root`@`localhost` TRIGGER `trg_validations_au_audit` AFTER UPDATE ON `validations` FOR EACH ROW BEGIN
.\tools\schema\snapshots\triggers.sql:4328:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:4340:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:4351:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:4361:CREATE DEFINER=`root`@`localhost` TRIGGER `trg_warehouses_au_audit` AFTER UPDATE ON `warehouses` FOR EACH ROW BEGIN
.\tools\schema\snapshots\triggers.sql:4362:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:4370:    INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:4382:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:4393:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:4403:CREATE DEFINER=`root`@`localhost` TRIGGER `trg_work_orders_au_audit` AFTER UPDATE ON `work_orders` FOR EACH ROW BEGIN
.\tools\schema\snapshots\triggers.sql:4404:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:4416:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:4427:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:4437:CREATE DEFINER=`root`@`localhost` TRIGGER `trg_work_order_audit_au_audit` AFTER UPDATE ON `work_order_audit` FOR EACH ROW BEGIN
.\tools\schema\snapshots\triggers.sql:4438:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:4450:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:4461:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:4471:CREATE DEFINER=`root`@`localhost` TRIGGER `trg_work_order_checklist_item_au_audit` AFTER UPDATE ON `work_order_checklist_item` FOR EACH ROW BEGIN
.\tools\schema\snapshots\triggers.sql:4472:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:4484:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:4495:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:4505:CREATE DEFINER=`root`@`localhost` TRIGGER `trg_work_order_comments_au_audit` AFTER UPDATE ON `work_order_comments` FOR EACH ROW BEGIN
.\tools\schema\snapshots\triggers.sql:4506:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:4518:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:4529:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:4539:CREATE DEFINER=`root`@`localhost` TRIGGER `trg_work_order_parts_au_audit` AFTER UPDATE ON `work_order_parts` FOR EACH ROW BEGIN
.\tools\schema\snapshots\triggers.sql:4540:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:4552:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:4563:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:4573:CREATE DEFINER=`root`@`localhost` TRIGGER `trg_work_order_signatures_au_audit` AFTER UPDATE ON `work_order_signatures` FOR EACH ROW BEGIN
.\tools\schema\snapshots\triggers.sql:4574:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:4586:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:4597:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:4607:CREATE DEFINER=`root`@`localhost` TRIGGER `trg_work_order_status_log_au_audit` AFTER UPDATE ON `work_order_status_log` FOR EACH ROW BEGIN
.\tools\schema\snapshots\triggers.sql:4608:  INSERT INTO system_event_log
.\tools\schema\snapshots\triggers.sql:4633:CREATE DEFINER=`root`@`localhost` TRIGGER `trg_wo_sync_u` BEFORE UPDATE ON `work_orders` FOR EACH ROW BEGIN
.\Views\SuppliersPage.xaml.cs:72:                                 FROM suppliers";
.\Views\SuppliersPage.xaml.cs:113:                const string sql = @"INSERT INTO suppliers (name, vat_number, address, city, country, email, phone, website, supplier_type, notes, contract_file)
.\Views\SuppliersPage.xaml.cs:169:                const string sql = @"UPDATE suppliers SET 
.\Views\SuppliersPage.xaml.cs:215:            const string sql = "DELETE FROM suppliers WHERE id=@id";
.\Services\WorkOrderAuditService.cs:54:        #region === UPDATE AUDIT ===
.\Services\DatabaseService.RiskAssessments.Extensions.cs:20:            var dt = await db.ExecuteSelectAsync("SELECT * FROM risk_assessments ORDER BY id DESC", null, token).ConfigureAwait(false);
.\Views\ComponentsPage.xaml.cs:73:FROM machine_components
.\Views\ComponentsPage.xaml.cs:125:INSERT INTO machine_components (machine_id, code, name, type, sop_doc, status, install_date)
.\Views\ComponentsPage.xaml.cs:179:UPDATE machine_components SET
.\Views\ComponentsPage.xaml.cs:221:                const string sql = @"UPDATE machine_components SET is_deleted=1, deleted_at=NOW() WHERE id=@id;";
.\tmp_align.txt:44:  ADD COLUMN IF NOT EXISTS `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP;
.\Services\DatabaseService.DeviationAudit.Extensions.cs:24:            const string sql = @"INSERT INTO deviation_audit (deviation_id, user_id, action, details, changed_at, device_info, source_ip, session_id, digital_signature, regulatory_status, ai_anomaly_score, validated, comment, old_value, new_value, signature_type, signature_valid, export_status, export_time, exported_by, restored_from_snapshot, restoration_reference, approval_status, approval_time, approved_by, deleted, deleted_at, deleted_by, created_at, updated_at, related_file, related_photo, iot_event_id)
.\Services\DatabaseService.DeviationAudit.Extensions.cs:38:            const string sql = @"UPDATE deviation_audit SET deviation_id=@dev, user_id=@uid, action=@act, details=@det, changed_at=@chg, device_info=@devinfo, source_ip=@ip, session_id=@sid, digital_signature=@sig, regulatory_status=@reg, ai_anomaly_score=@ais, validated=@val, comment=@com, old_value=@old, new_value=@new, signature_type=@sigtype, signature_valid=@sigok, export_status=@expst, export_time=@exptm, exported_by=@expby, restored_from_snapshot=@restored, restoration_reference=@restref, approval_status=@apprst, approval_time=@apprtm, approved_by=@apprby, deleted=@del, deleted_at=@delat, deleted_by=@delby, updated_at=NOW(), related_file=@rfile, related_photo=@rphoto, iot_event_id=@iot WHERE id=@id";
.\Services\DatabaseService.DeviationAudit.Extensions.cs:48:            await db.ExecuteNonQueryAsync("DELETE FROM deviation_audit WHERE id=@id", new[] { new MySqlParameter("@id", id) }, token).ConfigureAwait(false);
.\Services\DatabaseService.DeviationAudit.Extensions.cs:55:            var dt = await db.ExecuteSelectAsync("SELECT * FROM deviation_audit WHERE id=@id LIMIT 1", new[] { new MySqlParameter("@id", id) }, token).ConfigureAwait(false);
.\Services\DatabaseService.DeviationAudit.Extensions.cs:62:            var dt = await db.ExecuteSelectAsync("SELECT * FROM deviation_audit WHERE deviation_id=@id ORDER BY changed_at DESC, id DESC", new[] { new MySqlParameter("@id", deviationId) }, token).ConfigureAwait(false);
.\Services\DatabaseService.DeviationAudit.Extensions.cs:68:            var dt = await db.ExecuteSelectAsync("SELECT * FROM deviation_audit WHERE user_id=@id ORDER BY changed_at DESC, id DESC", new[] { new MySqlParameter("@id", userId) }, token).ConfigureAwait(false);
.\Services\DatabaseService.DeviationAudit.Extensions.cs:74:            var dt = await db.ExecuteSelectAsync("SELECT * FROM deviation_audit WHERE action=@a ORDER BY changed_at DESC, id DESC", new[] { new MySqlParameter("@a", action) }, token).ConfigureAwait(false);
.\Services\DatabaseService.DeviationAudit.Extensions.cs:80:            var dt = await db.ExecuteSelectAsync("SELECT * FROM deviation_audit WHERE changed_at BETWEEN @f AND @t ORDER BY changed_at DESC, id DESC",
.\Services\DatabaseService.Incidents.Extensions.cs:20:            var dt = await db.ExecuteSelectAsync("SELECT * FROM incidents ORDER BY id DESC", null, token).ConfigureAwait(false);
.\Services\DatabaseService.Incidents.Extensions.cs:28:            var dt = await db.ExecuteSelectAsync("SELECT * FROM incidents WHERE id=@id LIMIT 1", new[] { new MySqlParameter("@id", id) }, token).ConfigureAwait(false);
.\Services\DatabaseService.Incidents.Extensions.cs:35:            string insert = @"INSERT INTO incidents (title, description, type, priority, detected_at, reported_at, reported_by_id, assigned_to_id, work_order_id, capa_case_id, status, root_cause, closed_at, closed_by_id, digital_signature, last_modified, last_modified_by_id, source_ip, notes, is_deleted, anomaly_score, risk_level, assigned_investigator, classification, linked_deviation_id, linked_capa_id, closure_comment, is_critical)
.\Services\DatabaseService.Incidents.Extensions.cs:37:            string updateSql = @"UPDATE incidents SET title=@t, description=@d, type=@type, priority=@prio, detected_at=@det, reported_at=@rep, reported_by_id=@rby, assigned_to_id=@assn, work_order_id=@wo, capa_case_id=@capa, status=@status, root_cause=@rc, closed_at=@closed, closed_by_id=@cby, digital_signature=@sig, last_modified=NOW(), last_modified_by_id=@lmb, source_ip=@ip, notes=@notes, is_deleted=@del, anomaly_score=@anom, risk_level=@risk, assigned_investigator=@invest, classification=@class, linked_deviation_id=@ldev, linked_capa_id=@lcapa, closure_comment=@clos, is_critical=@critical WHERE id=@id";
.\Services\DatabaseService.Incidents.Extensions.cs:88:            await db.ExecuteNonQueryAsync("DELETE FROM incidents WHERE id=@id", new[] { new MySqlParameter("@id", id) }, token).ConfigureAwait(false);
.\Services\DatabaseService.Documents.Extensions.cs:20:            var dt = await db.ExecuteSelectAsync("SELECT * FROM documentcontrol ORDER BY id DESC", null, token).ConfigureAwait(false);
.\Services\DatabaseService.Documents.Extensions.cs:28:            const string sql = @"INSERT INTO documentcontrol (code, title, revision, status, file_path, description, device_info)
.\Services\DatabaseService.Documents.Extensions.cs:50:                await db.ExecuteNonQueryAsync("UPDATE documentcontrol SET revision=@rev, file_path=@file WHERE id=@id", new[]
.\Services\DatabaseService.Documents.Extensions.cs:66:            try { await db.ExecuteNonQueryAsync("UPDATE documentcontrol SET status='approved' WHERE id=@id", new[] { new MySqlParameter("@id", documentId) }, token).ConfigureAwait(false); } catch { }
.\Services\DatabaseService.Documents.Extensions.cs:72:            try { await db.ExecuteNonQueryAsync("UPDATE documentcontrol SET status='published' WHERE id=@id", new[] { new MySqlParameter("@id", documentId) }, token).ConfigureAwait(false); } catch { }
.\Services\DatabaseService.Documents.Extensions.cs:78:            try { await db.ExecuteNonQueryAsync("UPDATE documentcontrol SET status='expired' WHERE id=@id", new[] { new MySqlParameter("@id", documentId) }, token).ConfigureAwait(false); } catch { }
.\Services\DatabaseService.Documents.Extensions.cs:87:                await db.ExecuteNonQueryAsync("UPDATE documentcontrol SET linked_change_controls = CONCAT(IFNULL(linked_change_controls,''), CASE WHEN linked_change_controls IS NULL OR linked_change_controls='' THEN '' ELSE ',' END, @cc) WHERE id=@id",
.\Services\DatabaseService.CapaExtensions.cs:26:            // TODO: SELECT * FROM capa_action_log WHERE id = @id;
.\Services\DatabaseService.CapaExtensions.cs:35:            // TODO: SELECT * FROM capa_action_log WHERE capa_case_id = @capaId ORDER BY performed_at DESC;
.\Services\DatabaseService.CapaExtensions.cs:44:            // TODO: SELECT * FROM capa_action_log WHERE performed_by = @userId ORDER BY performed_at DESC;
.\Services\DatabaseService.CapaExtensions.cs:53:            // TODO: SELECT * FROM capa_action_log WHERE action_type = @action ORDER BY performed_at DESC;
.\Services\DatabaseService.CapaExtensions.cs:63:            // TODO: SELECT * FROM capa_action_log WHERE performed_at BETWEEN @from AND @to ORDER BY performed_at DESC;
.\Services\WindowManagerService.cs:163:FROM user_window_layouts
.\Services\WindowManagerService.cs:204:INSERT INTO user_window_layouts (user_id, page_type, pos_x, pos_y, width, height, saved_at)
.\Services\DatabaseService.Rbac.Extensions.cs:55:            const string sql = @"SELECT * FROM users ORDER BY full_name, username, id;";
.\Services\DatabaseService.Rbac.Extensions.cs:106:            const string sql = @"SELECT * FROM users WHERE id=@id LIMIT 1;";
.\Services\DatabaseService.Rbac.Extensions.cs:198:                    "UPDATE users SET is_deleted=1, deleted_at=NOW() WHERE id=@id",
.\Services\DatabaseService.Rbac.Extensions.cs:209:                    "DELETE FROM users WHERE id=@id",
.\Services\DatabaseService.Rbac.Extensions.cs:257:            var dt = await db.ExecuteSelectAsync("SELECT * FROM roles ORDER BY name, id", null, token).ConfigureAwait(false);
.\Services\DatabaseService.Rbac.Extensions.cs:269:            var dt = await db.ExecuteSelectAsync("SELECT * FROM permissions ORDER BY code, id", null, token).ConfigureAwait(false);
.\Services\DatabaseService.Rbac.Extensions.cs:288:INSERT INTO user_roles (user_id, role_id, granted_by, granted_at)
.\Services\DatabaseService.Rbac.Extensions.cs:290:ON DUPLICATE KEY UPDATE granted_by=VALUES(granted_by), granted_at=VALUES(granted_at);";
.\Services\DatabaseService.Rbac.Extensions.cs:315:                "DELETE FROM user_roles WHERE user_id=@u AND role_id=@r",
.\Services\DatabaseService.Rbac.Extensions.cs:334:INSERT INTO role_permissions (role_id, permission_id)
.\Services\DatabaseService.Rbac.Extensions.cs:336:ON DUPLICATE KEY UPDATE role_id=role_id;";
.\Services\DatabaseService.Rbac.Extensions.cs:360:                "DELETE FROM role_permissions WHERE role_id=@r AND permission_id=@p",
.\Services\DatabaseService.Rbac.Extensions.cs:401:INSERT INTO user_audit (user_id, action, description, created_at, source_ip, device_info, session_id)
.\Services\DatabaseService.Rbac.Extensions.cs:446:INSERT INTO role_audit (role_id, action, description, created_at, source_ip, device_info, session_id)
.\Services\DatabaseService.Rbac.Extensions.cs:487:INSERT INTO export_print_log (user_id, format, table_name, filter_used, file_path, source_ip, note)
.\Services\DatabaseService.Rbac.Extensions.cs:521:INSERT INTO export_print_log (user_id, format, table_name, filter_used, file_path, source_ip, note)
.\Services\DatabaseService.Rbac.Extensions.cs:555:INSERT INTO export_print_log (user_id, format, table_name, filter_used, file_path, source_ip, note)
.\Services\DatabaseService.Rbac.Extensions.cs:657:                    $"SELECT user_id, role_id FROM user_roles WHERE user_id IN ({inClause})", pars, token)
.\Services\DatabaseService.Rbac.Extensions.cs:691:                    $"SELECT user_id, permission_id FROM user_permissions WHERE user_id IN ({inClause})", pars, token)
.\tools\schema\snapshots\schema.sql:12:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\tools\schema\snapshots\schema.sql:35:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\tools\schema\snapshots\schema.sql:52:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\tools\schema\snapshots\schema.sql:74:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\tools\schema\snapshots\schema.sql:98:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\tools\schema\snapshots\schema.sql:134:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\tools\schema\snapshots\schema.sql:151:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\tools\schema\snapshots\schema.sql:173:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\tools\schema\snapshots\schema.sql:192:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\tools\schema\snapshots\schema.sql:212:  `last_modified` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\tools\schema\snapshots\schema.sql:216:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\tools\schema\snapshots\schema.sql:251:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\tools\schema\snapshots\schema.sql:274:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\tools\schema\snapshots\schema.sql:290:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\tools\schema\snapshots\schema.sql:329:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\tools\schema\snapshots\schema.sql:350:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\tools\schema\snapshots\schema.sql:363:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\tools\schema\snapshots\schema.sql:377:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\tools\schema\snapshots\schema.sql:391:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\tools\schema\snapshots\schema.sql:407:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\tools\schema\snapshots\schema.sql:419:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\tools\schema\snapshots\schema.sql:437:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\tools\schema\snapshots\schema.sql:448:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\tools\schema\snapshots\schema.sql:464:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\tools\schema\snapshots\schema.sql:488:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\tools\schema\snapshots\schema.sql:506:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\tools\schema\snapshots\schema.sql:535:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\tools\schema\snapshots\schema.sql:554:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\tools\schema\snapshots\schema.sql:591:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\tools\schema\snapshots\schema.sql:606:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\tools\schema\snapshots\schema.sql:646:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\tools\schema\snapshots\schema.sql:670:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\tools\schema\snapshots\schema.sql:717:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\tools\schema\snapshots\schema.sql:733:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\tools\schema\snapshots\schema.sql:758:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\tools\schema\snapshots\schema.sql:774:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\tools\schema\snapshots\schema.sql:786:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\tools\schema\snapshots\schema.sql:809:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\tools\schema\snapshots\schema.sql:836:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\tools\schema\snapshots\schema.sql:855:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\tools\schema\snapshots\schema.sql:885:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\tools\schema\snapshots\schema.sql:916:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\tools\schema\snapshots\schema.sql:939:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\tools\schema\snapshots\schema.sql:954:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\tools\schema\snapshots\schema.sql:980:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\tools\schema\snapshots\schema.sql:995:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\tools\schema\snapshots\schema.sql:1005:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\tools\schema\snapshots\schema.sql:1015:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\tools\schema\snapshots\schema.sql:1035:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\tools\schema\snapshots\schema.sql:1055:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\tools\schema\snapshots\schema.sql:1066:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\tools\schema\snapshots\schema.sql:1083:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\tools\schema\snapshots\schema.sql:1095:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\tools\schema\snapshots\schema.sql:1108:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\tools\schema\snapshots\schema.sql:1124:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\tools\schema\snapshots\schema.sql:1176:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\tools\schema\snapshots\schema.sql:1201:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\tools\schema\snapshots\schema.sql:1214:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\tools\schema\snapshots\schema.sql:1247:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\tools\schema\snapshots\schema.sql:1299:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\tools\schema\snapshots\schema.sql:1309:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\tools\schema\snapshots\schema.sql:1324:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\tools\schema\snapshots\schema.sql:1341:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\tools\schema\snapshots\schema.sql:1357:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\tools\schema\snapshots\schema.sql:1368:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\tools\schema\snapshots\schema.sql:1385:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\tools\schema\snapshots\schema.sql:1422:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\tools\schema\snapshots\schema.sql:1474:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\tools\schema\snapshots\schema.sql:1497:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\tools\schema\snapshots\schema.sql:1514:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\tools\schema\snapshots\schema.sql:1552:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\tools\schema\snapshots\schema.sql:1571:  `last_modified` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\tools\schema\snapshots\schema.sql:1572:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\tools\schema\snapshots\schema.sql:1575:  CONSTRAINT `fk_ppm_plans_machine` FOREIGN KEY (`machine_id`) REFERENCES `machines` (`id`) ON DELETE CASCADE ON UPDATE CASCADE
.\tools\schema\snapshots\schema.sql:1593:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\tools\schema\snapshots\schema.sql:1641:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\tools\schema\snapshots\schema.sql:1668:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\tools\schema\snapshots\schema.sql:1681:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\tools\schema\snapshots\schema.sql:1685:  CONSTRAINT `fk_ref_value_domain` FOREIGN KEY (`domain_id`) REFERENCES `ref_domain` (`id`) ON DELETE CASCADE ON UPDATE CASCADE
.\tools\schema\snapshots\schema.sql:1699:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\tools\schema\snapshots\schema.sql:1714:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\tools\schema\snapshots\schema.sql:1747:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\tools\schema\snapshots\schema.sql:1759:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\tools\schema\snapshots\schema.sql:1791:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\tools\schema\snapshots\schema.sql:1814:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\tools\schema\snapshots\schema.sql:1834:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\tools\schema\snapshots\schema.sql:1871:  `last_modified` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\tools\schema\snapshots\schema.sql:1878:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\tools\schema\snapshots\schema.sql:1905:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\tools\schema\snapshots\schema.sql:1935:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\tools\schema\snapshots\schema.sql:1968:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\tools\schema\snapshots\schema.sql:1987:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\tools\schema\snapshots\schema.sql:2001:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\tools\schema\snapshots\schema.sql:2021:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\tools\schema\snapshots\schema.sql:2047:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\tools\schema\snapshots\schema.sql:2060:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\tools\schema\snapshots\schema.sql:2080:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\tools\schema\snapshots\schema.sql:2124:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\tools\schema\snapshots\schema.sql:2163:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\tools\schema\snapshots\schema.sql:2198:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\tools\schema\snapshots\schema.sql:2229:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\tools\schema\snapshots\schema.sql:2270:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\tools\schema\snapshots\schema.sql:2282:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\tools\schema\snapshots\schema.sql:2296:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\tools\schema\snapshots\schema.sql:2315:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\tools\schema\snapshots\schema.sql:2332:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\tools\schema\snapshots\schema.sql:2359:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\tools\schema\snapshots\schema.sql:2385:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\tools\schema\snapshots\schema.sql:2414:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\tools\schema\snapshots\schema.sql:2433:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\tools\schema\snapshots\schema.sql:2449:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\tools\schema\snapshots\schema.sql:2490:  `last_modified` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\tools\schema\snapshots\schema.sql:2496:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\tools\schema\snapshots\schema.sql:2536:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\tools\schema\snapshots\schema.sql:2571:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\tools\schema\snapshots\schema.sql:2614:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\tools\schema\snapshots\schema.sql:2635:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\tools\schema\snapshots\schema.sql:2650:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\tools\schema\snapshots\schema.sql:2663:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\tools\schema\snapshots\schema.sql:2702:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\tools\schema\snapshots\schema.sql:2719:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\tools\schema\snapshots\schema.sql:2749:  `updated_at` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
.\tools\schema\snapshots\routines.sql:9:        SELECT 1 FROM INFORMATION_SCHEMA.COLUMNS
.\tools\schema\snapshots\routines.sql:25:  IF EXISTS (SELECT 1 FROM information_schema.tables
.\tools\schema\snapshots\routines.sql:27:    IF NOT EXISTS (SELECT 1 FROM information_schema.table_constraints
.\tools\schema\snapshots\routines.sql:41:  IF EXISTS (SELECT 1 FROM information_schema.tables
.\tools\schema\snapshots\routines.sql:43:    IF NOT EXISTS (SELECT 1 FROM information_schema.statistics
.\tools\schema\snapshots\routines.sql:57:  UPDATE work_orders wo
.\tools\schema\snapshots\routines.sql:58:  JOIN ref_domain d ON d.code='work_order_status'
.\tools\schema\snapshots\routines.sql:59:  JOIN ref_value rv ON rv.domain_id=d.id AND rv.code=wo.status
.\tools\schema\snapshots\routines.sql:63:  UPDATE work_orders wo
.\tools\schema\snapshots\routines.sql:64:  JOIN ref_domain d ON d.code='work_order_type'
.\tools\schema\snapshots\routines.sql:65:  JOIN ref_value rv ON rv.domain_id=d.id AND rv.code=wo.type
.\tools\schema\snapshots\routines.sql:69:  UPDATE work_orders wo
.\tools\schema\snapshots\routines.sql:70:  JOIN ref_domain d ON d.code='priority'
.\tools\schema\snapshots\routines.sql:71:  JOIN ref_value rv ON rv.domain_id=d.id AND rv.code=wo.priority
.\tools\schema\snapshots\routines.sql:76:  UPDATE inspections i
.\tools\schema\snapshots\routines.sql:77:  JOIN ref_domain d1 ON d1.code='inspection_type'
.\tools\schema\snapshots\routines.sql:78:  JOIN ref_value rv1 ON rv1.domain_id=d1.id AND rv1.code=i.type
.\tools\schema\snapshots\routines.sql:82:  UPDATE inspections i
.\tools\schema\snapshots\routines.sql:83:  JOIN ref_domain d2 ON d2.code='inspection_result'
.\tools\schema\snapshots\routines.sql:84:  JOIN ref_value rv2 ON rv2.domain_id=d2.id AND rv2.code=i.result
.\tools\schema\snapshots\routines.sql:89:  UPDATE calibrations c
.\tools\schema\snapshots\routines.sql:90:  JOIN ref_domain d ON d.code='calibration_result'
.\tools\schema\snapshots\routines.sql:91:  JOIN ref_value rv ON rv.domain_id=d.id AND rv.code=c.result
.\tools\schema\snapshots\routines.sql:96:  UPDATE quality_events q
.\tools\schema\snapshots\routines.sql:97:  JOIN ref_domain d ON d.code='quality_event_type'
.\tools\schema\snapshots\routines.sql:98:  JOIN ref_value rv ON rv.domain_id=d.id AND rv.code=q.event_type
.\tools\schema\snapshots\routines.sql:102:  UPDATE quality_events q
.\tools\schema\snapshots\routines.sql:103:  JOIN ref_domain d ON d.code='quality_status'
.\tools\schema\snapshots\routines.sql:104:  JOIN ref_value rv ON rv.domain_id=d.id AND rv.code=q.status
.\tools\schema\snapshots\routines.sql:109:  UPDATE machines m
.\tools\schema\snapshots\routines.sql:110:  JOIN ref_domain d ON d.code='asset_status'
.\tools\schema\snapshots\routines.sql:111:  JOIN ref_value rv ON rv.domain_id=d.id AND rv.code=m.status
.\tools\schema\snapshots\routines.sql:115:  UPDATE machines m
.\tools\schema\snapshots\routines.sql:116:  JOIN ref_domain d ON d.code='lifecycle_phase'
.\tools\schema\snapshots\routines.sql:117:  JOIN ref_value rv ON rv.domain_id=d.id AND rv.code=m.lifecycle_phase
.\tools\schema\snapshots\routines.sql:122:  UPDATE suppliers s
.\tools\schema\snapshots\routines.sql:123:  JOIN ref_domain d1 ON d1.code='supplier_status'
.\tools\schema\snapshots\routines.sql:124:  JOIN ref_value rv1 ON rv1.domain_id=d1.id AND rv1.code=s.status
.\tools\schema\snapshots\routines.sql:128:  UPDATE suppliers s
.\tools\schema\snapshots\routines.sql:129:  JOIN ref_domain d2 ON d2.code='supplier_type'
.\tools\schema\snapshots\routines.sql:130:  JOIN ref_value rv2 ON rv2.domain_id=d2.id AND rv2.code=s.type
.\tools\schema\snapshots\routines.sql:153:      FROM INFORMATION_SCHEMA.TABLES
.\tools\schema\snapshots\routines.sql:160:    FETCH cur INTO tbl;
.\tools\schema\snapshots\routines.sql:166:      SELECT 1 FROM INFORMATION_SCHEMA.COLUMNS
.\tools\schema\snapshots\routines.sql:177:      SELECT 1 FROM INFORMATION_SCHEMA.COLUMNS
.\tools\schema\snapshots\routines.sql:183:                      ' ADD COLUMN updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP');
.\tools\schema\snapshots\routines.sql:222:  SELECT id INTO v_domain_id
.\tools\schema\snapshots\routines.sql:223:    FROM lookup_domain
.\tools\schema\snapshots\routines.sql:232:    'JOIN lookup_value v ',
.\tools\schema\snapshots\routines.sql:265:    INSERT INTO ref_domain(`name`) VALUES (p_domain)
.\tools\schema\snapshots\routines.sql:270:    INSERT INTO ref_value(`domain_id`,`code`,`label`,`is_active`)
.\tools\schema\snapshots\routines.sql:297:  SELECT COUNT(*)>0 INTO has_id       FROM information_schema.columns WHERE table_schema = DATABASE() AND table_name = p_table AND column_name = 'id';
.\tools\schema\snapshots\routines.sql:298:  SELECT COUNT(*)>0 INTO has_code     FROM information_schema.columns WHERE table_schema = DATABASE() AND table_name = p_table AND column_name = 'code';
.\tools\schema\snapshots\routines.sql:299:  SELECT COUNT(*)>0 INTO has_name     FROM information_schema.columns WHERE table_schema = DATABASE() AND table_name = p_table AND column_name = 'name';
.\tools\schema\snapshots\routines.sql:300:  SELECT COUNT(*)>0 INTO has_number   FROM information_schema.columns WHERE table_schema = DATABASE() AND table_name = p_table AND column_name = 'number';
.\tools\schema\snapshots\routines.sql:301:  SELECT COUNT(*)>0 INTO has_username FROM information_schema.columns WHERE table_schema = DATABASE() AND table_name = p_table AND column_name = 'username';
.\tools\schema\snapshots\routines.sql:312:'  INSERT INTO system_event_log\n',
.\tools\schema\snapshots\routines.sql:326:'AFTER UPDATE ON ', p_table, '\nFOR EACH ROW\nBEGIN\n',
.\tools\schema\snapshots\routines.sql:327:'  INSERT INTO system_event_log\n',
.\tools\schema\snapshots\routines.sql:340:'    INSERT INTO system_event_log (user_id, event_type, table_name, related_module, record_id, field_name, old_value, new_value, description, source_ip, device_info, session_id, severity)\n',
.\tools\schema\snapshots\routines.sql:345:'    INSERT INTO system_event_log (user_id, event_type, table_name, related_module, record_id, field_name, old_value, new_value, description, source_ip, device_info, session_id, severity)\n',
.\tools\schema\snapshots\routines.sql:352:'  INSERT INTO system_event_log\n',
.\tools\schema\snapshots\routines.sql:382:  FROM INFORMATION_SCHEMA.TRIGGERS
.\tools\schema\snapshots\routines.sql:406:  FROM INFORMATION_SCHEMA.TRIGGERS
.\tools\schema\snapshots\routines.sql:423:    INSERT INTO calibration_export_log (
.\Services\DatabaseService.IncidentReports.Extensions.cs:20:            var dt = await db.ExecuteSelectAsync("SELECT * FROM incidents ORDER BY reported_at DESC, id DESC", null, token).ConfigureAwait(false);
.\Services\DatabaseService.IncidentReports.Extensions.cs:29:            const string sql = @"INSERT INTO incidents (title, type, status, description, detected_at, reported_at, reported_by_id, assigned_to_id, machine_id, component_id, root_cause, digital_signature, last_modified, last_modified_by_id, source_ip)
.\Services\DatabaseService.IncidentReports.Extensions.cs:53:            try { await db.ExecuteNonQueryAsync("UPDATE incidents SET assigned_to_id=@u WHERE id=@id", new[] { new MySqlParameter("@u", userId), new MySqlParameter("@id", incidentId) }, token).ConfigureAwait(false); } catch { }
.\Services\DatabaseService.IncidentReports.Extensions.cs:63:            try { await db.ExecuteNonQueryAsync("UPDATE incidents SET status='investigated' WHERE id=@id", new[] { new MySqlParameter("@id", report.Id) }, token).ConfigureAwait(false); } catch { }
.\Services\DatabaseService.IncidentReports.Extensions.cs:69:            try { await db.ExecuteNonQueryAsync("UPDATE incidents SET status='approved' WHERE id=@id", new[] { new MySqlParameter("@id", incidentId) }, token).ConfigureAwait(false); } catch { }
.\Services\DatabaseService.IncidentReports.Extensions.cs:78:            try { await db.ExecuteNonQueryAsync("UPDATE incidents SET status='closed', closed_at=NOW(), closed_by_id=@u WHERE id=@id", new[] { new MySqlParameter("@id", incidentId), new MySqlParameter("@u", actorUserId) }, token).ConfigureAwait(false); } catch { }
.\Services\DatabaseService.Capa.Cases.Extensions.cs:20:            const string sql = @"SELECT * FROM capa_cases ORDER BY id DESC";
.\Services\DatabaseService.Capa.Cases.Extensions.cs:29:            const string sql = @"SELECT * FROM capa_cases WHERE id=@id LIMIT 1";
.\Services\DatabaseService.Capa.Cases.Extensions.cs:37:            const string sql = @"INSERT INTO capa_cases (title, description, component_id, date_open, date_close, assigned_to_id, priority, status, root_cause, corrective_action, preventive_action, reason, actions, doc_file, digital_signature)
.\Services\DatabaseService.Capa.Cases.Extensions.cs:72:            const string sql = @"UPDATE capa_cases SET title=@t, description=@d, component_id=@cid, date_open=@open, date_close=@close, assigned_to_id=@assn, priority=@prio, status=@status, root_cause=@rc, corrective_action=@corr, preventive_action=@prev, reason=@reason, actions=@acts, doc_file=@doc, digital_signature=@sig WHERE id=@id";
.\Services\DatabaseService.Capa.Cases.Extensions.cs:189:            await db.ExecuteNonQueryAsync("DELETE FROM capa_cases WHERE id=@id", new[] { new MySqlParameter("@id", id) }, token).ConfigureAwait(false);
.\Services\DatabaseService.Rbac.CoreExtensions.cs:62:FROM user_permissions up
.\Services\DatabaseService.Rbac.CoreExtensions.cs:63:JOIN permissions p ON p.id = up.permission_id
.\Services\DatabaseService.Rbac.CoreExtensions.cs:88:FROM user_roles
.\Services\DatabaseService.Rbac.CoreExtensions.cs:110:FROM role_permissions rp
.\Services\DatabaseService.Rbac.CoreExtensions.cs:111:JOIN permissions p ON p.id = rp.permission_id
.\Services\DatabaseService.Rbac.CoreExtensions.cs:136:FROM delegated_permissions d
.\Services\DatabaseService.Rbac.CoreExtensions.cs:137:JOIN permissions p ON p.id = d.permission_id
.\Services\DatabaseService.Rbac.CoreExtensions.cs:160:FROM user_permissions up
.\Services\DatabaseService.Rbac.CoreExtensions.cs:161:JOIN permissions p ON p.id = up.permission_id
.\Services\DatabaseService.Rbac.CoreExtensions.cs:185:FROM role_permissions rp
.\Services\DatabaseService.Rbac.CoreExtensions.cs:186:JOIN permissions p ON p.id=rp.permission_id
.\Services\DatabaseService.Rbac.CoreExtensions.cs:209:FROM delegated_permissions d
.\Services\DatabaseService.Rbac.CoreExtensions.cs:210:JOIN permissions p ON p.id = d.permission_id
.\Services\DatabaseService.Rbac.CoreExtensions.cs:244:INSERT INTO user_roles (user_id, role_id, granted_by, granted_at, expires_at)
.\Services\DatabaseService.Rbac.CoreExtensions.cs:288:                "DELETE FROM user_roles WHERE user_id=@uid AND role_id=@rid",
.\Services\DatabaseService.Rbac.CoreExtensions.cs:319:            var dt = await db.ExecuteSelectAsync("SELECT id FROM permissions WHERE code=@code LIMIT 1",
.\Services\DatabaseService.Rbac.CoreExtensions.cs:328:                "INSERT INTO permissions (code, name) VALUES (@code,@name)",
.\Services\DatabaseService.Rbac.CoreExtensions.cs:354:INSERT INTO user_permissions (user_id, permission_id, allowed, reason, granted_by, granted_at, expires_at)
.\Services\DatabaseService.Rbac.CoreExtensions.cs:401:                "DELETE FROM user_permissions WHERE user_id=@uid AND permission_id=@pid",
.\Services\DatabaseService.Rbac.CoreExtensions.cs:440:INSERT INTO delegated_permissions (from_user_id, to_user_id, permission_id, expires_at, reason, granted_by)
.\Services\DatabaseService.Rbac.CoreExtensions.cs:477:UPDATE delegated_permissions
.\Services\DatabaseService.Rbac.CoreExtensions.cs:486:                    "SELECT to_user_id, permission_id FROM delegated_permissions WHERE id=@id",
.\Services\DatabaseService.Rbac.CoreExtensions.cs:511:INSERT INTO permission_change_log (user_id, changed_by, change_type, role_id, permission_id, action)
.\Services\DatabaseService.Rbac.CoreExtensions.cs:513:FROM delegated_permissions WHERE id=@id;",
.\Services\DatabaseService.Rbac.CoreExtensions.cs:543:INSERT INTO permission_requests (user_id, permission_id, reason, status, requested_at)
.\Services\DatabaseService.Rbac.CoreExtensions.cs:564:            var dt = await db.ExecuteSelectAsync("SELECT * FROM permission_requests WHERE id=@id",
.\Services\DatabaseService.Rbac.CoreExtensions.cs:572:UPDATE permission_requests
.\Services\DatabaseService.Rbac.CoreExtensions.cs:594:            var dt = await db.ExecuteSelectAsync("SELECT * FROM permission_requests WHERE id=@id",
.\Services\DatabaseService.Rbac.CoreExtensions.cs:602:UPDATE permission_requests
.\Services\DatabaseService.Rbac.CoreExtensions.cs:633:            var dt = await db.ExecuteSelectAsync("SELECT * FROM roles ORDER BY name, id", null, token).ConfigureAwait(false);
.\Services\DatabaseService.Rbac.CoreExtensions.cs:650:            var dt = await db.ExecuteSelectAsync("SELECT * FROM permissions ORDER BY code, id", null, token).ConfigureAwait(false);
.\Services\DatabaseService.Rbac.CoreExtensions.cs:710:INSERT INTO permission_change_log (user_id, changed_by, change_type, role_id, permission_id, action)
.\Services\DatabaseService.cs:195:INSERT INTO system_event_log
.\Services\DatabaseService.cs:237:INSERT INTO system_event_log (user_id, event_type, table_name, related_module, record_id, description, source_ip, severity)
.\Services\DatabaseService.DigitalSignatures.Extensions.cs:20:            var dt = await db.ExecuteSelectAsync("SELECT * FROM digital_signatures ORDER BY signed_at DESC, id DESC", null, token).ConfigureAwait(false);
.\Services\DatabaseService.DigitalSignatures.Extensions.cs:29:            const string sql = @"INSERT INTO digital_signatures (table_name, record_id, user_id, signature_hash, method, status, signed_at, device_info, ip_address, note, public_key)
.\Services\DatabaseService.DigitalSignatures.Extensions.cs:56:                await db.ExecuteNonQueryAsync("UPDATE digital_signatures SET status='revoked', note=@note WHERE id=@id", new[]
.\Services\ValidationAuditService.cs:34:            const string sql = @"INSERT INTO validation_audit 
.\Services\ValidationAuditService.cs:79:                "SELECT * FROM validation_audit WHERE validation_id=@vid ORDER BY changed_at DESC",
.\Services\ValidationAuditService.cs:91:                "SELECT * FROM validation_audit WHERE id=@id",
.\Services\ValidationAuditService.cs:101:                "DELETE FROM validation_audit WHERE id=@id",
.\Views\CalibrationsPage.xaml.cs:81:                    .ExecuteSelectAsync("SELECT * FROM calibrations ORDER BY calibration_date DESC")
.\Views\CalibrationsPage.xaml.cs:214:                const string sql = @"INSERT INTO calibrations
.\Views\CalibrationsPage.xaml.cs:265:                const string sql = @"UPDATE calibrations SET
.\Views\CalibrationsPage.xaml.cs:330:            const string sql = @"INSERT INTO audit_log (entity, entity_id, action, user_name, timestamp) 
.\Views\PartsPage.xaml.cs:86:                const string sql = @"SELECT id, code, name, supplier, price, stock, location, image FROM parts";
.\Views\PartsPage.xaml.cs:131:                const string sql = @"INSERT INTO parts (code, name, supplier, price, stock, location, image)
.\Views\PartsPage.xaml.cs:181:                const string sql = @"UPDATE parts SET 
.\Views\PartsPage.xaml.cs:222:                const string sql = "DELETE FROM parts WHERE id=@id";
.\Services\DatabaseService.IncidentAudits.Extensions.cs:20:            const string sql = @"INSERT INTO incident_audit (incident_id, user_id, action, old_value, new_value, action_at, note, source_ip, digital_signature, capa_id, work_order_id, device_info, integrity_hash, inspector_note)
.\Services\DatabaseService.IncidentAudits.Extensions.cs:48:            var dt = await db.ExecuteSelectAsync("SELECT * FROM incident_audit WHERE id=@id LIMIT 1", new[] { new MySqlParameter("@id", id) }, token).ConfigureAwait(false);
.\Services\DatabaseService.IncidentAudits.Extensions.cs:54:            var dt = await db.ExecuteSelectAsync("SELECT * FROM incident_audit WHERE incident_id=@id ORDER BY action_at DESC, id DESC", new[] { new MySqlParameter("@id", incidentId) }, token).ConfigureAwait(false);
.\Services\DatabaseService.IncidentAudits.Extensions.cs:60:            var dt = await db.ExecuteSelectAsync("SELECT * FROM incident_audit WHERE user_id=@id ORDER BY action_at DESC, id DESC", new[] { new MySqlParameter("@id", userId) }, token).ConfigureAwait(false);
.\Services\DatabaseService.Attachments.Extensions.cs:20:            string sql = "SELECT * FROM attachments WHERE 1=1";
.\Services\DatabaseService.Attachments.Extensions.cs:35:            const string sql = @"INSERT INTO attachments (file_name, file_path, entity_type, entity_id, uploaded_by, created_at)
.\Services\DatabaseService.Attachments.Extensions.cs:54:            await db.ExecuteNonQueryAsync("DELETE FROM attachments WHERE id=@id", new[] { new MySqlParameter("@id", id) }, token).ConfigureAwait(false);
.\Services\DatabaseService.Calibrations.Extensions.cs:20:            const string sql = @"SELECT * FROM calibrations ORDER BY calibration_date DESC, id DESC";
.\Services\DatabaseService.Calibrations.Extensions.cs:29:            const string sql = @"SELECT * FROM calibrations WHERE id=@id LIMIT 1";
.\Services\DatabaseService.Calibrations.Extensions.cs:36:            const string sql = @"SELECT * FROM calibrations WHERE component_id=@cid ORDER BY calibration_date DESC, id DESC";
.\Services\DatabaseService.Calibrations.Extensions.cs:45:            const string sql = @"SELECT * FROM calibrations WHERE supplier_id=@sid ORDER BY calibration_date DESC, id DESC";
.\Services\DatabaseService.Calibrations.Extensions.cs:54:            const string sql = @"SELECT * FROM calibrations WHERE calibration_date BETWEEN @f AND @t ORDER BY calibration_date DESC, id DESC";
.\Services\DatabaseService.Calibrations.Extensions.cs:66:            string insert = @"INSERT INTO calibrations (component_id, supplier_id, calibration_date, next_due, cert_doc, result, comment, digital_signature)
.\Services\DatabaseService.Calibrations.Extensions.cs:68:            string updateSql = @"UPDATE calibrations SET component_id=@cid, supplier_id=@sid, calibration_date=@cd, next_due=@due, cert_doc=@doc, result=@res, comment=@comm, digital_signature=@sig WHERE id=@id";
.\Services\DatabaseService.Calibrations.Extensions.cs:104:            await db.ExecuteNonQueryAsync("DELETE FROM calibrations WHERE id=@id", new[] { new MySqlParameter("@id", id) }, token).ConfigureAwait(false);
.\Services\DatabaseService.Qualifications.Extensions.cs:21:            var dt = await db.ExecuteSelectAsync("SELECT * FROM component_qualifications ORDER BY qualification_date DESC, id DESC", null, token).ConfigureAwait(false);
.\Services\DatabaseService.Qualifications.Extensions.cs:32:                await db.ExecuteNonQueryAsync(@"INSERT INTO component_qualifications (component_id, supplier_id, qualification_date, status, certificate_number)
.\Services\DatabaseService.Qualifications.Extensions.cs:51:                await db.ExecuteNonQueryAsync(@"UPDATE component_qualifications SET component_id=@comp, supplier_id=@supp, qualification_date=@date, status=@status, certificate_number=@cert WHERE id=@id", new[]
.\Services\DatabaseService.Qualifications.Extensions.cs:67:            try { await db.ExecuteNonQueryAsync("DELETE FROM component_qualifications WHERE id=@id", new[] { new MySqlParameter("@id", id) }, token).ConfigureAwait(false); } catch { }
.\Services\DatabaseService.ContractorInterventions.Extensions.cs:40:FROM contractor_interventions
.\Services\DatabaseService.ContractorInterventions.Extensions.cs:62:FROM contractor_intervention_audit
.\Services\DatabaseService.ContractorInterventions.Extensions.cs:120:            string insert = @"INSERT INTO contractor_interventions (contractor_id, component_id, intervention_date, reason, result, gmp_compliance, doc_file)
.\Services\DatabaseService.ContractorInterventions.Extensions.cs:122:            string updateSql = @"UPDATE contractor_interventions SET contractor_id=@cid, component_id=@comp, intervention_date=@date, reason=@reason, result=@result, gmp_compliance=@gmp, doc_file=@doc WHERE id=@id";
.\Services\DatabaseService.ContractorInterventions.Extensions.cs:224:            const string sql = "DELETE FROM contractor_interventions WHERE id=@id;";
.\Services\DatabaseService.ContractorInterventions.Extensions.cs:337:INSERT INTO contractor_intervention_audit
.\Services\DatabaseService.Deviations.Extensions.cs:20:            var dt = await db.ExecuteSelectAsync("SELECT * FROM deviations ORDER BY id DESC", null, token).ConfigureAwait(false);
.\Services\DatabaseService.Deviations.Extensions.cs:28:            var dt = await db.ExecuteSelectAsync("SELECT * FROM deviations WHERE id=@id LIMIT 1", new[] { new MySqlParameter("@id", id) }, token).ConfigureAwait(false);
.\Services\DatabaseService.Deviations.Extensions.cs:35:            string insert = @"INSERT INTO deviations (code, title, description, reported_at, reported_by_id, severity, is_critical, status, assigned_investigator_id, assigned_investigator_name, investigation_started_at, root_cause, linked_capa_id, closure_comment, closed_at, digital_signature, risk_score, anomaly_score, last_modified, last_modified_by_id, source_ip, audit_note)
.\Services\DatabaseService.Deviations.Extensions.cs:37:            string updateSql = @"UPDATE deviations SET code=@code, title=@title, description=@desc, reported_at=@rep, reported_by_id=@rby, severity=@sev, is_critical=@crit, status=@status, assigned_investigator_id=@assid, assigned_investigator_name=@assname, investigation_started_at=@invstart, root_cause=@rc, linked_capa_id=@lcapa, closure_comment=@clos, closed_at=@closed, digital_signature=@sig, risk_score=@risk, anomaly_score=@anom, last_modified=NOW(), last_modified_by_id=@lmb, source_ip=@ip, audit_note=@audit WHERE id=@id";
.\Services\DatabaseService.Deviations.Extensions.cs:82:            await db.ExecuteNonQueryAsync("DELETE FROM deviations WHERE id=@id", new[] { new MySqlParameter("@id", id) }, token).ConfigureAwait(false);
.\Services\DatabaseService.ExternalServicers.Extensions.cs:21:            var dt = await db.ExecuteSelectAsync("SELECT * FROM external_contractors ORDER BY name, id", null, token).ConfigureAwait(false);
.\Services\DatabaseService.ExternalServicers.Extensions.cs:30:            string insert = @"INSERT INTO external_contractors (name, code, registration_number, contact_person, email, phone, address, type, status, cooperation_start, cooperation_end, comment, digital_signature)
.\Services\DatabaseService.ExternalServicers.Extensions.cs:32:            string updateSql = @"UPDATE external_contractors SET name=@name, code=@code, registration_number=@reg, contact_person=@contact, email=@em, phone=@ph, address=@addr, type=@type, status=@status, cooperation_start=@start, cooperation_end=@end, comment=@comm, digital_signature=@sig WHERE id=@id";
.\Services\DatabaseService.ExternalServicers.Extensions.cs:84:            => db.ExecuteNonQueryAsync("DELETE FROM external_contractors WHERE id=@id", new[] { new MySqlParameter("@id", id) }, token);
.\Services\DatabaseService.Assets.Extensions.cs:20:            var dt = await db.ExecuteSelectAsync("SELECT * FROM machines ORDER BY name, id", null, token).ConfigureAwait(false);
.\Services\DatabaseService.Assets.Extensions.cs:31:                const string sql = @"INSERT INTO machines (code, name, description, model, manufacturer, location, install_date, procurement_date, purchase_date, status, urs_doc, digital_signature)
.\Services\DatabaseService.Assets.Extensions.cs:58:                const string sql = @"UPDATE machines SET code=@code, name=@name, description=@desc, model=@model, manufacturer=@mf, location=@loc, status=@status, urs_doc=@urs, digital_signature=@sig WHERE id=@id";
.\Services\DatabaseService.Assets.Extensions.cs:80:            try { await db.ExecuteNonQueryAsync("DELETE FROM machines WHERE id=@id", new[] { new MySqlParameter("@id", id) }, token).ConfigureAwait(false); } catch { }
.\tools\schema\snapshots\schema.json:255:      "CreateSql": "CREATE TABLE \u0060admin_activity_log\u0060 (\n  \u0060id\u0060 int NOT NULL AUTO_INCREMENT,\n  \u0060admin_id\u0060 int DEFAULT NULL,\n  \u0060activity_time\u0060 datetime DEFAULT CURRENT_TIMESTAMP,\n  \u0060activity\u0060 varchar(255) DEFAULT NULL,\n  \u0060affected_table\u0060 varchar(100) DEFAULT NULL,\n  \u0060affected_record_id\u0060 int DEFAULT NULL,\n  \u0060details\u0060 text,\n  \u0060source_ip\u0060 varchar(45) DEFAULT NULL,\n  \u0060note\u0060 text,\n  \u0060created_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP,\n  \u0060updated_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n  \u0060timestamp\u0060 datetime GENERATED ALWAYS AS (\u0060activity_time\u0060) VIRTUAL,\n  \u0060action\u0060 varchar(255) GENERATED ALWAYS AS (\u0060activity\u0060) VIRTUAL,\n  \u0060user?\u0060 varchar(255) DEFAULT NULL,\n  \u0060device_name\u0060 varchar(128) DEFAULT NULL,\n  \u0060session_id\u0060 varchar(64) DEFAULT NULL,\n  \u0060digital_signature\u0060 varchar(256) DEFAULT NULL,\n  \u0060change_version\u0060 int DEFAULT NULL,\n  \u0060is_deleted\u0060 tinyint(1) DEFAULT NULL,\n  PRIMARY KEY (\u0060id\u0060),\n  KEY \u0060fk_adminact_user\u0060 (\u0060admin_id\u0060),\n  CONSTRAINT \u0060fk_adminact_user\u0060 FOREIGN KEY (\u0060admin_id\u0060) REFERENCES \u0060users\u0060 (\u0060id\u0060) ON DELETE SET NULL\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci"
.\tools\schema\snapshots\schema.json:426:      "CreateSql": "CREATE TABLE \u0060api_audit_log\u0060 (\n  \u0060id\u0060 int NOT NULL AUTO_INCREMENT,\n  \u0060api_key_id\u0060 int DEFAULT NULL,\n  \u0060user_id\u0060 int DEFAULT NULL,\n  \u0060action\u0060 varchar(255) DEFAULT NULL,\n  \u0060timestamp\u0060 datetime DEFAULT CURRENT_TIMESTAMP,\n  \u0060ip_address\u0060 varchar(45) DEFAULT NULL,\n  \u0060request_details\u0060 text,\n  \u0060created_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP,\n  \u0060updated_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n  \u0060details\u0060 text GENERATED ALWAYS AS (\u0060request_details\u0060) VIRTUAL,\n  PRIMARY KEY (\u0060id\u0060),\n  KEY \u0060fk_api_audit_key\u0060 (\u0060api_key_id\u0060),\n  KEY \u0060fk_api_audit_user\u0060 (\u0060user_id\u0060),\n  CONSTRAINT \u0060fk_api_audit_key\u0060 FOREIGN KEY (\u0060api_key_id\u0060) REFERENCES \u0060api_keys\u0060 (\u0060id\u0060) ON DELETE SET NULL,\n  CONSTRAINT \u0060fk_api_audit_user\u0060 FOREIGN KEY (\u0060user_id\u0060) REFERENCES \u0060users\u0060 (\u0060id\u0060) ON DELETE SET NULL\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci"
.\tools\schema\snapshots\schema.json:574:      "CreateSql": "CREATE TABLE \u0060api_keys\u0060 (\n  \u0060id\u0060 int NOT NULL AUTO_INCREMENT,\n  \u0060key_value\u0060 varchar(255) NOT NULL,\n  \u0060description\u0060 varchar(255) DEFAULT NULL,\n  \u0060owner_id\u0060 int DEFAULT NULL,\n  \u0060created_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP,\n  \u0060is_active\u0060 tinyint(1) DEFAULT \u00271\u0027,\n  \u0060last_used_at\u0060 datetime DEFAULT NULL,\n  \u0060updated_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n  \u0060usage_logs\u0060 varchar(255) DEFAULT NULL,\n  PRIMARY KEY (\u0060id\u0060),\n  UNIQUE KEY \u0060key_value\u0060 (\u0060key_value\u0060),\n  KEY \u0060fk_apikey_owner\u0060 (\u0060owner_id\u0060),\n  CONSTRAINT \u0060fk_apikey_owner\u0060 FOREIGN KEY (\u0060owner_id\u0060) REFERENCES \u0060users\u0060 (\u0060id\u0060) ON DELETE SET NULL\n) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci"
.\tools\schema\snapshots\schema.json:845:      "CreateSql": "CREATE TABLE \u0060api_usage_log\u0060 (\n  \u0060id\u0060 int NOT NULL AUTO_INCREMENT,\n  \u0060api_key_id\u0060 int DEFAULT NULL,\n  \u0060user_id\u0060 int DEFAULT NULL,\n  \u0060call_time\u0060 datetime DEFAULT CURRENT_TIMESTAMP,\n  \u0060endpoint\u0060 varchar(255) DEFAULT NULL,\n  \u0060method\u0060 varchar(20) DEFAULT NULL,\n  \u0060params\u0060 text,\n  \u0060response_code\u0060 int DEFAULT NULL,\n  \u0060duration_ms\u0060 int DEFAULT NULL,\n  \u0060success\u0060 tinyint(1) DEFAULT \u00271\u0027,\n  \u0060error_message\u0060 text,\n  \u0060source_ip\u0060 varchar(45) DEFAULT NULL,\n  \u0060created_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP,\n  \u0060updated_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n  \u0060timestamp\u0060 datetime GENERATED ALWAYS AS (\u0060call_time\u0060) VIRTUAL,\n  \u0060action\u0060 varchar(20) GENERATED ALWAYS AS (\u0060method\u0060) VIRTUAL,\n  \u0060details\u0060 text GENERATED ALWAYS AS (coalesce(\u0060error_message\u0060,\u0060params\u0060)) VIRTUAL,\n  \u0060api_key\u0060 varchar(255) DEFAULT NULL,\n  \u0060user\u0060 varchar(255) DEFAULT NULL,\n  PRIMARY KEY (\u0060id\u0060),\n  KEY \u0060fk_api_usage_key\u0060 (\u0060api_key_id\u0060),\n  KEY \u0060fk_api_usage_user\u0060 (\u0060user_id\u0060),\n  CONSTRAINT \u0060fk_api_usage_key\u0060 FOREIGN KEY (\u0060api_key_id\u0060) REFERENCES \u0060api_keys\u0060 (\u0060id\u0060) ON DELETE SET NULL,\n  CONSTRAINT \u0060fk_api_usage_user\u0060 FOREIGN KEY (\u0060user_id\u0060) REFERENCES \u0060users\u0060 (\u0060id\u0060) ON DELETE SET NULL\n) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci"
.\tools\schema\snapshots\schema.json:1272:      "CreateSql": "CREATE TABLE \u0060attachments\u0060 (\n  \u0060id\u0060 int NOT NULL AUTO_INCREMENT,\n  \u0060related_table\u0060 varchar(50) DEFAULT NULL,\n  \u0060related_id\u0060 int DEFAULT NULL,\n  \u0060file_name\u0060 varchar(255) DEFAULT NULL,\n  \u0060file_path\u0060 varchar(255) DEFAULT NULL,\n  \u0060file_type\u0060 varchar(40) DEFAULT NULL,\n  \u0060uploaded_by\u0060 int DEFAULT NULL,\n  \u0060uploaded_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP,\n  \u0060note\u0060 text,\n  \u0060created_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP,\n  \u0060updated_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n  \u0060name\u0060 varchar(255) DEFAULT NULL,\n  \u0060file_size\u0060 bigint DEFAULT NULL,\n  \u0060entity_type\u0060 varchar(255) DEFAULT NULL,\n  \u0060entity_id\u0060 int DEFAULT NULL,\n  \u0060file_content\u0060 longblob,\n  \u0060ocr_text\u0060 varchar(255) DEFAULT NULL,\n  \u0060file_hash\u0060 varchar(255) DEFAULT NULL,\n  \u0060uploaded_by_id\u0060 int DEFAULT NULL,\n  \u0060user?\u0060 varchar(255) DEFAULT NULL,\n  \u0060is_approved\u0060 tinyint(1) DEFAULT NULL,\n  \u0060approved_by_id\u0060 int DEFAULT NULL,\n  \u0060approved_at\u0060 datetime DEFAULT NULL,\n  \u0060expiry_date\u0060 datetime DEFAULT NULL,\n  \u0060digital_signature\u0060 varchar(255) DEFAULT NULL,\n  \u0060ip_address\u0060 varchar(255) DEFAULT NULL,\n  \u0060device_info\u0060 varchar(255) DEFAULT NULL,\n  \u0060session_id\u0060 varchar(255) DEFAULT NULL,\n  \u0060status\u0060 varchar(255) DEFAULT NULL,\n  \u0060notes\u0060 varchar(255) DEFAULT NULL,\n  \u0060change_version\u0060 int DEFAULT NULL,\n  \u0060is_deleted\u0060 tinyint(1) DEFAULT NULL,\n  \u0060ai_score\u0060 decimal(10,2) DEFAULT NULL,\n  \u0060chain_id\u0060 varchar(255) DEFAULT NULL,\n  \u0060version_uid\u0060 varchar(255) DEFAULT NULL,\n  PRIMARY KEY (\u0060id\u0060),\n  KEY \u0060fk_att_user\u0060 (\u0060uploaded_by\u0060),\n  CONSTRAINT \u0060fk_att_user\u0060 FOREIGN KEY (\u0060uploaded_by\u0060) REFERENCES \u0060users\u0060 (\u0060id\u0060) ON DELETE SET NULL\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci"
.\tools\schema\snapshots\schema.json:1379:      "CreateSql": "CREATE TABLE \u0060buildings\u0060 (\n  \u0060id\u0060 int NOT NULL AUTO_INCREMENT,\n  \u0060site_id\u0060 int NOT NULL,\n  \u0060code\u0060 varchar(20) DEFAULT NULL,\n  \u0060name\u0060 varchar(100) DEFAULT NULL,\n  \u0060created_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP,\n  \u0060updated_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n  PRIMARY KEY (\u0060id\u0060),\n  KEY \u0060fk_build_site\u0060 (\u0060site_id\u0060),\n  CONSTRAINT \u0060fk_build_site\u0060 FOREIGN KEY (\u0060site_id\u0060) REFERENCES \u0060sites\u0060 (\u0060id\u0060)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci"
.\tools\schema\snapshots\schema.json:1605:      "CreateSql": "CREATE TABLE \u0060calibration_audit_log\u0060 (\n  \u0060id\u0060 int NOT NULL AUTO_INCREMENT,\n  \u0060calibration_id\u0060 int DEFAULT NULL,\n  \u0060user_id\u0060 int DEFAULT NULL,\n  \u0060action\u0060 enum(\u0027CREATE\u0027,\u0027UPDATE\u0027,\u0027DELETE\u0027,\u0027EXPORT\u0027) NOT NULL,\n  \u0060old_value\u0060 text,\n  \u0060new_value\u0060 text,\n  \u0060changed_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP,\n  \u0060source_ip\u0060 varchar(45) DEFAULT NULL,\n  \u0060note\u0060 text,\n  \u0060created_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP,\n  \u0060updated_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n  \u0060timestamp\u0060 datetime GENERATED ALWAYS AS (\u0060changed_at\u0060) VIRTUAL,\n  \u0060details\u0060 text GENERATED ALWAYS AS (\u0060note\u0060) VIRTUAL,\n  \u0060calibration\u0060 varchar(255) DEFAULT NULL,\n  \u0060user?\u0060 varchar(255) DEFAULT NULL,\n  PRIMARY KEY (\u0060id\u0060),\n  KEY \u0060fk_cal_audit_cal\u0060 (\u0060calibration_id\u0060),\n  KEY \u0060fk_cal_audit_user\u0060 (\u0060user_id\u0060),\n  CONSTRAINT \u0060fk_cal_audit_cal\u0060 FOREIGN KEY (\u0060calibration_id\u0060) REFERENCES \u0060calibrations\u0060 (\u0060id\u0060) ON DELETE CASCADE,\n  CONSTRAINT \u0060fk_cal_audit_user\u0060 FOREIGN KEY (\u0060user_id\u0060) REFERENCES \u0060users\u0060 (\u0060id\u0060) ON DELETE SET NULL\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci"
.\tools\schema\snapshots\schema.json:1790:      "CreateSql": "CREATE TABLE \u0060calibration_export_log\u0060 (\n  \u0060id\u0060 int NOT NULL AUTO_INCREMENT,\n  \u0060user_id\u0060 int DEFAULT NULL,\n  \u0060export_time\u0060 datetime DEFAULT CURRENT_TIMESTAMP,\n  \u0060export_format\u0060 enum(\u0027excel\u0027,\u0027pdf\u0027) DEFAULT NULL,\n  \u0060filter_component_id\u0060 int DEFAULT NULL,\n  \u0060filter_date_from\u0060 date DEFAULT NULL,\n  \u0060filter_date_to\u0060 date DEFAULT NULL,\n  \u0060file_path\u0060 varchar(255) DEFAULT NULL,\n  \u0060created_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP,\n  \u0060updated_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n  \u0060timestamp\u0060 datetime GENERATED ALWAYS AS (\u0060export_time\u0060) VIRTUAL,\n  \u0060details\u0060 text GENERATED ALWAYS AS (\u0060file_path\u0060) VIRTUAL,\n  \u0060user?\u0060 varchar(255) DEFAULT NULL,\n  PRIMARY KEY (\u0060id\u0060),\n  KEY \u0060fk_cel_user\u0060 (\u0060user_id\u0060),\n  CONSTRAINT \u0060fk_cel_user\u0060 FOREIGN KEY (\u0060user_id\u0060) REFERENCES \u0060users\u0060 (\u0060id\u0060) ON DELETE SET NULL\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci"
.\tools\schema\snapshots\schema.json:1983:      "CreateSql": "CREATE TABLE \u0060calibration_sensors\u0060 (\n  \u0060id\u0060 int NOT NULL AUTO_INCREMENT,\n  \u0060component_id\u0060 int DEFAULT NULL,\n  \u0060sensor_type\u0060 enum(\u0027temperatura\u0027,\u0027tlak\u0027,\u0027vlaga\u0027,\u0027protok\u0027,\u0027drugo\u0027) DEFAULT NULL,\n  \u0060range_min\u0060 decimal(10,2) DEFAULT NULL,\n  \u0060range_max\u0060 decimal(10,2) DEFAULT NULL,\n  \u0060unit\u0060 varchar(20) DEFAULT NULL,\n  \u0060calibration_interval_days\u0060 int DEFAULT NULL,\n  \u0060iot_device_id\u0060 varchar(80) DEFAULT NULL,\n  \u0060created_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP,\n  \u0060updated_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n  \u0060sensor_type_id\u0060 int DEFAULT NULL,\n  PRIMARY KEY (\u0060id\u0060),\n  KEY \u0060fk_cs_component\u0060 (\u0060component_id\u0060),\n  KEY \u0060fk_cs_sensor_type\u0060 (\u0060sensor_type_id\u0060),\n  CONSTRAINT \u0060fk_cs_component\u0060 FOREIGN KEY (\u0060component_id\u0060) REFERENCES \u0060machine_components\u0060 (\u0060id\u0060),\n  CONSTRAINT \u0060fk_cs_sensor_type\u0060 FOREIGN KEY (\u0060sensor_type_id\u0060) REFERENCES \u0060sensor_types\u0060 (\u0060id\u0060),\n  CONSTRAINT \u0060fk_cs_sensortype\u0060 FOREIGN KEY (\u0060sensor_type_id\u0060) REFERENCES \u0060ref_value\u0060 (\u0060id\u0060) ON DELETE SET NULL\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci"
.\tools\schema\snapshots\schema.json:2369:      "CreateSql": "CREATE TABLE \u0060calibrations\u0060 (\n  \u0060id\u0060 int NOT NULL AUTO_INCREMENT,\n  \u0060component_id\u0060 int NOT NULL,\n  \u0060supplier_id\u0060 int DEFAULT NULL,\n  \u0060calibration_date\u0060 date DEFAULT NULL,\n  \u0060next_due\u0060 date DEFAULT NULL,\n  \u0060cert_doc\u0060 varchar(255) DEFAULT NULL,\n  \u0060result\u0060 enum(\u0027prolaz\u0027,\u0027pao\u0027,\u0027uvjetno\u0027,\u0027napomena\u0027) DEFAULT \u0027prolaz\u0027,\n  \u0060comment\u0060 varchar(255) DEFAULT NULL,\n  \u0060digital_signature\u0060 varchar(128) DEFAULT NULL,\n  \u0060last_modified\u0060 datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n  \u0060last_modified_by_id\u0060 int DEFAULT NULL,\n  \u0060source_ip\u0060 varchar(45) DEFAULT NULL,\n  \u0060created_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP,\n  \u0060updated_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n  \u0060result_id\u0060 int DEFAULT NULL,\n  \u0060machine_component\u0060 varchar(255) DEFAULT NULL,\n  \u0060supplier?\u0060 varchar(255) DEFAULT NULL,\n  \u0060user?\u0060 varchar(255) DEFAULT NULL,\n  \u0060approved\u0060 tinyint(1) DEFAULT NULL,\n  \u0060approved_at\u0060 datetime DEFAULT NULL,\n  \u0060approved_by_id\u0060 int DEFAULT NULL,\n  \u0060previous_calibration_id\u0060 int DEFAULT NULL,\n  \u0060calibration?\u0060 varchar(255) DEFAULT NULL,\n  \u0060next_calibration_id\u0060 int DEFAULT NULL,\n  \u0060change_version\u0060 int DEFAULT NULL,\n  \u0060is_deleted\u0060 tinyint(1) DEFAULT NULL,\n  PRIMARY KEY (\u0060id\u0060),\n  KEY \u0060fk_cal_component\u0060 (\u0060component_id\u0060),\n  KEY \u0060fk_cal_supplier\u0060 (\u0060supplier_id\u0060),\n  KEY \u0060fk_cal_modified\u0060 (\u0060last_modified_by_id\u0060),\n  KEY \u0060idx_cal_result_id\u0060 (\u0060result_id\u0060),\n  CONSTRAINT \u0060fk_cal_component\u0060 FOREIGN KEY (\u0060component_id\u0060) REFERENCES \u0060machine_components\u0060 (\u0060id\u0060),\n  CONSTRAINT \u0060fk_cal_modified\u0060 FOREIGN KEY (\u0060last_modified_by_id\u0060) REFERENCES \u0060users\u0060 (\u0060id\u0060),\n  CONSTRAINT \u0060fk_cal_result\u0060 FOREIGN KEY (\u0060result_id\u0060) REFERENCES \u0060ref_value\u0060 (\u0060id\u0060) ON DELETE SET NULL,\n  CONSTRAINT \u0060fk_cal_supplier\u0060 FOREIGN KEY (\u0060supplier_id\u0060) REFERENCES \u0060suppliers\u0060 (\u0060id\u0060),\n  CONSTRAINT \u0060chk_cal_dates\u0060 CHECK (((\u0060next_due\u0060 is null) or (\u0060next_due\u0060 \u003E \u0060calibration_date\u0060)))\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci"
.\tools\schema\snapshots\schema.json:2618:      "CreateSql": "CREATE TABLE \u0060capa_action_log\u0060 (\n  \u0060id\u0060 int NOT NULL AUTO_INCREMENT,\n  \u0060capa_case_id\u0060 int NOT NULL,\n  \u0060action_type\u0060 enum(\u0027korektivna\u0027,\u0027preventivna\u0027) DEFAULT NULL,\n  \u0060description\u0060 text,\n  \u0060performed_by\u0060 int DEFAULT NULL,\n  \u0060performed_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP,\n  \u0060status\u0060 enum(\u0027planirano\u0027,\u0027u_tijeku\u0027,\u0027zavrseno\u0027,\u0027otkazano\u0027) DEFAULT \u0027planirano\u0027,\n  \u0060note\u0060 text,\n  \u0060created_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP,\n  \u0060updated_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n  \u0060capa_case\u0060 varchar(255) DEFAULT NULL,\n  \u0060performed_by_id\u0060 int DEFAULT NULL,\n  \u0060user?\u0060 varchar(255) DEFAULT NULL,\n  \u0060digital_signature\u0060 varchar(128) DEFAULT NULL,\n  \u0060source_ip\u0060 varchar(45) DEFAULT NULL,\n  \u0060change_version\u0060 int DEFAULT NULL,\n  \u0060is_deleted\u0060 tinyint(1) DEFAULT NULL,\n  PRIMARY KEY (\u0060id\u0060),\n  KEY \u0060fk_cal_case\u0060 (\u0060capa_case_id\u0060),\n  KEY \u0060fk_cal_user\u0060 (\u0060performed_by\u0060),\n  CONSTRAINT \u0060fk_cal_case\u0060 FOREIGN KEY (\u0060capa_case_id\u0060) REFERENCES \u0060capa_cases\u0060 (\u0060id\u0060) ON DELETE CASCADE,\n  CONSTRAINT \u0060fk_cal_user\u0060 FOREIGN KEY (\u0060performed_by\u0060) REFERENCES \u0060users\u0060 (\u0060id\u0060) ON DELETE SET NULL\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci"
.\tools\schema\snapshots\schema.json:2747:      "CreateSql": "CREATE TABLE \u0060capa_actions\u0060 (\n  \u0060id\u0060 int NOT NULL AUTO_INCREMENT,\n  \u0060capa_id\u0060 int NOT NULL,\n  \u0060action_type\u0060 varchar(80) DEFAULT NULL,\n  \u0060description\u0060 text,\n  \u0060due_date\u0060 date DEFAULT NULL,\n  \u0060completed_at\u0060 datetime DEFAULT NULL,\n  \u0060created_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP,\n  \u0060updated_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n  PRIMARY KEY (\u0060id\u0060),\n  KEY \u0060fk_capa_action\u0060 (\u0060capa_id\u0060),\n  CONSTRAINT \u0060fk_capa_action\u0060 FOREIGN KEY (\u0060capa_id\u0060) REFERENCES \u0060capa_cases\u0060 (\u0060id\u0060) ON DELETE CASCADE\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci"
.\tools\schema\snapshots\schema.json:3159:      "CreateSql": "CREATE TABLE \u0060capa_cases\u0060 (\n  \u0060id\u0060 int NOT NULL AUTO_INCREMENT,\n  \u0060component_id\u0060 int DEFAULT NULL,\n  \u0060date_open\u0060 date DEFAULT NULL,\n  \u0060date_close\u0060 date DEFAULT NULL,\n  \u0060reason\u0060 text,\n  \u0060actions\u0060 text,\n  \u0060status\u0060 enum(\u0027otvoren\u0027,\u0027zatvoren\u0027,\u0027u_tijeku\u0027) DEFAULT NULL,\n  \u0060doc_file\u0060 varchar(255) DEFAULT NULL,\n  \u0060created_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP,\n  \u0060updated_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n  \u0060status_id\u0060 int DEFAULT NULL,\n  \u0060title\u0060 varchar(255) DEFAULT NULL,\n  \u0060description\u0060 varchar(255) DEFAULT NULL,\n  \u0060machine_component\u0060 varchar(255) DEFAULT NULL,\n  \u0060user\u0060 varchar(255) DEFAULT NULL,\n  \u0060priority\u0060 varchar(255) DEFAULT NULL,\n  \u0060root_cause\u0060 varchar(255) DEFAULT NULL,\n  \u0060corrective_action\u0060 varchar(255) DEFAULT NULL,\n  \u0060preventive_action\u0060 varchar(255) DEFAULT NULL,\n  \u0060digital_signature\u0060 varchar(255) DEFAULT NULL,\n  \u0060last_modified\u0060 datetime DEFAULT NULL,\n  \u0060last_modified_by_id\u0060 int DEFAULT NULL,\n  \u0060approved\u0060 tinyint(1) DEFAULT NULL,\n  \u0060approved_at\u0060 datetime DEFAULT NULL,\n  \u0060approved_by_id\u0060 int DEFAULT NULL,\n  \u0060source_ip\u0060 varchar(255) DEFAULT NULL,\n  \u0060root_cause_reference\u0060 varchar(255) DEFAULT NULL,\n  \u0060linked_findings\u0060 varchar(255) DEFAULT NULL,\n  \u0060notes\u0060 varchar(255) DEFAULT NULL,\n  \u0060comments\u0060 varchar(255) DEFAULT NULL,\n  \u0060change_version\u0060 int DEFAULT NULL,\n  \u0060is_deleted\u0060 tinyint(1) DEFAULT NULL,\n  PRIMARY KEY (\u0060id\u0060),\n  KEY \u0060fk_capa_component\u0060 (\u0060component_id\u0060),\n  KEY \u0060idx_capa_status_id\u0060 (\u0060status_id\u0060),\n  CONSTRAINT \u0060fk_capa_component\u0060 FOREIGN KEY (\u0060component_id\u0060) REFERENCES \u0060machine_components\u0060 (\u0060id\u0060),\n  CONSTRAINT \u0060fk_capa_status\u0060 FOREIGN KEY (\u0060status_id\u0060) REFERENCES \u0060ref_value\u0060 (\u0060id\u0060) ON DELETE SET NULL\n) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci"
.\tools\schema\snapshots\schema.json:3374:      "CreateSql": "CREATE TABLE \u0060capa_status_history\u0060 (\n  \u0060id\u0060 int NOT NULL AUTO_INCREMENT,\n  \u0060capa_case_id\u0060 int DEFAULT NULL,\n  \u0060old_status\u0060 enum(\u0027otvoren\u0027,\u0027zatvoren\u0027,\u0027planirano\u0027,\u0027u_tijeku\u0027) DEFAULT NULL,\n  \u0060new_status\u0060 enum(\u0027otvoren\u0027,\u0027zatvoren\u0027,\u0027planirano\u0027,\u0027u_tijeku\u0027) DEFAULT NULL,\n  \u0060changed_by\u0060 int DEFAULT NULL,\n  \u0060changed_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP,\n  \u0060note\u0060 text,\n  \u0060created_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP,\n  \u0060updated_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n  \u0060capa_case\u0060 varchar(255) DEFAULT NULL,\n  \u0060source_ip\u0060 varchar(45) DEFAULT NULL,\n  \u0060digital_signature\u0060 varchar(128) DEFAULT NULL,\n  \u0060change_version\u0060 int DEFAULT NULL,\n  \u0060is_deleted\u0060 tinyint(1) DEFAULT NULL,\n  PRIMARY KEY (\u0060id\u0060),\n  KEY \u0060fk_csh_case\u0060 (\u0060capa_case_id\u0060),\n  KEY \u0060fk_csh_user\u0060 (\u0060changed_by\u0060),\n  CONSTRAINT \u0060fk_csh_case\u0060 FOREIGN KEY (\u0060capa_case_id\u0060) REFERENCES \u0060capa_cases\u0060 (\u0060id\u0060) ON DELETE CASCADE,\n  CONSTRAINT \u0060fk_csh_user\u0060 FOREIGN KEY (\u0060changed_by\u0060) REFERENCES \u0060users\u0060 (\u0060id\u0060) ON DELETE SET NULL\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci"
.\tools\schema\snapshots\schema.json:3505:      "CreateSql": "CREATE TABLE \u0060checklist_items\u0060 (\n  \u0060id\u0060 int NOT NULL AUTO_INCREMENT,\n  \u0060template_id\u0060 int NOT NULL,\n  \u0060item_order\u0060 int DEFAULT \u002710\u0027,\n  \u0060label\u0060 varchar(255) NOT NULL,\n  \u0060expected\u0060 varchar(255) DEFAULT NULL,\n  \u0060required\u0060 tinyint(1) DEFAULT \u00271\u0027,\n  \u0060created_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP,\n  \u0060updated_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n  PRIMARY KEY (\u0060id\u0060),\n  KEY \u0060fk_ci_tpl\u0060 (\u0060template_id\u0060),\n  CONSTRAINT \u0060fk_ci_tpl\u0060 FOREIGN KEY (\u0060template_id\u0060) REFERENCES \u0060checklist_templates\u0060 (\u0060id\u0060) ON DELETE CASCADE\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci"
.\tools\schema\snapshots\schema.json:3630:      "CreateSql": "CREATE TABLE \u0060checklist_templates\u0060 (\n  \u0060id\u0060 int NOT NULL AUTO_INCREMENT,\n  \u0060code\u0060 varchar(60) DEFAULT NULL,\n  \u0060name\u0060 varchar(150) NOT NULL,\n  \u0060description\u0060 text,\n  \u0060created_by\u0060 int DEFAULT NULL,\n  \u0060created_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP,\n  \u0060updated_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n  PRIMARY KEY (\u0060id\u0060),\n  UNIQUE KEY \u0060code\u0060 (\u0060code\u0060),\n  KEY \u0060fk_ct_user\u0060 (\u0060created_by\u0060),\n  CONSTRAINT \u0060fk_ct_user\u0060 FOREIGN KEY (\u0060created_by\u0060) REFERENCES \u0060users\u0060 (\u0060id\u0060) ON DELETE SET NULL\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci"
.\tools\schema\snapshots\schema.json:3748:      "CreateSql": "CREATE TABLE \u0060comments\u0060 (\n  \u0060id\u0060 int NOT NULL AUTO_INCREMENT,\n  \u0060entity\u0060 varchar(60) NOT NULL,\n  \u0060entity_id\u0060 int NOT NULL,\n  \u0060user_id\u0060 int DEFAULT NULL,\n  \u0060comment\u0060 text,\n  \u0060created_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP,\n  \u0060updated_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n  PRIMARY KEY (\u0060id\u0060),\n  KEY \u0060fk_comm_user\u0060 (\u0060user_id\u0060),\n  CONSTRAINT \u0060fk_comm_user\u0060 FOREIGN KEY (\u0060user_id\u0060) REFERENCES \u0060users\u0060 (\u0060id\u0060) ON DELETE SET NULL\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci"
.\tools\schema\snapshots\schema.json:3918:      "CreateSql": "CREATE TABLE \u0060component_devices\u0060 (\n  \u0060id\u0060 int NOT NULL AUTO_INCREMENT,\n  \u0060component_id\u0060 int NOT NULL,\n  \u0060device_id\u0060 int NOT NULL,\n  \u0060sensor_model_id\u0060 int DEFAULT NULL,\n  \u0060started_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP,\n  \u0060ended_at\u0060 datetime DEFAULT NULL,\n  \u0060created_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP,\n  \u0060updated_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n  PRIMARY KEY (\u0060id\u0060),\n  UNIQUE KEY \u0060ux_comp_device\u0060 (\u0060component_id\u0060,\u0060device_id\u0060,\u0060started_at\u0060),\n  KEY \u0060fk_cd_dev\u0060 (\u0060device_id\u0060),\n  KEY \u0060fk_cd_smodel\u0060 (\u0060sensor_model_id\u0060),\n  CONSTRAINT \u0060fk_cd_comp\u0060 FOREIGN KEY (\u0060component_id\u0060) REFERENCES \u0060machine_components\u0060 (\u0060id\u0060) ON DELETE CASCADE,\n  CONSTRAINT \u0060fk_cd_dev\u0060 FOREIGN KEY (\u0060device_id\u0060) REFERENCES \u0060iot_devices\u0060 (\u0060id\u0060) ON DELETE CASCADE,\n  CONSTRAINT \u0060fk_cd_smodel\u0060 FOREIGN KEY (\u0060sensor_model_id\u0060) REFERENCES \u0060sensor_models\u0060 (\u0060id\u0060) ON DELETE SET NULL\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci"
.\tools\schema\snapshots\schema.json:4026:      "CreateSql": "CREATE TABLE \u0060component_models\u0060 (\n  \u0060id\u0060 int NOT NULL AUTO_INCREMENT,\n  \u0060component_type_id\u0060 int DEFAULT NULL,\n  \u0060model_code\u0060 varchar(100) DEFAULT NULL,\n  \u0060model_name\u0060 varchar(150) DEFAULT NULL,\n  \u0060created_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP,\n  \u0060updated_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n  PRIMARY KEY (\u0060id\u0060),\n  UNIQUE KEY \u0060ux_comp_model\u0060 (\u0060component_type_id\u0060,\u0060model_code\u0060),\n  CONSTRAINT \u0060fk_cmodel_type\u0060 FOREIGN KEY (\u0060component_type_id\u0060) REFERENCES \u0060component_types\u0060 (\u0060id\u0060) ON DELETE SET NULL\n) ENGINE=InnoDB AUTO_INCREMENT=8 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci"
.\tools\schema\snapshots\schema.json:4154:      "CreateSql": "CREATE TABLE \u0060component_parts\u0060 (\n  \u0060id\u0060 int NOT NULL AUTO_INCREMENT,\n  \u0060component_id\u0060 int NOT NULL,\n  \u0060part_id\u0060 int NOT NULL,\n  \u0060nominal_qty\u0060 decimal(10,3) NOT NULL DEFAULT \u00271.000\u0027,\n  \u0060created_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP,\n  \u0060updated_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n  PRIMARY KEY (\u0060id\u0060),\n  UNIQUE KEY \u0060ux_comp_part\u0060 (\u0060component_id\u0060,\u0060part_id\u0060),\n  KEY \u0060fk_cparts_part\u0060 (\u0060part_id\u0060),\n  CONSTRAINT \u0060fk_cparts_comp\u0060 FOREIGN KEY (\u0060component_id\u0060) REFERENCES \u0060machine_components\u0060 (\u0060id\u0060) ON DELETE CASCADE,\n  CONSTRAINT \u0060fk_cparts_part\u0060 FOREIGN KEY (\u0060part_id\u0060) REFERENCES \u0060parts\u0060 (\u0060id\u0060) ON DELETE RESTRICT\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci"
.\tools\schema\snapshots\schema.json:4305:      "CreateSql": "CREATE TABLE \u0060component_qualifications\u0060 (\n  \u0060id\u0060 int NOT NULL AUTO_INCREMENT,\n  \u0060component_id\u0060 int DEFAULT NULL,\n  \u0060type\u0060 enum(\u0027IQ\u0027,\u0027OQ\u0027,\u0027PQ\u0027) DEFAULT NULL,\n  \u0060qualification_date\u0060 date DEFAULT NULL,\n  \u0060next_due\u0060 date DEFAULT NULL,\n  \u0060status\u0060 enum(\u0027uspjesno\u0027,\u0027neuspjesno\u0027,\u0027planirano\u0027) DEFAULT NULL,\n  \u0060doc_file\u0060 varchar(255) DEFAULT NULL,\n  \u0060signed_by\u0060 varchar(128) DEFAULT NULL,\n  \u0060created_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP,\n  \u0060updated_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n  PRIMARY KEY (\u0060id\u0060),\n  KEY \u0060fk_cq_component\u0060 (\u0060component_id\u0060),\n  CONSTRAINT \u0060fk_cq_component\u0060 FOREIGN KEY (\u0060component_id\u0060) REFERENCES \u0060machine_components\u0060 (\u0060id\u0060)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci"
.\tools\schema\snapshots\schema.json:4388:      "CreateSql": "CREATE TABLE \u0060component_types\u0060 (\n  \u0060id\u0060 int NOT NULL AUTO_INCREMENT,\n  \u0060code\u0060 varchar(50) DEFAULT NULL,\n  \u0060name\u0060 varchar(120) NOT NULL,\n  \u0060created_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP,\n  \u0060updated_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n  PRIMARY KEY (\u0060id\u0060),\n  UNIQUE KEY \u0060code\u0060 (\u0060code\u0060)\n) ENGINE=InnoDB AUTO_INCREMENT=41 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci"
.\tools\schema\snapshots\schema.json:4584:      "CreateSql": "CREATE TABLE \u0060config_change_log\u0060 (\n  \u0060id\u0060 int NOT NULL AUTO_INCREMENT,\n  \u0060change_time\u0060 datetime DEFAULT CURRENT_TIMESTAMP,\n  \u0060changed_by\u0060 int DEFAULT NULL,\n  \u0060config_name\u0060 varchar(255) DEFAULT NULL,\n  \u0060old_value\u0060 text,\n  \u0060new_value\u0060 text,\n  \u0060change_type\u0060 enum(\u0027parametar\u0027,\u0027backup\u0027,\u0027restore\u0027,\u0027security\u0027,\u0027feature\u0027,\u0027drugo\u0027) DEFAULT NULL,\n  \u0060note\u0060 text,\n  \u0060source_ip\u0060 varchar(45) DEFAULT NULL,\n  \u0060created_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP,\n  \u0060updated_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n  \u0060timestamp\u0060 datetime GENERATED ALWAYS AS (\u0060change_time\u0060) VIRTUAL,\n  \u0060action\u0060 varchar(20) GENERATED ALWAYS AS (\u0060change_type\u0060) VIRTUAL,\n  \u0060details\u0060 text GENERATED ALWAYS AS (\u0060note\u0060) VIRTUAL,\n  PRIMARY KEY (\u0060id\u0060),\n  KEY \u0060fk_cfg_user\u0060 (\u0060changed_by\u0060),\n  CONSTRAINT \u0060fk_cfg_user\u0060 FOREIGN KEY (\u0060changed_by\u0060) REFERENCES \u0060users\u0060 (\u0060id\u0060) ON DELETE SET NULL\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci"
.\tools\schema\snapshots\schema.json:4810:      "CreateSql": "CREATE TABLE \u0060contractor_intervention_audit\u0060 (\n  \u0060id\u0060 int NOT NULL AUTO_INCREMENT,\n  \u0060intervention_id\u0060 int NOT NULL,\n  \u0060user_id\u0060 int DEFAULT NULL,\n  \u0060action\u0060 varchar(30) NOT NULL,\n  \u0060details\u0060 text,\n  \u0060changed_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP,\n  \u0060source_ip\u0060 varchar(45) DEFAULT NULL,\n  \u0060device_info\u0060 varchar(255) DEFAULT NULL,\n  \u0060session_id\u0060 varchar(100) DEFAULT NULL,\n  \u0060digital_signature\u0060 varchar(255) DEFAULT NULL,\n  \u0060old_value\u0060 text,\n  \u0060new_value\u0060 text,\n  \u0060note\u0060 text,\n  \u0060created_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP,\n  \u0060updated_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n  PRIMARY KEY (\u0060id\u0060),\n  KEY \u0060fk_cia_intervention\u0060 (\u0060intervention_id\u0060),\n  KEY \u0060fk_cia_user\u0060 (\u0060user_id\u0060),\n  CONSTRAINT \u0060fk_cia_intervention\u0060 FOREIGN KEY (\u0060intervention_id\u0060) REFERENCES \u0060contractor_interventions\u0060 (\u0060id\u0060),\n  CONSTRAINT \u0060fk_cia_user\u0060 FOREIGN KEY (\u0060user_id\u0060) REFERENCES \u0060users\u0060 (\u0060id\u0060)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci"
.\tools\schema\snapshots\schema.json:5124:      "CreateSql": "CREATE TABLE \u0060contractor_interventions\u0060 (\n  \u0060id\u0060 int NOT NULL AUTO_INCREMENT,\n  \u0060contractor_id\u0060 int DEFAULT NULL,\n  \u0060component_id\u0060 int DEFAULT NULL,\n  \u0060intervention_date\u0060 date DEFAULT NULL,\n  \u0060reason\u0060 text,\n  \u0060result\u0060 text,\n  \u0060gmp_compliance\u0060 tinyint(1) DEFAULT \u00271\u0027,\n  \u0060doc_file\u0060 varchar(255) DEFAULT NULL,\n  \u0060created_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP,\n  \u0060updated_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n  \u0060user\u0060 varchar(255) DEFAULT NULL,\n  \u0060component\u0060 varchar(255) DEFAULT NULL,\n  \u0060digital_signature\u0060 varchar(255) DEFAULT NULL,\n  \u0060start_date\u0060 datetime DEFAULT NULL,\n  \u0060end_date\u0060 datetime DEFAULT NULL,\n  \u0060notes\u0060 varchar(255) DEFAULT NULL,\n  \u0060last_modified\u0060 datetime DEFAULT NULL,\n  \u0060last_modified_by_id\u0060 int DEFAULT NULL,\n  \u0060source_ip\u0060 varchar(255) DEFAULT NULL,\n  \u0060comments\u0060 varchar(255) DEFAULT NULL,\n  \u0060status\u0060 varchar(255) DEFAULT NULL,\n  \u0060change_version\u0060 int DEFAULT NULL,\n  \u0060is_deleted\u0060 tinyint(1) DEFAULT NULL,\n  PRIMARY KEY (\u0060id\u0060),\n  KEY \u0060fk_ci_contractor\u0060 (\u0060contractor_id\u0060),\n  KEY \u0060fk_ci_component\u0060 (\u0060component_id\u0060),\n  CONSTRAINT \u0060fk_ci_component\u0060 FOREIGN KEY (\u0060component_id\u0060) REFERENCES \u0060machine_components\u0060 (\u0060id\u0060),\n  CONSTRAINT \u0060fk_ci_contractor\u0060 FOREIGN KEY (\u0060contractor_id\u0060) REFERENCES \u0060external_contractors\u0060 (\u0060id\u0060)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci"
.\tools\schema\snapshots\schema.json:5261:      "CreateSql": "CREATE TABLE \u0060dashboards\u0060 (\n  \u0060id\u0060 int NOT NULL AUTO_INCREMENT,\n  \u0060dashboard_name\u0060 varchar(100) DEFAULT NULL,\n  \u0060description\u0060 text,\n  \u0060created_by\u0060 int DEFAULT NULL,\n  \u0060created_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP,\n  \u0060config_json\u0060 json DEFAULT NULL,\n  \u0060is_active\u0060 tinyint(1) DEFAULT \u00271\u0027,\n  \u0060updated_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n  PRIMARY KEY (\u0060id\u0060),\n  UNIQUE KEY \u0060dashboard_name\u0060 (\u0060dashboard_name\u0060),\n  KEY \u0060fk_dash_user\u0060 (\u0060created_by\u0060),\n  CONSTRAINT \u0060fk_dash_user\u0060 FOREIGN KEY (\u0060created_by\u0060) REFERENCES \u0060users\u0060 (\u0060id\u0060) ON DELETE SET NULL\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci"
.\tools\schema\snapshots\schema.json:5625:      "CreateSql": "CREATE TABLE \u0060delegated_permissions\u0060 (\n  \u0060id\u0060 int NOT NULL AUTO_INCREMENT,\n  \u0060from_user_id\u0060 int NOT NULL,\n  \u0060to_user_id\u0060 int NOT NULL,\n  \u0060permission_id\u0060 int NOT NULL,\n  \u0060start_time\u0060 datetime DEFAULT CURRENT_TIMESTAMP,\n  \u0060expires_at\u0060 datetime NOT NULL,\n  \u0060reason\u0060 varchar(255) DEFAULT NULL,\n  \u0060granted_by\u0060 int DEFAULT NULL,\n  \u0060revoked\u0060 tinyint(1) DEFAULT \u00270\u0027,\n  \u0060revoked_at\u0060 datetime DEFAULT NULL,\n  \u0060created_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP,\n  \u0060updated_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n  \u0060permission?\u0060 varchar(255) DEFAULT NULL,\n  \u0060user?\u0060 varchar(255) DEFAULT NULL,\n  \u0060start_at\u0060 datetime DEFAULT NULL,\n  \u0060end_at\u0060 datetime DEFAULT NULL,\n  \u0060is_active\u0060 tinyint(1) DEFAULT NULL,\n  \u0060is_revoked\u0060 tinyint(1) DEFAULT NULL,\n  \u0060approved_by\u0060 int DEFAULT NULL,\n  \u0060note\u0060 varchar(512) DEFAULT NULL,\n  \u0060change_version\u0060 int DEFAULT NULL,\n  \u0060digital_signature\u0060 varchar(128) DEFAULT NULL,\n  \u0060session_id\u0060 varchar(64) DEFAULT NULL,\n  \u0060source_ip\u0060 varchar(64) DEFAULT NULL,\n  PRIMARY KEY (\u0060id\u0060),\n  KEY \u0060fk_dp_from\u0060 (\u0060from_user_id\u0060),\n  KEY \u0060fk_dp_to\u0060 (\u0060to_user_id\u0060),\n  KEY \u0060fk_dp_perm\u0060 (\u0060permission_id\u0060),\n  KEY \u0060fk_dp_by\u0060 (\u0060granted_by\u0060),\n  CONSTRAINT \u0060fk_dp_by\u0060 FOREIGN KEY (\u0060granted_by\u0060) REFERENCES \u0060users\u0060 (\u0060id\u0060),\n  CONSTRAINT \u0060fk_dp_from\u0060 FOREIGN KEY (\u0060from_user_id\u0060) REFERENCES \u0060users\u0060 (\u0060id\u0060),\n  CONSTRAINT \u0060fk_dp_perm\u0060 FOREIGN KEY (\u0060permission_id\u0060) REFERENCES \u0060permissions\u0060 (\u0060id\u0060),\n  CONSTRAINT \u0060fk_dp_to\u0060 FOREIGN KEY (\u0060to_user_id\u0060) REFERENCES \u0060users\u0060 (\u0060id\u0060)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci"
.\tools\schema\snapshots\schema.json:5844:      "CreateSql": "CREATE TABLE \u0060delete_log\u0060 (\n  \u0060id\u0060 int NOT NULL AUTO_INCREMENT,\n  \u0060deleted_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP,\n  \u0060deleted_by\u0060 int DEFAULT NULL,\n  \u0060table_name\u0060 varchar(100) DEFAULT NULL,\n  \u0060record_id\u0060 int DEFAULT NULL,\n  \u0060delete_type\u0060 enum(\u0027soft\u0027,\u0027hard\u0027) DEFAULT NULL,\n  \u0060reason\u0060 text,\n  \u0060recoverable\u0060 tinyint(1) DEFAULT \u00271\u0027,\n  \u0060backup_file\u0060 varchar(255) DEFAULT NULL,\n  \u0060source_ip\u0060 varchar(45) DEFAULT NULL,\n  \u0060note\u0060 text,\n  \u0060created_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP,\n  \u0060updated_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n  \u0060timestamp\u0060 datetime GENERATED ALWAYS AS (\u0060deleted_at\u0060) VIRTUAL,\n  \u0060action\u0060 varchar(20) GENERATED ALWAYS AS (\u0060delete_type\u0060) VIRTUAL,\n  \u0060details\u0060 text GENERATED ALWAYS AS (\u0060reason\u0060) VIRTUAL,\n  PRIMARY KEY (\u0060id\u0060),\n  KEY \u0060fk_del_user\u0060 (\u0060deleted_by\u0060),\n  CONSTRAINT \u0060fk_del_user\u0060 FOREIGN KEY (\u0060deleted_by\u0060) REFERENCES \u0060users\u0060 (\u0060id\u0060) ON DELETE SET NULL\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci"
.\tools\schema\snapshots\schema.json:5958:      "CreateSql": "CREATE TABLE \u0060departments\u0060 (\n  \u0060id\u0060 int NOT NULL AUTO_INCREMENT,\n  \u0060code\u0060 varchar(50) DEFAULT NULL,\n  \u0060name\u0060 varchar(150) NOT NULL,\n  \u0060manager_id\u0060 int DEFAULT NULL,\n  \u0060created_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP,\n  \u0060updated_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n  PRIMARY KEY (\u0060id\u0060),\n  UNIQUE KEY \u0060code\u0060 (\u0060code\u0060),\n  KEY \u0060fk_dept_manager\u0060 (\u0060manager_id\u0060),\n  CONSTRAINT \u0060fk_dept_manager\u0060 FOREIGN KEY (\u0060manager_id\u0060) REFERENCES \u0060users\u0060 (\u0060id\u0060) ON DELETE SET NULL\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci"
.\tools\schema\snapshots\schema.json:6519:      "CreateSql": "CREATE TABLE \u0060deviation_audit\u0060 (\n  \u0060id\u0060 int NOT NULL AUTO_INCREMENT,\n  \u0060deviation_id\u0060 int NOT NULL,\n  \u0060user_id\u0060 int NOT NULL,\n  \u0060action\u0060 varchar(40) NOT NULL,\n  \u0060details\u0060 text,\n  \u0060changed_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP,\n  \u0060device_info\u0060 varchar(255) DEFAULT NULL,\n  \u0060source_ip\u0060 varchar(64) DEFAULT NULL,\n  \u0060session_id\u0060 varchar(128) DEFAULT NULL,\n  \u0060digital_signature\u0060 varchar(255) DEFAULT NULL,\n  \u0060regulatory_status\u0060 enum(\u0027compliant\u0027,\u0027pending_review\u0027,\u0027invalid\u0027,\u0027forensic\u0027,\u0027security\u0027) DEFAULT \u0027compliant\u0027,\n  \u0060ai_anomaly_score\u0060 decimal(5,4) DEFAULT \u00270.0000\u0027,\n  \u0060validated\u0060 tinyint(1) DEFAULT \u00271\u0027,\n  \u0060audit_trail_id\u0060 int DEFAULT NULL,\n  \u0060comment\u0060 text,\n  \u0060old_value\u0060 text,\n  \u0060new_value\u0060 text,\n  \u0060signature_type\u0060 enum(\u0027pin\u0027,\u0027password\u0027,\u0027certificate\u0027,\u0027biometric\u0027,\u0027none\u0027) DEFAULT \u0027none\u0027,\n  \u0060signature_method\u0060 varchar(100) DEFAULT NULL,\n  \u0060signature_valid\u0060 tinyint(1) DEFAULT \u00271\u0027,\n  \u0060export_status\u0060 enum(\u0027none\u0027,\u0027pdf\u0027,\u0027csv\u0027,\u0027xml\u0027,\u0027emailed\u0027,\u0027printed\u0027) DEFAULT \u0027none\u0027,\n  \u0060export_time\u0060 datetime DEFAULT NULL,\n  \u0060exported_by\u0060 int DEFAULT NULL,\n  \u0060restored_from_snapshot\u0060 tinyint(1) DEFAULT \u00270\u0027,\n  \u0060restoration_reference\u0060 varchar(128) DEFAULT NULL,\n  \u0060approval_status\u0060 enum(\u0027none\u0027,\u0027pending\u0027,\u0027approved\u0027,\u0027rejected\u0027,\u0027escalated\u0027) DEFAULT \u0027none\u0027,\n  \u0060approval_time\u0060 datetime DEFAULT NULL,\n  \u0060approved_by\u0060 int DEFAULT NULL,\n  \u0060deleted\u0060 tinyint(1) DEFAULT \u00270\u0027,\n  \u0060deleted_at\u0060 datetime DEFAULT NULL,\n  \u0060deleted_by\u0060 int DEFAULT NULL,\n  \u0060created_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP,\n  \u0060updated_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n  \u0060related_file\u0060 varchar(255) DEFAULT NULL,\n  \u0060related_photo\u0060 varchar(255) DEFAULT NULL,\n  \u0060iot_event_id\u0060 int DEFAULT NULL,\n  PRIMARY KEY (\u0060id\u0060),\n  KEY \u0060fk_dev_aud_deviation\u0060 (\u0060deviation_id\u0060),\n  KEY \u0060fk_dev_aud_user\u0060 (\u0060user_id\u0060),\n  KEY \u0060fk_dev_aud_approved_by\u0060 (\u0060approved_by\u0060),\n  KEY \u0060fk_dev_aud_audit_trail\u0060 (\u0060audit_trail_id\u0060),\n  KEY \u0060fk_dev_aud_exported_by\u0060 (\u0060exported_by\u0060),\n  KEY \u0060fk_dev_aud_deleted_by\u0060 (\u0060deleted_by\u0060),\n  KEY \u0060fk_dev_aud_iot\u0060 (\u0060iot_event_id\u0060),\n  CONSTRAINT \u0060fk_dev_aud_approved_by\u0060 FOREIGN KEY (\u0060approved_by\u0060) REFERENCES \u0060users\u0060 (\u0060id\u0060),\n  CONSTRAINT \u0060fk_dev_aud_audit_trail\u0060 FOREIGN KEY (\u0060audit_trail_id\u0060) REFERENCES \u0060system_event_log\u0060 (\u0060id\u0060),\n  CONSTRAINT \u0060fk_dev_aud_deleted_by\u0060 FOREIGN KEY (\u0060deleted_by\u0060) REFERENCES \u0060users\u0060 (\u0060id\u0060),\n  CONSTRAINT \u0060fk_dev_aud_deviation\u0060 FOREIGN KEY (\u0060deviation_id\u0060) REFERENCES \u0060deviations\u0060 (\u0060id\u0060),\n  CONSTRAINT \u0060fk_dev_aud_exported_by\u0060 FOREIGN KEY (\u0060exported_by\u0060) REFERENCES \u0060users\u0060 (\u0060id\u0060),\n  CONSTRAINT \u0060fk_dev_aud_iot\u0060 FOREIGN KEY (\u0060iot_event_id\u0060) REFERENCES \u0060iot_event_audit\u0060 (\u0060id\u0060),\n  CONSTRAINT \u0060fk_dev_aud_user\u0060 FOREIGN KEY (\u0060user_id\u0060) REFERENCES \u0060users\u0060 (\u0060id\u0060)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci"
.\tools\schema\snapshots\schema.json:6903:      "CreateSql": "CREATE TABLE \u0060deviations\u0060 (\n  \u0060id\u0060 int NOT NULL AUTO_INCREMENT,\n  \u0060created_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP,\n  \u0060updated_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n  \u0060code\u0060 varchar(40) DEFAULT NULL,\n  \u0060title\u0060 varchar(200) DEFAULT NULL,\n  \u0060description\u0060 varchar(4000) DEFAULT NULL,\n  \u0060reported_at\u0060 datetime DEFAULT NULL,\n  \u0060reported_by_id\u0060 int DEFAULT NULL,\n  \u0060user\u0060 varchar(255) DEFAULT NULL,\n  \u0060severity\u0060 varchar(16) DEFAULT NULL,\n  \u0060is_critical\u0060 tinyint(1) DEFAULT NULL,\n  \u0060status\u0060 varchar(255) DEFAULT NULL,\n  \u0060assigned_investigator_id\u0060 int DEFAULT NULL,\n  \u0060user?\u0060 varchar(255) DEFAULT NULL,\n  \u0060assigned_investigator_name\u0060 varchar(100) DEFAULT NULL,\n  \u0060investigation_started_at\u0060 datetime DEFAULT NULL,\n  \u0060root_cause\u0060 varchar(800) DEFAULT NULL,\n  \u0060corrective_actions\u0060 varchar(255) DEFAULT NULL,\n  \u0060linked_capa_id\u0060 int DEFAULT NULL,\n  \u0060capa_case?\u0060 varchar(255) DEFAULT NULL,\n  \u0060closure_comment\u0060 varchar(2000) DEFAULT NULL,\n  \u0060closed_at\u0060 datetime DEFAULT NULL,\n  \u0060attachment_ids\u0060 varchar(255) DEFAULT NULL,\n  \u0060attachments\u0060 varchar(255) DEFAULT NULL,\n  \u0060digital_signature\u0060 varchar(128) DEFAULT NULL,\n  \u0060risk_score\u0060 int DEFAULT NULL,\n  \u0060anomaly_score\u0060 decimal(10,2) DEFAULT NULL,\n  \u0060last_modified\u0060 datetime DEFAULT NULL,\n  \u0060last_modified_by_id\u0060 int DEFAULT NULL,\n  \u0060source_ip\u0060 varchar(64) DEFAULT NULL,\n  \u0060audit_note\u0060 varchar(1000) DEFAULT NULL,\n  \u0060audit_trail\u0060 varchar(255) DEFAULT NULL,\n  \u0060string\u003E\u0060 varchar(255) DEFAULT NULL,\n  PRIMARY KEY (\u0060id\u0060)\n) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci"
.\tools\schema\snapshots\schema.json:7089:      "CreateSql": "CREATE TABLE \u0060digital_signatures\u0060 (\n  \u0060id\u0060 int NOT NULL AUTO_INCREMENT,\n  \u0060table_name\u0060 varchar(100) DEFAULT NULL,\n  \u0060record_id\u0060 int DEFAULT NULL,\n  \u0060user_id\u0060 int DEFAULT NULL,\n  \u0060signature_hash\u0060 varchar(255) DEFAULT NULL,\n  \u0060signed_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP,\n  \u0060method\u0060 enum(\u0027pin\u0027,\u0027certificate\u0027,\u0027biometric\u0027,\u0027password\u0027) DEFAULT NULL,\n  \u0060status\u0060 enum(\u0027valid\u0027,\u0027revoked\u0027,\u0027pending\u0027) DEFAULT \u0027valid\u0027,\n  \u0060ip_address\u0060 varchar(45) DEFAULT NULL,\n  \u0060device_info\u0060 varchar(255) DEFAULT NULL,\n  \u0060note\u0060 text,\n  \u0060created_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP,\n  \u0060updated_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n  PRIMARY KEY (\u0060id\u0060),\n  KEY \u0060fk_dsig_user\u0060 (\u0060user_id\u0060),\n  CONSTRAINT \u0060fk_dsig_user\u0060 FOREIGN KEY (\u0060user_id\u0060) REFERENCES \u0060users\u0060 (\u0060id\u0060) ON DELETE SET NULL\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci"
.\tools\schema\snapshots\schema.json:7284:      "CreateSql": "CREATE TABLE \u0060document_versions\u0060 (\n  \u0060id\u0060 int NOT NULL AUTO_INCREMENT,\n  \u0060related_table\u0060 varchar(50) DEFAULT NULL,\n  \u0060related_id\u0060 int DEFAULT NULL,\n  \u0060version\u0060 varchar(40) DEFAULT NULL,\n  \u0060file_path\u0060 varchar(255) DEFAULT NULL,\n  \u0060created_by\u0060 int DEFAULT NULL,\n  \u0060created_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP,\n  \u0060status\u0060 enum(\u0027active\u0027,\u0027archived\u0027,\u0027obsolete\u0027,\u0027review\u0027) DEFAULT NULL,\n  \u0060note\u0060 text,\n  \u0060updated_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n  \u0060documentcontrol_id\u0060 int DEFAULT NULL,\n  \u0060document\u0060 varchar(255) DEFAULT NULL,\n  \u0060revision\u0060 varchar(255) DEFAULT NULL,\n  \u0060created_by_id\u0060 int DEFAULT NULL,\n  PRIMARY KEY (\u0060id\u0060),\n  KEY \u0060fk_docv_user\u0060 (\u0060created_by\u0060),\n  CONSTRAINT \u0060fk_docv_user\u0060 FOREIGN KEY (\u0060created_by\u0060) REFERENCES \u0060users\u0060 (\u0060id\u0060) ON DELETE SET NULL\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci"
.\tools\schema\snapshots\schema.json:7519:      "CreateSql": "CREATE TABLE \u0060entity_audit_log\u0060 (\n  \u0060id\u0060 int NOT NULL AUTO_INCREMENT,\n  \u0060timestamp\u0060 datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,\n  \u0060user_id\u0060 int DEFAULT NULL,\n  \u0060source_ip\u0060 varchar(64) DEFAULT NULL,\n  \u0060device_info\u0060 varchar(256) DEFAULT NULL,\n  \u0060entity\u0060 varchar(64) NOT NULL,\n  \u0060entity_id\u0060 int DEFAULT NULL,\n  \u0060action\u0060 varchar(64) NOT NULL,\n  \u0060details\u0060 text,\n  \u0060session_id\u0060 varchar(128) DEFAULT NULL,\n  \u0060status\u0060 varchar(32) DEFAULT NULL,\n  \u0060digital_signature\u0060 varchar(256) DEFAULT NULL,\n  \u0060signature_hash\u0060 varchar(256) DEFAULT NULL,\n  \u0060created_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP,\n  \u0060updated_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n  PRIMARY KEY (\u0060id\u0060),\n  KEY \u0060idx_eal_time\u0060 (\u0060timestamp\u0060),\n  KEY \u0060idx_eal_user\u0060 (\u0060user_id\u0060),\n  KEY \u0060idx_eal_entity\u0060 (\u0060entity\u0060),\n  KEY \u0060idx_eal_action\u0060 (\u0060action\u0060),\n  KEY \u0060idx_eal_entity_id\u0060 (\u0060entity_id\u0060),\n  CONSTRAINT \u0060fk_eal_user\u0060 FOREIGN KEY (\u0060user_id\u0060) REFERENCES \u0060users\u0060 (\u0060id\u0060) ON DELETE SET NULL\n) ENGINE=InnoDB AUTO_INCREMENT=11 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci"
.\tools\schema\snapshots\schema.json:7635:      "CreateSql": "CREATE TABLE \u0060entity_tags\u0060 (\n  \u0060id\u0060 int NOT NULL AUTO_INCREMENT,\n  \u0060entity\u0060 varchar(60) NOT NULL,\n  \u0060entity_id\u0060 int NOT NULL,\n  \u0060tag_id\u0060 int NOT NULL,\n  \u0060created_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP,\n  \u0060updated_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n  PRIMARY KEY (\u0060id\u0060),\n  UNIQUE KEY \u0060ux_et\u0060 (\u0060entity\u0060,\u0060entity_id\u0060,\u0060tag_id\u0060),\n  KEY \u0060fk_et_tag\u0060 (\u0060tag_id\u0060),\n  CONSTRAINT \u0060fk_et_tag\u0060 FOREIGN KEY (\u0060tag_id\u0060) REFERENCES \u0060tags\u0060 (\u0060id\u0060) ON DELETE CASCADE\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci"
.\tools\schema\snapshots\schema.json:7820:      "CreateSql": "CREATE TABLE \u0060export_print_log\u0060 (\n  \u0060id\u0060 int NOT NULL AUTO_INCREMENT,\n  \u0060user_id\u0060 int DEFAULT NULL,\n  \u0060export_time\u0060 datetime DEFAULT CURRENT_TIMESTAMP,\n  \u0060created_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP,\n  \u0060updated_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n  \u0060format\u0060 enum(\u0027excel\u0027,\u0027pdf\u0027,\u0027csv\u0027,\u0027xml\u0027) DEFAULT NULL,\n  \u0060table_name\u0060 varchar(100) DEFAULT NULL,\n  \u0060filter_used\u0060 text,\n  \u0060file_path\u0060 varchar(255) DEFAULT NULL,\n  \u0060source_ip\u0060 varchar(45) DEFAULT NULL,\n  \u0060note\u0060 text,\n  \u0060timestamp\u0060 datetime GENERATED ALWAYS AS (\u0060export_time\u0060) VIRTUAL,\n  \u0060details\u0060 text GENERATED ALWAYS AS (\u0060note\u0060) VIRTUAL,\n  PRIMARY KEY (\u0060id\u0060),\n  KEY \u0060fk_export_user\u0060 (\u0060user_id\u0060),\n  CONSTRAINT \u0060fk_export_user\u0060 FOREIGN KEY (\u0060user_id\u0060) REFERENCES \u0060users\u0060 (\u0060id\u0060) ON DELETE SET NULL\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci"
.\tools\schema\snapshots\schema.json:8116:      "CreateSql": "CREATE TABLE \u0060external_contractors\u0060 (\n  \u0060id\u0060 int NOT NULL AUTO_INCREMENT,\n  \u0060name\u0060 varchar(100) DEFAULT NULL,\n  \u0060service_type\u0060 varchar(100) DEFAULT NULL,\n  \u0060contact\u0060 varchar(100) DEFAULT NULL,\n  \u0060phone\u0060 varchar(50) DEFAULT NULL,\n  \u0060email\u0060 varchar(100) DEFAULT NULL,\n  \u0060doc_file\u0060 varchar(255) DEFAULT NULL,\n  \u0060created_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP,\n  \u0060updated_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n  \u0060company_name\u0060 varchar(255) DEFAULT NULL,\n  \u0060registration_number\u0060 varchar(255) DEFAULT NULL,\n  \u0060type\u0060 varchar(255) DEFAULT NULL,\n  \u0060contact_person\u0060 varchar(255) DEFAULT NULL,\n  \u0060address\u0060 varchar(255) DEFAULT NULL,\n  \u0060certificates\u0060 varchar(255) DEFAULT NULL,\n  \u0060is_blacklisted\u0060 tinyint(1) DEFAULT NULL,\n  \u0060blacklist_reason\u0060 varchar(255) DEFAULT NULL,\n  \u0060risk_score\u0060 decimal(10,2) DEFAULT NULL,\n  \u0060supplier_id\u0060 int DEFAULT NULL,\n  \u0060supplier?\u0060 varchar(255) DEFAULT NULL,\n  \u0060interventions\u0060 varchar(255) DEFAULT NULL,\n  \u0060attachments\u0060 varchar(255) DEFAULT NULL,\n  \u0060digital_signature\u0060 varchar(255) DEFAULT NULL,\n  \u0060audit_logs\u0060 varchar(255) DEFAULT NULL,\n  \u0060note\u0060 varchar(255) DEFAULT NULL,\n  PRIMARY KEY (\u0060id\u0060)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci"
.\tools\schema\snapshots\schema.json:8234:      "CreateSql": "CREATE TABLE \u0060failure_modes\u0060 (\n  \u0060id\u0060 int NOT NULL AUTO_INCREMENT,\n  \u0060component_type_id\u0060 int DEFAULT NULL,\n  \u0060code\u0060 varchar(40) DEFAULT NULL,\n  \u0060description\u0060 varchar(255) DEFAULT NULL,\n  \u0060severity_default\u0060 int DEFAULT NULL,\n  \u0060created_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP,\n  \u0060updated_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n  PRIMARY KEY (\u0060id\u0060),\n  KEY \u0060fk_fm_comp_type\u0060 (\u0060component_type_id\u0060),\n  CONSTRAINT \u0060fk_fm_comp_type\u0060 FOREIGN KEY (\u0060component_type_id\u0060) REFERENCES \u0060component_types\u0060 (\u0060id\u0060)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci"
.\tools\schema\snapshots\schema.json:8515:      "CreateSql": "CREATE TABLE \u0060forensic_user_change_log\u0060 (\n  \u0060id\u0060 int NOT NULL AUTO_INCREMENT,\n  \u0060changed_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP,\n  \u0060changed_by\u0060 int DEFAULT NULL,\n  \u0060action\u0060 enum(\u0027create_user\u0027,\u0027update_user\u0027,\u0027disable_user\u0027,\u0027change_role\u0027,\u0027reset_password\u0027,\u0027delete_user\u0027,\u0027force_logout\u0027) DEFAULT NULL,\n  \u0060target_user_id\u0060 int DEFAULT NULL,\n  \u0060old_role\u0060 varchar(50) DEFAULT NULL,\n  \u0060new_role\u0060 varchar(50) DEFAULT NULL,\n  \u0060old_status\u0060 tinyint(1) DEFAULT NULL,\n  \u0060new_status\u0060 tinyint(1) DEFAULT NULL,\n  \u0060note\u0060 text,\n  \u0060source_ip\u0060 varchar(45) DEFAULT NULL,\n  \u0060created_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP,\n  \u0060updated_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n  \u0060timestamp\u0060 datetime GENERATED ALWAYS AS (\u0060changed_at\u0060) VIRTUAL,\n  \u0060details\u0060 text GENERATED ALWAYS AS (\u0060note\u0060) VIRTUAL,\n  \u0060changed_by_user\u0060 varchar(255) DEFAULT NULL,\n  \u0060target_user\u0060 varchar(255) DEFAULT NULL,\n  \u0060digital_signature\u0060 varchar(255) DEFAULT NULL,\n  \u0060change_version\u0060 int DEFAULT NULL,\n  \u0060is_deleted\u0060 tinyint(1) DEFAULT NULL,\n  PRIMARY KEY (\u0060id\u0060),\n  KEY \u0060fk_fucl_changed_by\u0060 (\u0060changed_by\u0060),\n  KEY \u0060fk_fucl_target_user\u0060 (\u0060target_user_id\u0060),\n  CONSTRAINT \u0060fk_fucl_changed_by\u0060 FOREIGN KEY (\u0060changed_by\u0060) REFERENCES \u0060users\u0060 (\u0060id\u0060) ON DELETE SET NULL,\n  CONSTRAINT \u0060fk_fucl_target_user\u0060 FOREIGN KEY (\u0060target_user_id\u0060) REFERENCES \u0060users\u0060 (\u0060id\u0060) ON DELETE SET NULL\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci"
.\tools\schema\snapshots\schema.json:8883:      "CreateSql": "CREATE TABLE \u0060incident_log\u0060 (\n  \u0060id\u0060 int NOT NULL AUTO_INCREMENT,\n  \u0060detected_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP,\n  \u0060reported_by\u0060 int DEFAULT NULL,\n  \u0060severity\u0060 enum(\u0027low\u0027,\u0027medium\u0027,\u0027high\u0027,\u0027critical\u0027,\u0027gmp\u0027,\u0027compliance\u0027) DEFAULT \u0027low\u0027,\n  \u0060title\u0060 varchar(255) DEFAULT NULL,\n  \u0060description\u0060 text,\n  \u0060resolved\u0060 tinyint(1) DEFAULT \u00270\u0027,\n  \u0060resolved_at\u0060 datetime DEFAULT NULL,\n  \u0060resolved_by\u0060 int DEFAULT NULL,\n  \u0060actions_taken\u0060 text,\n  \u0060follow_up\u0060 text,\n  \u0060note\u0060 text,\n  \u0060source_ip\u0060 varchar(45) DEFAULT NULL,\n  \u0060created_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP,\n  \u0060updated_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n  \u0060severity_id\u0060 int DEFAULT NULL,\n  \u0060reported_by_id\u0060 int DEFAULT NULL,\n  \u0060resolved_by_id\u0060 int DEFAULT NULL,\n  \u0060digital_signature\u0060 varchar(255) DEFAULT NULL,\n  \u0060root_cause\u0060 varchar(255) DEFAULT NULL,\n  \u0060capa_case_id\u0060 int DEFAULT NULL,\n  \u0060capa_case\u0060 varchar(255) DEFAULT NULL,\n  \u0060attachments\u0060 varchar(255) DEFAULT NULL,\n  \u0060last_modified\u0060 datetime DEFAULT NULL,\n  \u0060last_modified_by_id\u0060 int DEFAULT NULL,\n  \u0060last_modified_by\u0060 varchar(255) DEFAULT NULL,\n  PRIMARY KEY (\u0060id\u0060),\n  KEY \u0060fk_inc_reported_by\u0060 (\u0060reported_by\u0060),\n  KEY \u0060fk_inc_resolved_by\u0060 (\u0060resolved_by\u0060),\n  KEY \u0060idx_inc_sev_id\u0060 (\u0060severity_id\u0060),\n  CONSTRAINT \u0060fk_inc_reported_by\u0060 FOREIGN KEY (\u0060reported_by\u0060) REFERENCES \u0060users\u0060 (\u0060id\u0060) ON DELETE SET NULL,\n  CONSTRAINT \u0060fk_inc_resolved_by\u0060 FOREIGN KEY (\u0060resolved_by\u0060) REFERENCES \u0060users\u0060 (\u0060id\u0060) ON DELETE SET NULL,\n  CONSTRAINT \u0060fk_inc_sev\u0060 FOREIGN KEY (\u0060severity_id\u0060) REFERENCES \u0060ref_value\u0060 (\u0060id\u0060) ON DELETE SET NULL\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci"
.\tools\schema\snapshots\schema.json:9094:      "CreateSql": "CREATE TABLE \u0060inspections\u0060 (\n  \u0060id\u0060 int NOT NULL AUTO_INCREMENT,\n  \u0060inspection_date\u0060 date DEFAULT NULL,\n  \u0060inspector_name\u0060 varchar(100) DEFAULT NULL,\n  \u0060type\u0060 enum(\u0027HALMED\u0027,\u0027interni\u0027,\u0027drugi\u0027) DEFAULT NULL,\n  \u0060result\u0060 enum(\u0027prolaz\u0027,\u0027pao\u0027,\u0027napomena\u0027) DEFAULT NULL,\n  \u0060related_machine\u0060 int DEFAULT NULL,\n  \u0060doc_file\u0060 varchar(255) DEFAULT NULL,\n  \u0060notes\u0060 text,\n  \u0060created_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP,\n  \u0060updated_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n  \u0060type_id\u0060 int DEFAULT NULL,\n  \u0060result_id\u0060 int DEFAULT NULL,\n  PRIMARY KEY (\u0060id\u0060),\n  KEY \u0060fk_insp_machine\u0060 (\u0060related_machine\u0060),\n  KEY \u0060idx_insp_type_id\u0060 (\u0060type_id\u0060),\n  KEY \u0060idx_insp_result_id\u0060 (\u0060result_id\u0060),\n  CONSTRAINT \u0060fk_insp_machine\u0060 FOREIGN KEY (\u0060related_machine\u0060) REFERENCES \u0060machines\u0060 (\u0060id\u0060),\n  CONSTRAINT \u0060fk_insp_result\u0060 FOREIGN KEY (\u0060result_id\u0060) REFERENCES \u0060ref_value\u0060 (\u0060id\u0060) ON DELETE SET NULL,\n  CONSTRAINT \u0060fk_insp_type\u0060 FOREIGN KEY (\u0060type_id\u0060) REFERENCES \u0060ref_value\u0060 (\u0060id\u0060) ON DELETE SET NULL\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci"
.\tools\schema\snapshots\schema.json:9238:      "CreateSql": "CREATE TABLE \u0060integration_log\u0060 (\n  \u0060id\u0060 int NOT NULL AUTO_INCREMENT,\n  \u0060system_name\u0060 varchar(100) DEFAULT NULL,\n  \u0060api_endpoint\u0060 varchar(255) DEFAULT NULL,\n  \u0060request_time\u0060 datetime DEFAULT CURRENT_TIMESTAMP,\n  \u0060request_json\u0060 longtext,\n  \u0060response_json\u0060 longtext,\n  \u0060status_code\u0060 int DEFAULT NULL,\n  \u0060processed\u0060 tinyint(1) DEFAULT \u00270\u0027,\n  \u0060processed_at\u0060 datetime DEFAULT NULL,\n  \u0060created_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP,\n  \u0060updated_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n  PRIMARY KEY (\u0060id\u0060)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci"
.\tools\schema\snapshots\schema.json:9483:      "CreateSql": "CREATE TABLE \u0060inventory_transactions\u0060 (\n  \u0060id\u0060 int NOT NULL AUTO_INCREMENT,\n  \u0060part_id\u0060 int DEFAULT NULL,\n  \u0060warehouse_id\u0060 int DEFAULT NULL,\n  \u0060transaction_type\u0060 enum(\u0027in\u0027,\u0027out\u0027,\u0027transfer\u0027,\u0027adjust\u0027,\u0027damage\u0027,\u0027obsolete\u0027) DEFAULT NULL,\n  \u0060quantity\u0060 int DEFAULT NULL,\n  \u0060transaction_date\u0060 datetime DEFAULT CURRENT_TIMESTAMP,\n  \u0060performed_by\u0060 int DEFAULT NULL,\n  \u0060related_document\u0060 varchar(255) DEFAULT NULL,\n  \u0060note\u0060 text,\n  \u0060created_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP,\n  \u0060updated_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n  \u0060performed_by_id\u0060 int DEFAULT NULL,\n  \u0060spare_part?\u0060 varchar(255) DEFAULT NULL,\n  \u0060warehouse?\u0060 varchar(255) DEFAULT NULL,\n  \u0060user?\u0060 varchar(255) DEFAULT NULL,\n  PRIMARY KEY (\u0060id\u0060),\n  KEY \u0060fk_it_part\u0060 (\u0060part_id\u0060),\n  KEY \u0060fk_it_warehouse\u0060 (\u0060warehouse_id\u0060),\n  KEY \u0060fk_it_user\u0060 (\u0060performed_by\u0060),\n  CONSTRAINT \u0060fk_it_part\u0060 FOREIGN KEY (\u0060part_id\u0060) REFERENCES \u0060parts\u0060 (\u0060id\u0060),\n  CONSTRAINT \u0060fk_it_user\u0060 FOREIGN KEY (\u0060performed_by\u0060) REFERENCES \u0060users\u0060 (\u0060id\u0060),\n  CONSTRAINT \u0060fk_it_warehouse\u0060 FOREIGN KEY (\u0060warehouse_id\u0060) REFERENCES \u0060warehouses\u0060 (\u0060id\u0060),\n  CONSTRAINT \u0060chk_it_qty_nonneg\u0060 CHECK (((\u0060quantity\u0060 is null) or (\u0060quantity\u0060 \u003E= 0)))\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci"
.\tools\schema\snapshots\schema.json:9647:      "CreateSql": "CREATE TABLE \u0060iot_anomaly_log\u0060 (\n  \u0060id\u0060 int NOT NULL AUTO_INCREMENT,\n  \u0060sensor_data_id\u0060 int DEFAULT NULL,\n  \u0060detected_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP,\n  \u0060detected_by\u0060 varchar(100) DEFAULT NULL,\n  \u0060description\u0060 text,\n  \u0060severity\u0060 enum(\u0027low\u0027,\u0027medium\u0027,\u0027high\u0027,\u0027critical\u0027) DEFAULT NULL,\n  \u0060resolved\u0060 tinyint(1) DEFAULT \u00270\u0027,\n  \u0060resolved_at\u0060 datetime DEFAULT NULL,\n  \u0060resolution_note\u0060 text,\n  \u0060created_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP,\n  \u0060updated_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n  PRIMARY KEY (\u0060id\u0060),\n  KEY \u0060fk_ial_sensor\u0060 (\u0060sensor_data_id\u0060),\n  CONSTRAINT \u0060fk_ial_sensor\u0060 FOREIGN KEY (\u0060sensor_data_id\u0060) REFERENCES \u0060iot_sensor_data\u0060 (\u0060id\u0060)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci"
.\tools\schema\snapshots\schema.json:9794:      "CreateSql": "CREATE TABLE \u0060iot_devices\u0060 (\n  \u0060id\u0060 int NOT NULL AUTO_INCREMENT,\n  \u0060device_uid\u0060 varchar(120) NOT NULL,\n  \u0060vendor\u0060 varchar(120) DEFAULT NULL,\n  \u0060model\u0060 varchar(120) DEFAULT NULL,\n  \u0060firmware\u0060 varchar(80) DEFAULT NULL,\n  \u0060gateway_id\u0060 int DEFAULT NULL,\n  \u0060last_seen\u0060 datetime DEFAULT NULL,\n  \u0060created_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP,\n  \u0060updated_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n  PRIMARY KEY (\u0060id\u0060),\n  UNIQUE KEY \u0060device_uid\u0060 (\u0060device_uid\u0060),\n  KEY \u0060fk_dev_gw\u0060 (\u0060gateway_id\u0060),\n  CONSTRAINT \u0060fk_dev_gw\u0060 FOREIGN KEY (\u0060gateway_id\u0060) REFERENCES \u0060iot_gateways\u0060 (\u0060id\u0060) ON DELETE SET NULL\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci"
.\tools\schema\snapshots\schema.json:9848:      "CreateSql": "CREATE TABLE \u0060iot_event_audit\u0060 (\n  \u0060id\u0060 int NOT NULL AUTO_INCREMENT,\n  \u0060created_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP,\n  \u0060updated_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n  PRIMARY KEY (\u0060id\u0060)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci"
.\tools\schema\snapshots\schema.json:9962:      "CreateSql": "CREATE TABLE \u0060iot_gateways\u0060 (\n  \u0060id\u0060 int NOT NULL AUTO_INCREMENT,\n  \u0060code\u0060 varchar(80) DEFAULT NULL,\n  \u0060name\u0060 varchar(120) DEFAULT NULL,\n  \u0060location_id\u0060 int DEFAULT NULL,\n  \u0060created_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP,\n  \u0060updated_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n  PRIMARY KEY (\u0060id\u0060),\n  UNIQUE KEY \u0060code\u0060 (\u0060code\u0060),\n  KEY \u0060fk_gw_loc\u0060 (\u0060location_id\u0060),\n  CONSTRAINT \u0060fk_gw_loc\u0060 FOREIGN KEY (\u0060location_id\u0060) REFERENCES \u0060locations\u0060 (\u0060id\u0060) ON DELETE SET NULL\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci"
.\tools\schema\snapshots\schema.json:10186:      "CreateSql": "CREATE TABLE \u0060iot_sensor_data\u0060 (\n  \u0060id\u0060 int NOT NULL AUTO_INCREMENT,\n  \u0060device_id\u0060 varchar(80) DEFAULT NULL,\n  \u0060component_id\u0060 int DEFAULT NULL,\n  \u0060data_type\u0060 varchar(50) DEFAULT NULL,\n  \u0060value\u0060 decimal(12,4) DEFAULT NULL,\n  \u0060unit\u0060 varchar(20) DEFAULT NULL,\n  \u0060timestamp\u0060 datetime DEFAULT NULL,\n  \u0060status\u0060 enum(\u0027ok\u0027,\u0027alert\u0027,\u0027out_of_range\u0027) DEFAULT NULL,\n  \u0060anomaly_detected\u0060 tinyint(1) DEFAULT \u00270\u0027,\n  \u0060processed\u0060 tinyint(1) DEFAULT \u00270\u0027,\n  \u0060note\u0060 text,\n  \u0060created_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP,\n  \u0060updated_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n  \u0060unit_id\u0060 int DEFAULT NULL,\n  PRIMARY KEY (\u0060id\u0060),\n  KEY \u0060fk_isd_component\u0060 (\u0060component_id\u0060),\n  KEY \u0060fk_isd_unit\u0060 (\u0060unit_id\u0060),\n  KEY \u0060idx_isd_device_time\u0060 (\u0060device_id\u0060,\u0060timestamp\u0060),\n  CONSTRAINT \u0060fk_isd_component\u0060 FOREIGN KEY (\u0060component_id\u0060) REFERENCES \u0060machine_components\u0060 (\u0060id\u0060),\n  CONSTRAINT \u0060fk_isd_unit\u0060 FOREIGN KEY (\u0060unit_id\u0060) REFERENCES \u0060units\u0060 (\u0060id\u0060) ON DELETE SET NULL\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci"
.\tools\schema\snapshots\schema.json:10350:      "CreateSql": "CREATE TABLE \u0060irregularities_log\u0060 (\n  \u0060id\u0060 int NOT NULL AUTO_INCREMENT,\n  \u0060related_type\u0060 enum(\u0027work_order\u0027,\u0027component\u0027,\u0027machine\u0027,\u0027inspection\u0027,\u0027capa_case\u0027,\u0027training\u0027,\u0027validation\u0027) DEFAULT NULL,\n  \u0060related_id\u0060 int DEFAULT NULL,\n  \u0060user_id\u0060 int DEFAULT NULL,\n  \u0060description\u0060 text,\n  \u0060detected_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP,\n  \u0060status\u0060 enum(\u0027otvoreno\u0027,\u0027zatvoreno\u0027) DEFAULT \u0027otvoreno\u0027,\n  \u0060note\u0060 text,\n  \u0060created_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP,\n  \u0060updated_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n  \u0060details\u0060 text GENERATED ALWAYS AS (\u0060description\u0060) VIRTUAL,\n  PRIMARY KEY (\u0060id\u0060),\n  KEY \u0060fk_irr_user\u0060 (\u0060user_id\u0060),\n  CONSTRAINT \u0060fk_irr_user\u0060 FOREIGN KEY (\u0060user_id\u0060) REFERENCES \u0060users\u0060 (\u0060id\u0060) ON DELETE SET NULL\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci"
.\tools\schema\snapshots\schema.json:10422:      "CreateSql": "CREATE TABLE \u0060job_titles\u0060 (\n  \u0060id\u0060 int NOT NULL AUTO_INCREMENT,\n  \u0060title\u0060 varchar(100) DEFAULT NULL,\n  \u0060created_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP,\n  \u0060updated_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n  PRIMARY KEY (\u0060id\u0060),\n  UNIQUE KEY \u0060title\u0060 (\u0060title\u0060)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci"
.\tools\schema\snapshots\schema.json:10603:      "CreateSql": "CREATE TABLE \u0060locations\u0060 (\n  \u0060id\u0060 int NOT NULL AUTO_INCREMENT,\n  \u0060parent_id\u0060 int DEFAULT NULL,\n  \u0060code\u0060 varchar(50) DEFAULT NULL,\n  \u0060name\u0060 varchar(150) NOT NULL,\n  \u0060type\u0060 enum(\u0027site\u0027,\u0027building\u0027,\u0027area\u0027,\u0027room\u0027,\u0027zone\u0027,\u0027warehouse\u0027) NOT NULL DEFAULT \u0027site\u0027,\n  \u0060address\u0060 varchar(255) DEFAULT NULL,\n  \u0060city\u0060 varchar(100) DEFAULT NULL,\n  \u0060country\u0060 varchar(100) DEFAULT NULL,\n  \u0060gps_lat\u0060 decimal(10,7) DEFAULT NULL,\n  \u0060gps_lng\u0060 decimal(10,7) DEFAULT NULL,\n  \u0060created_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP,\n  \u0060updated_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n  PRIMARY KEY (\u0060id\u0060),\n  UNIQUE KEY \u0060code\u0060 (\u0060code\u0060),\n  KEY \u0060fk_loc_parent\u0060 (\u0060parent_id\u0060),\n  CONSTRAINT \u0060fk_loc_parent\u0060 FOREIGN KEY (\u0060parent_id\u0060) REFERENCES \u0060locations\u0060 (\u0060id\u0060) ON DELETE SET NULL\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci"
.\tools\schema\snapshots\schema.json:10686:      "CreateSql": "CREATE TABLE \u0060lookup_domain\u0060 (\n  \u0060id\u0060 int NOT NULL AUTO_INCREMENT,\n  \u0060domain_code\u0060 varchar(50) DEFAULT NULL,\n  \u0060description\u0060 varchar(255) DEFAULT NULL,\n  \u0060created_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP,\n  \u0060updated_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n  PRIMARY KEY (\u0060id\u0060),\n  UNIQUE KEY \u0060domain_code\u0060 (\u0060domain_code\u0060)\n) ENGINE=InnoDB AUTO_INCREMENT=18 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci"
.\tools\schema\snapshots\schema.json:10818:      "CreateSql": "CREATE TABLE \u0060lookup_value\u0060 (\n  \u0060id\u0060 int NOT NULL AUTO_INCREMENT,\n  \u0060domain_id\u0060 int NOT NULL,\n  \u0060value_code\u0060 varchar(100) DEFAULT NULL,\n  \u0060value_label\u0060 varchar(100) DEFAULT NULL,\n  \u0060is_active\u0060 tinyint(1) DEFAULT \u00271\u0027,\n  \u0060sort_order\u0060 int DEFAULT \u00270\u0027,\n  \u0060created_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP,\n  \u0060updated_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n  PRIMARY KEY (\u0060id\u0060),\n  UNIQUE KEY \u0060uk_domain_code\u0060 (\u0060domain_id\u0060,\u0060value_code\u0060),\n  CONSTRAINT \u0060fk_lk_domain\u0060 FOREIGN KEY (\u0060domain_id\u0060) REFERENCES \u0060lookup_domain\u0060 (\u0060id\u0060) ON DELETE CASCADE\n) ENGINE=InnoDB AUTO_INCREMENT=287 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci"
.\tools\schema\snapshots\schema.json:11365:      "CreateSql": "CREATE TABLE \u0060machine_components\u0060 (\n  \u0060id\u0060 int NOT NULL AUTO_INCREMENT,\n  \u0060machine_id\u0060 int DEFAULT NULL,\n  \u0060code\u0060 varchar(50) DEFAULT NULL,\n  \u0060name\u0060 varchar(100) DEFAULT NULL,\n  \u0060type\u0060 varchar(50) DEFAULT NULL,\n  \u0060sop_doc\u0060 varchar(255) DEFAULT NULL,\n  \u0060status\u0060 enum(\u0027active\u0027,\u0027removed\u0027,\u0027maintenance\u0027) DEFAULT \u0027active\u0027,\n  \u0060install_date\u0060 date DEFAULT NULL,\n  \u0060created_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP,\n  \u0060updated_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n  \u0060component_type_id\u0060 int DEFAULT NULL,\n  \u0060status_id\u0060 int DEFAULT NULL,\n  \u0060is_deleted\u0060 tinyint(1) DEFAULT \u00270\u0027,\n  \u0060deleted_at\u0060 datetime DEFAULT NULL,\n  \u0060deleted_by\u0060 int DEFAULT NULL,\n  \u0060last_modified_by_id\u0060 int DEFAULT NULL,\n  \u0060machine?\u0060 varchar(255) DEFAULT NULL,\n  \u0060description\u0060 varchar(255) DEFAULT NULL,\n  \u0060model\u0060 varchar(255) DEFAULT NULL,\n  \u0060purchase_date\u0060 datetime DEFAULT NULL,\n  \u0060warranty_until\u0060 datetime DEFAULT NULL,\n  \u0060warranty_expiry\u0060 datetime DEFAULT NULL,\n  \u0060serial_number\u0060 varchar(255) DEFAULT NULL,\n  \u0060supplier\u0060 varchar(255) DEFAULT NULL,\n  \u0060rfid_tag\u0060 varchar(255) DEFAULT NULL,\n  \u0060io_tdevice_id\u0060 varchar(255) DEFAULT NULL,\n  \u0060lifecycle_phase\u0060 varchar(255) DEFAULT NULL,\n  \u0060is_critical\u0060 tinyint(1) DEFAULT NULL,\n  \u0060note\u0060 varchar(255) DEFAULT NULL,\n  \u0060digital_signature\u0060 varchar(255) DEFAULT NULL,\n  \u0060notes\u0060 varchar(255) DEFAULT NULL,\n  \u0060last_modified\u0060 datetime DEFAULT NULL,\n  \u0060user?\u0060 varchar(255) DEFAULT NULL,\n  \u0060source_ip\u0060 varchar(255) DEFAULT NULL,\n  \u0060documents\u0060 varchar(255) DEFAULT NULL,\n  \u0060icollection\u003Cphoto\u003E\u0060 varchar(255) DEFAULT NULL,\n  \u0060icollection\u003Ccalibration\u003E\u0060 varchar(255) DEFAULT NULL,\n  \u0060icollection\u003Ccapa_case\u003E\u0060 varchar(255) DEFAULT NULL,\n  \u0060icollection\u003Cwork_order\u003E\u0060 varchar(255) DEFAULT NULL,\n  \u0060change_version\u0060 int DEFAULT NULL,\n  PRIMARY KEY (\u0060id\u0060),\n  UNIQUE KEY \u0060code\u0060 (\u0060code\u0060),\n  KEY \u0060fk_mc_status\u0060 (\u0060status_id\u0060),\n  KEY \u0060fk_comp_component_type\u0060 (\u0060component_type_id\u0060),\n  KEY \u0060ix_machine_components_machine_id\u0060 (\u0060machine_id\u0060),\n  KEY \u0060ix_machine_components_code\u0060 (\u0060code\u0060),\n  CONSTRAINT \u0060fk_comp_component_type\u0060 FOREIGN KEY (\u0060component_type_id\u0060) REFERENCES \u0060component_types\u0060 (\u0060id\u0060),\n  CONSTRAINT \u0060fk_mc_machine\u0060 FOREIGN KEY (\u0060machine_id\u0060) REFERENCES \u0060machines\u0060 (\u0060id\u0060),\n  CONSTRAINT \u0060fk_mc_status\u0060 FOREIGN KEY (\u0060status_id\u0060) REFERENCES \u0060ref_value\u0060 (\u0060id\u0060) ON DELETE SET NULL,\n  CONSTRAINT \u0060fk_mc_type\u0060 FOREIGN KEY (\u0060component_type_id\u0060) REFERENCES \u0060component_types\u0060 (\u0060id\u0060) ON DELETE SET NULL\n) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci"
.\tools\schema\snapshots\schema.json:11632:      "CreateSql": "CREATE TABLE \u0060machine_lifecycle_event\u0060 (\n  \u0060id\u0060 int NOT NULL AUTO_INCREMENT,\n  \u0060machine_id\u0060 int DEFAULT NULL,\n  \u0060event_type\u0060 enum(\u0027procurement\u0027,\u0027installation\u0027,\u0027maintenance\u0027,\u0027repair\u0027,\u0027upgrade\u0027,\u0027move\u0027,\u0027decommission\u0027,\u0027scrap\u0027,\u0027other\u0027) DEFAULT NULL,\n  \u0060event_date\u0060 datetime DEFAULT CURRENT_TIMESTAMP,\n  \u0060performed_by\u0060 int DEFAULT NULL,\n  \u0060notes\u0060 text,\n  \u0060doc_file\u0060 varchar(255) DEFAULT NULL,\n  \u0060created_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP,\n  \u0060updated_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n  \u0060event_type_id\u0060 int DEFAULT NULL,\n  \u0060machine\u0060 varchar(255) DEFAULT NULL,\n  \u0060performed_by_id\u0060 int DEFAULT NULL,\n  \u0060digital_signature\u0060 varchar(128) DEFAULT NULL,\n  \u0060source_ip\u0060 varchar(45) DEFAULT NULL,\n  \u0060last_modified\u0060 datetime DEFAULT NULL,\n  \u0060last_modified_by_id\u0060 int DEFAULT NULL,\n  \u0060last_modified_by\u0060 varchar(255) DEFAULT NULL,\n  PRIMARY KEY (\u0060id\u0060),\n  KEY \u0060fk_mle_machine\u0060 (\u0060machine_id\u0060),\n  KEY \u0060fk_mle_user\u0060 (\u0060performed_by\u0060),\n  KEY \u0060fk_mle_type\u0060 (\u0060event_type_id\u0060),\n  CONSTRAINT \u0060fk_mle_machine\u0060 FOREIGN KEY (\u0060machine_id\u0060) REFERENCES \u0060machines\u0060 (\u0060id\u0060),\n  CONSTRAINT \u0060fk_mle_type\u0060 FOREIGN KEY (\u0060event_type_id\u0060) REFERENCES \u0060ref_value\u0060 (\u0060id\u0060) ON DELETE SET NULL,\n  CONSTRAINT \u0060fk_mle_user\u0060 FOREIGN KEY (\u0060performed_by\u0060) REFERENCES \u0060users\u0060 (\u0060id\u0060)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci"
.\tools\schema\snapshots\schema.json:11770:      "CreateSql": "CREATE TABLE \u0060machine_models\u0060 (\n  \u0060id\u0060 int NOT NULL AUTO_INCREMENT,\n  \u0060manufacturer_id\u0060 int DEFAULT NULL,\n  \u0060machine_type_id\u0060 int DEFAULT NULL,\n  \u0060model_code\u0060 varchar(100) DEFAULT NULL,\n  \u0060model_name\u0060 varchar(150) DEFAULT NULL,\n  \u0060created_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP,\n  \u0060updated_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n  PRIMARY KEY (\u0060id\u0060),\n  UNIQUE KEY \u0060ux_mach_model\u0060 (\u0060manufacturer_id\u0060,\u0060model_code\u0060),\n  KEY \u0060fk_mmodel_type\u0060 (\u0060machine_type_id\u0060),\n  CONSTRAINT \u0060fk_mmodel_manu\u0060 FOREIGN KEY (\u0060manufacturer_id\u0060) REFERENCES \u0060manufacturers\u0060 (\u0060id\u0060) ON DELETE SET NULL,\n  CONSTRAINT \u0060fk_mmodel_type\u0060 FOREIGN KEY (\u0060machine_type_id\u0060) REFERENCES \u0060machine_types\u0060 (\u0060id\u0060) ON DELETE SET NULL\n) ENGINE=InnoDB AUTO_INCREMENT=8 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci"
.\tools\schema\snapshots\schema.json:11853:      "CreateSql": "CREATE TABLE \u0060machine_types\u0060 (\n  \u0060id\u0060 int NOT NULL AUTO_INCREMENT,\n  \u0060code\u0060 varchar(50) DEFAULT NULL,\n  \u0060name\u0060 varchar(120) NOT NULL,\n  \u0060created_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP,\n  \u0060updated_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n  PRIMARY KEY (\u0060id\u0060),\n  UNIQUE KEY \u0060code\u0060 (\u0060code\u0060)\n) ENGINE=InnoDB AUTO_INCREMENT=41 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci"
.\tools\schema\snapshots\schema.json:12633:      "CreateSql": "CREATE TABLE \u0060machines\u0060 (\n  \u0060id\u0060 int NOT NULL AUTO_INCREMENT,\n  \u0060code\u0060 varchar(50) DEFAULT NULL,\n  \u0060name\u0060 varchar(100) DEFAULT NULL,\n  \u0060description\u0060 varchar(1000) DEFAULT NULL,\n  \u0060model\u0060 varchar(100) DEFAULT NULL,\n  \u0060serial_number\u0060 varchar(80) DEFAULT NULL,\n  \u0060manufacturer\u0060 varchar(100) DEFAULT NULL,\n  \u0060location\u0060 varchar(100) DEFAULT NULL,\n  \u0060install_date\u0060 date DEFAULT NULL,\n  \u0060procurement_date\u0060 date DEFAULT NULL,\n  \u0060warranty_until\u0060 date DEFAULT NULL,\n  \u0060acquisition_cost\u0060 decimal(18,2) DEFAULT NULL,\n  \u0060rfid_tag\u0060 varchar(64) DEFAULT NULL,\n  \u0060qr_code\u0060 varchar(128) DEFAULT NULL,\n  \u0060iot_device_id\u0060 varchar(64) DEFAULT NULL,\n  \u0060cloud_device_guid\u0060 varchar(64) DEFAULT NULL,\n  \u0060is_critical\u0060 tinyint(1) DEFAULT \u00270\u0027,\n  \u0060lifecycle_phase\u0060 varchar(30) DEFAULT NULL,\n  \u0060note\u0060 varchar(200) DEFAULT NULL,\n  \u0060status\u0060 varchar(30) NOT NULL DEFAULT \u0027active\u0027,\n  \u0060urs_doc\u0060 varchar(255) DEFAULT NULL,\n  \u0060decommission_date\u0060 date DEFAULT NULL,\n  \u0060decommission_reason\u0060 text,\n  \u0060last_modified\u0060 datetime DEFAULT NULL,\n  \u0060last_modified_by_id\u0060 int DEFAULT NULL,\n  \u0060digital_signature\u0060 varchar(128) DEFAULT NULL,\n  \u0060created_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP,\n  \u0060updated_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n  \u0060location_id\u0060 int DEFAULT NULL,\n  \u0060manufacturer_id\u0060 int DEFAULT NULL,\n  \u0060machine_type_id\u0060 int DEFAULT NULL,\n  \u0060status_id\u0060 int DEFAULT NULL,\n  \u0060lifecycle_phase_id\u0060 int DEFAULT NULL,\n  \u0060is_deleted\u0060 tinyint(1) DEFAULT \u00270\u0027,\n  \u0060deleted_at\u0060 datetime DEFAULT NULL,\n  \u0060deleted_by\u0060 int DEFAULT NULL,\n  \u0060tenant_id\u0060 int DEFAULT NULL,\n  \u0060room_id\u0060 int DEFAULT NULL,\n  \u0060purchase_date\u0060 datetime DEFAULT NULL,\n  \u0060warranty_expiry\u0060 datetime DEFAULT NULL,\n  \u0060notes\u0060 varchar(255) DEFAULT NULL,\n  \u0060icollection\u003Cmachine_component\u003E\u0060 varchar(255) DEFAULT NULL,\n  \u0060icollection\u003Cmachine_lifecycle_event\u003E\u0060 varchar(255) DEFAULT NULL,\n  \u0060icollection\u003Ccapa_case\u003E\u0060 varchar(255) DEFAULT NULL,\n  \u0060icollection\u003Cquality_event\u003E\u0060 varchar(255) DEFAULT NULL,\n  \u0060icollection\u003Cvalidation\u003E\u0060 varchar(255) DEFAULT NULL,\n  \u0060icollection\u003Cinspection\u003E\u0060 varchar(255) DEFAULT NULL,\n  \u0060icollection\u003Cwork_order\u003E\u0060 varchar(255) DEFAULT NULL,\n  \u0060icollection\u003Cphoto\u003E\u0060 varchar(255) DEFAULT NULL,\n  \u0060icollection\u003Cattachment\u003E\u0060 varchar(255) DEFAULT NULL,\n  \u0060user?\u0060 varchar(255) DEFAULT NULL,\n  \u0060icollection\u003Ccalibration\u003E\u0060 varchar(255) DEFAULT NULL,\n  PRIMARY KEY (\u0060id\u0060),\n  UNIQUE KEY \u0060code\u0060 (\u0060code\u0060),\n  KEY \u0060fk_m_last_modified_by\u0060 (\u0060last_modified_by_id\u0060),\n  KEY \u0060fk_machines_location\u0060 (\u0060location_id\u0060),\n  KEY \u0060fk_machines_manufacturer\u0060 (\u0060manufacturer_id\u0060),\n  KEY \u0060idx_m_status_id\u0060 (\u0060status_id\u0060),\n  KEY \u0060idx_m_phase_id\u0060 (\u0060lifecycle_phase_id\u0060),\n  KEY \u0060fk_machines_tenant_id\u0060 (\u0060tenant_id\u0060),\n  KEY \u0060fk_machine_room\u0060 (\u0060room_id\u0060),\n  KEY \u0060fk_mach_machine_type\u0060 (\u0060machine_type_id\u0060),\n  CONSTRAINT \u0060fk_m_last_modified_by\u0060 FOREIGN KEY (\u0060last_modified_by_id\u0060) REFERENCES \u0060users\u0060 (\u0060id\u0060),\n  CONSTRAINT \u0060fk_m_phase\u0060 FOREIGN KEY (\u0060lifecycle_phase_id\u0060) REFERENCES \u0060ref_value\u0060 (\u0060id\u0060) ON DELETE SET NULL,\n  CONSTRAINT \u0060fk_m_status\u0060 FOREIGN KEY (\u0060status_id\u0060) REFERENCES \u0060ref_value\u0060 (\u0060id\u0060) ON DELETE SET NULL,\n  CONSTRAINT \u0060fk_mach_machine_type\u0060 FOREIGN KEY (\u0060machine_type_id\u0060) REFERENCES \u0060machine_types\u0060 (\u0060id\u0060),\n  CONSTRAINT \u0060fk_mach_status\u0060 FOREIGN KEY (\u0060status_id\u0060) REFERENCES \u0060lookup_value\u0060 (\u0060id\u0060),\n  CONSTRAINT \u0060fk_machine_room\u0060 FOREIGN KEY (\u0060room_id\u0060) REFERENCES \u0060rooms\u0060 (\u0060id\u0060),\n  CONSTRAINT \u0060fk_machines_location\u0060 FOREIGN KEY (\u0060location_id\u0060) REFERENCES \u0060locations\u0060 (\u0060id\u0060) ON DELETE SET NULL,\n  CONSTRAINT \u0060fk_machines_manufacturer\u0060 FOREIGN KEY (\u0060manufacturer_id\u0060) REFERENCES \u0060manufacturers\u0060 (\u0060id\u0060) ON DELETE SET NULL,\n  CONSTRAINT \u0060fk_machines_tenant_id\u0060 FOREIGN KEY (\u0060tenant_id\u0060) REFERENCES \u0060tenants\u0060 (\u0060id\u0060),\n  CONSTRAINT \u0060fk_machines_type\u0060 FOREIGN KEY (\u0060machine_type_id\u0060) REFERENCES \u0060machine_types\u0060 (\u0060id\u0060) ON DELETE SET NULL\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci"
.\tools\schema\snapshots\schema.json:12716:      "CreateSql": "CREATE TABLE \u0060manufacturers\u0060 (\n  \u0060id\u0060 int NOT NULL AUTO_INCREMENT,\n  \u0060name\u0060 varchar(150) NOT NULL,\n  \u0060website\u0060 varchar(255) DEFAULT NULL,\n  \u0060created_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP,\n  \u0060updated_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n  PRIMARY KEY (\u0060id\u0060),\n  UNIQUE KEY \u0060name\u0060 (\u0060name\u0060)\n) ENGINE=InnoDB AUTO_INCREMENT=37 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci"
.\tools\schema\snapshots\schema.json:12799:      "CreateSql": "CREATE TABLE \u0060measurement_units\u0060 (\n  \u0060id\u0060 int NOT NULL AUTO_INCREMENT,\n  \u0060code\u0060 varchar(10) DEFAULT NULL,\n  \u0060name\u0060 varchar(50) DEFAULT NULL,\n  \u0060created_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP,\n  \u0060updated_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n  PRIMARY KEY (\u0060id\u0060),\n  UNIQUE KEY \u0060code\u0060 (\u0060code\u0060)\n) ENGINE=InnoDB AUTO_INCREMENT=8 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci"
.\tools\schema\snapshots\schema.json:12950:      "CreateSql": "CREATE TABLE \u0060mobile_device_log\u0060 (\n  \u0060id\u0060 int NOT NULL AUTO_INCREMENT,\n  \u0060user_id\u0060 int DEFAULT NULL,\n  \u0060device_info\u0060 varchar(255) DEFAULT NULL,\n  \u0060login_time\u0060 datetime DEFAULT NULL,\n  \u0060logout_time\u0060 datetime DEFAULT NULL,\n  \u0060os_version\u0060 varchar(50) DEFAULT NULL,\n  \u0060location\u0060 varchar(100) DEFAULT NULL,\n  \u0060ip_address\u0060 varchar(45) DEFAULT NULL,\n  \u0060created_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP,\n  \u0060updated_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n  PRIMARY KEY (\u0060id\u0060),\n  KEY \u0060fk_mdl_user\u0060 (\u0060user_id\u0060),\n  CONSTRAINT \u0060fk_mdl_user\u0060 FOREIGN KEY (\u0060user_id\u0060) REFERENCES \u0060users\u0060 (\u0060id\u0060)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci"
.\tools\schema\snapshots\schema.json:13134:      "CreateSql": "CREATE TABLE \u0060notification_queue\u0060 (\n  \u0060id\u0060 int NOT NULL AUTO_INCREMENT,\n  \u0060template_id\u0060 int DEFAULT NULL,\n  \u0060recipient_user_id\u0060 int DEFAULT NULL,\n  \u0060channel\u0060 enum(\u0027email\u0027,\u0027sms\u0027,\u0027push\u0027,\u0027webhook\u0027) DEFAULT \u0027email\u0027,\n  \u0060payload\u0060 json DEFAULT NULL,\n  \u0060scheduled_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP,\n  \u0060sent_at\u0060 datetime DEFAULT NULL,\n  \u0060status\u0060 enum(\u0027queued\u0027,\u0027sent\u0027,\u0027failed\u0027) DEFAULT \u0027queued\u0027,\n  \u0060last_error\u0060 text,\n  \u0060created_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP,\n  \u0060updated_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n  PRIMARY KEY (\u0060id\u0060),\n  KEY \u0060fk_nq_tpl\u0060 (\u0060template_id\u0060),\n  KEY \u0060fk_nq_user\u0060 (\u0060recipient_user_id\u0060),\n  CONSTRAINT \u0060fk_nq_tpl\u0060 FOREIGN KEY (\u0060template_id\u0060) REFERENCES \u0060notification_templates\u0060 (\u0060id\u0060) ON DELETE SET NULL,\n  CONSTRAINT \u0060fk_nq_user\u0060 FOREIGN KEY (\u0060recipient_user_id\u0060) REFERENCES \u0060users\u0060 (\u0060id\u0060) ON DELETE SET NULL\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci"
.\tools\schema\snapshots\schema.json:13251:      "CreateSql": "CREATE TABLE \u0060notification_templates\u0060 (\n  \u0060id\u0060 int NOT NULL AUTO_INCREMENT,\n  \u0060code\u0060 varchar(80) DEFAULT NULL,\n  \u0060name\u0060 varchar(150) DEFAULT NULL,\n  \u0060subject\u0060 varchar(255) DEFAULT NULL,\n  \u0060body\u0060 text,\n  \u0060channel\u0060 enum(\u0027email\u0027,\u0027sms\u0027,\u0027push\u0027,\u0027webhook\u0027) DEFAULT \u0027email\u0027,\n  \u0060created_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP,\n  \u0060updated_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n  PRIMARY KEY (\u0060id\u0060),\n  UNIQUE KEY \u0060code\u0060 (\u0060code\u0060)\n) ENGINE=InnoDB AUTO_INCREMENT=33 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci"
.\tools\schema\snapshots\schema.json:13378:      "CreateSql": "CREATE TABLE \u0060part_bom\u0060 (\n  \u0060id\u0060 int NOT NULL AUTO_INCREMENT,\n  \u0060parent_part_id\u0060 int NOT NULL,\n  \u0060child_part_id\u0060 int NOT NULL,\n  \u0060quantity\u0060 decimal(10,3) NOT NULL,\n  \u0060created_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP,\n  \u0060updated_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n  PRIMARY KEY (\u0060id\u0060),\n  UNIQUE KEY \u0060ux_bom\u0060 (\u0060parent_part_id\u0060,\u0060child_part_id\u0060),\n  KEY \u0060fk_bom_child\u0060 (\u0060child_part_id\u0060),\n  CONSTRAINT \u0060fk_bom_child\u0060 FOREIGN KEY (\u0060child_part_id\u0060) REFERENCES \u0060parts\u0060 (\u0060id\u0060) ON DELETE RESTRICT,\n  CONSTRAINT \u0060fk_bom_parent\u0060 FOREIGN KEY (\u0060parent_part_id\u0060) REFERENCES \u0060parts\u0060 (\u0060id\u0060) ON DELETE CASCADE,\n  CONSTRAINT \u0060part_bom_chk_1\u0060 CHECK ((\u0060quantity\u0060 \u003E 0))\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci"
.\tools\schema\snapshots\schema.json:13757:      "CreateSql": "CREATE TABLE \u0060part_supplier_prices\u0060 (\n  \u0060id\u0060 int NOT NULL AUTO_INCREMENT,\n  \u0060part_id\u0060 int DEFAULT NULL,\n  \u0060supplier_id\u0060 int DEFAULT NULL,\n  \u0060unit_price\u0060 decimal(10,2) DEFAULT NULL,\n  \u0060currency\u0060 varchar(10) DEFAULT NULL,\n  \u0060valid_until\u0060 date DEFAULT NULL,\n  \u0060created_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP,\n  \u0060updated_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n  \u0060part\u0060 varchar(255) DEFAULT NULL,\n  \u0060supplier\u0060 varchar(255) DEFAULT NULL,\n  \u0060supplier_name\u0060 varchar(255) DEFAULT NULL,\n  \u0060vat_percent\u0060 decimal(10,2) DEFAULT NULL,\n  \u0060price_with_vat\u0060 decimal(10,2) DEFAULT NULL,\n  \u0060region\u0060 varchar(255) DEFAULT NULL,\n  \u0060discount_percent\u0060 decimal(10,2) DEFAULT NULL,\n  \u0060surcharge\u0060 decimal(10,2) DEFAULT NULL,\n  \u0060min_order_quantity\u0060 int DEFAULT NULL,\n  \u0060lead_time_days\u0060 int DEFAULT NULL,\n  \u0060valid_from\u0060 datetime DEFAULT NULL,\n  \u0060is_blocked\u0060 tinyint(1) DEFAULT NULL,\n  \u0060block_reason\u0060 varchar(255) DEFAULT NULL,\n  \u0060contract_document\u0060 varchar(255) DEFAULT NULL,\n  \u0060last_modified\u0060 datetime DEFAULT NULL,\n  \u0060last_modified_by_id\u0060 int DEFAULT NULL,\n  \u0060last_modified_by\u0060 varchar(255) DEFAULT NULL,\n  \u0060digital_signature\u0060 varchar(255) DEFAULT NULL,\n  \u0060source_ip\u0060 varchar(255) DEFAULT NULL,\n  \u0060anomaly_score\u0060 decimal(10,2) DEFAULT NULL,\n  \u0060note\u0060 varchar(255) DEFAULT NULL,\n  PRIMARY KEY (\u0060id\u0060),\n  KEY \u0060fk_psp_part\u0060 (\u0060part_id\u0060),\n  KEY \u0060fk_psp_supplier\u0060 (\u0060supplier_id\u0060),\n  CONSTRAINT \u0060fk_psp_part\u0060 FOREIGN KEY (\u0060part_id\u0060) REFERENCES \u0060parts\u0060 (\u0060id\u0060),\n  CONSTRAINT \u0060fk_psp_supplier\u0060 FOREIGN KEY (\u0060supplier_id\u0060) REFERENCES \u0060suppliers\u0060 (\u0060id\u0060)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci"
.\tools\schema\snapshots\schema.json:14224:      "CreateSql": "CREATE TABLE \u0060parts\u0060 (\n  \u0060id\u0060 int NOT NULL AUTO_INCREMENT,\n  \u0060code\u0060 varchar(50) DEFAULT NULL,\n  \u0060name\u0060 varchar(100) DEFAULT NULL,\n  \u0060default_supplier_id\u0060 int DEFAULT NULL,\n  \u0060description\u0060 text,\n  \u0060status\u0060 enum(\u0027active\u0027,\u0027obsolete\u0027,\u0027reorder\u0027) DEFAULT \u0027active\u0027,\n  \u0060created_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP,\n  \u0060updated_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n  \u0060category\u0060 varchar(255) DEFAULT NULL,\n  \u0060barcode\u0060 varchar(255) DEFAULT NULL,\n  \u0060rfid\u0060 varchar(255) DEFAULT NULL,\n  \u0060serial_or_lot\u0060 varchar(255) DEFAULT NULL,\n  \u0060default_supplier\u0060 varchar(255) DEFAULT NULL,\n  \u0060supplier_prices\u0060 varchar(255) DEFAULT NULL,\n  \u0060price\u0060 decimal(10,2) DEFAULT NULL,\n  \u0060stock\u0060 int DEFAULT NULL,\n  \u0060min_stock_alert\u0060 int DEFAULT NULL,\n  \u0060warehouse_stocks\u0060 varchar(255) DEFAULT NULL,\n  \u0060stock_history\u0060 varchar(255) DEFAULT NULL,\n  \u0060location\u0060 varchar(255) DEFAULT NULL,\n  \u0060image\u0060 varchar(255) DEFAULT NULL,\n  \u0060images\u0060 varchar(255) DEFAULT NULL,\n  \u0060documents\u0060 varchar(255) DEFAULT NULL,\n  \u0060warranty_until\u0060 datetime DEFAULT NULL,\n  \u0060expiry_date\u0060 datetime DEFAULT NULL,\n  \u0060blocked\u0060 tinyint(1) DEFAULT NULL,\n  \u0060regulatory_certificates\u0060 varchar(255) DEFAULT NULL,\n  \u0060digital_signature\u0060 varchar(255) DEFAULT NULL,\n  \u0060last_modified\u0060 datetime DEFAULT NULL,\n  \u0060last_modified_by_id\u0060 int DEFAULT NULL,\n  \u0060last_modified_by\u0060 varchar(255) DEFAULT NULL,\n  \u0060source_ip\u0060 varchar(255) DEFAULT NULL,\n  \u0060change_logs\u0060 varchar(255) DEFAULT NULL,\n  \u0060work_order_parts\u0060 varchar(255) DEFAULT NULL,\n  \u0060warehouses\u0060 varchar(255) DEFAULT NULL,\n  \u0060note\u0060 varchar(255) DEFAULT NULL,\n  \u0060anomaly_score\u0060 decimal(10,2) DEFAULT NULL,\n  \u0060supplier\u0060 varchar(255) DEFAULT NULL,\n  PRIMARY KEY (\u0060id\u0060),\n  UNIQUE KEY \u0060code\u0060 (\u0060code\u0060),\n  KEY \u0060fk_p_supplier\u0060 (\u0060default_supplier_id\u0060),\n  CONSTRAINT \u0060fk_p_supplier\u0060 FOREIGN KEY (\u0060default_supplier_id\u0060) REFERENCES \u0060suppliers\u0060 (\u0060id\u0060)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci"
.\tools\schema\snapshots\schema.json:14488:      "CreateSql": "CREATE TABLE \u0060permission_change_log\u0060 (\n  \u0060id\u0060 int NOT NULL AUTO_INCREMENT,\n  \u0060user_id\u0060 int NOT NULL,\n  \u0060changed_by\u0060 int NOT NULL,\n  \u0060change_type\u0060 enum(\u0027role\u0027,\u0027permission\u0027,\u0027delegation\u0027,\u0027override\u0027) NOT NULL,\n  \u0060role_id\u0060 int DEFAULT NULL,\n  \u0060permission_id\u0060 int DEFAULT NULL,\n  \u0060action\u0060 enum(\u0027grant\u0027,\u0027revoke\u0027,\u0027deny\u0027,\u0027expire\u0027,\u0027delegate\u0027,\u0027escalate\u0027) NOT NULL,\n  \u0060reason\u0060 varchar(255) DEFAULT NULL,\n  \u0060change_time\u0060 datetime DEFAULT CURRENT_TIMESTAMP,\n  \u0060expires_at\u0060 datetime DEFAULT NULL,\n  \u0060source_ip\u0060 varchar(45) DEFAULT NULL,\n  \u0060session_id\u0060 varchar(100) DEFAULT NULL,\n  \u0060details\u0060 text,\n  \u0060created_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP,\n  \u0060updated_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n  PRIMARY KEY (\u0060id\u0060),\n  KEY \u0060fk_pcl_user\u0060 (\u0060user_id\u0060),\n  KEY \u0060fk_pcl_changed_by\u0060 (\u0060changed_by\u0060),\n  KEY \u0060fk_pcl_role\u0060 (\u0060role_id\u0060),\n  KEY \u0060fk_pcl_perm\u0060 (\u0060permission_id\u0060),\n  CONSTRAINT \u0060fk_pcl_changed_by\u0060 FOREIGN KEY (\u0060changed_by\u0060) REFERENCES \u0060users\u0060 (\u0060id\u0060),\n  CONSTRAINT \u0060fk_pcl_perm\u0060 FOREIGN KEY (\u0060permission_id\u0060) REFERENCES \u0060permissions\u0060 (\u0060id\u0060),\n  CONSTRAINT \u0060fk_pcl_role\u0060 FOREIGN KEY (\u0060role_id\u0060) REFERENCES \u0060roles\u0060 (\u0060id\u0060),\n  CONSTRAINT \u0060fk_pcl_user\u0060 FOREIGN KEY (\u0060user_id\u0060) REFERENCES \u0060users\u0060 (\u0060id\u0060)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci"
.\tools\schema\snapshots\schema.json:14690:      "CreateSql": "CREATE TABLE \u0060permission_requests\u0060 (\n  \u0060id\u0060 int NOT NULL AUTO_INCREMENT,\n  \u0060user_id\u0060 int NOT NULL,\n  \u0060permission_id\u0060 int NOT NULL,\n  \u0060requested_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP,\n  \u0060reason\u0060 varchar(255) DEFAULT NULL,\n  \u0060status\u0060 enum(\u0027pending\u0027,\u0027approved\u0027,\u0027denied\u0027,\u0027expired\u0027) DEFAULT \u0027pending\u0027,\n  \u0060reviewed_by\u0060 int DEFAULT NULL,\n  \u0060reviewed_at\u0060 datetime DEFAULT NULL,\n  \u0060review_comment\u0060 varchar(255) DEFAULT NULL,\n  \u0060created_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP,\n  \u0060updated_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n  PRIMARY KEY (\u0060id\u0060),\n  KEY \u0060fk_pr_user\u0060 (\u0060user_id\u0060),\n  KEY \u0060fk_pr_perm\u0060 (\u0060permission_id\u0060),\n  KEY \u0060fk_pr_by\u0060 (\u0060reviewed_by\u0060),\n  CONSTRAINT \u0060fk_pr_by\u0060 FOREIGN KEY (\u0060reviewed_by\u0060) REFERENCES \u0060users\u0060 (\u0060id\u0060),\n  CONSTRAINT \u0060fk_pr_perm\u0060 FOREIGN KEY (\u0060permission_id\u0060) REFERENCES \u0060permissions\u0060 (\u0060id\u0060),\n  CONSTRAINT \u0060fk_pr_user\u0060 FOREIGN KEY (\u0060user_id\u0060) REFERENCES \u0060users\u0060 (\u0060id\u0060)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci"
.\tools\schema\snapshots\schema.json:15027:      "CreateSql": "CREATE TABLE \u0060permissions\u0060 (\n  \u0060id\u0060 int NOT NULL AUTO_INCREMENT,\n  \u0060code\u0060 varchar(100) NOT NULL,\n  \u0060description\u0060 varchar(255) DEFAULT NULL,\n  \u0060module\u0060 varchar(100) DEFAULT NULL,\n  \u0060critical\u0060 tinyint(1) DEFAULT \u00270\u0027,\n  \u0060created_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP,\n  \u0060updated_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n  \u0060permission_type\u0060 varchar(255) DEFAULT NULL,\n  \u0060name\u0060 varchar(120) DEFAULT NULL,\n  \u0060group\u0060 varchar(80) DEFAULT NULL,\n  \u0060parent_id\u0060 int DEFAULT NULL,\n  \u0060permission?\u0060 varchar(255) DEFAULT NULL,\n  \u0060icollection\u003Cpermission\u003E\u0060 varchar(255) DEFAULT NULL,\n  \u0060compliance_tags\u0060 varchar(120) DEFAULT NULL,\n  \u0060created_by\u0060 int DEFAULT NULL,\n  \u0060user?\u0060 varchar(255) DEFAULT NULL,\n  \u0060last_modified\u0060 datetime DEFAULT NULL,\n  \u0060last_modified_by_id\u0060 int DEFAULT NULL,\n  \u0060digital_signature\u0060 varchar(128) DEFAULT NULL,\n  \u0060change_version\u0060 int DEFAULT NULL,\n  \u0060is_deleted\u0060 tinyint(1) DEFAULT NULL,\n  \u0060note\u0060 varchar(512) DEFAULT NULL,\n  \u0060icollection\u003Crole\u003E\u0060 varchar(255) DEFAULT NULL,\n  \u0060icollection\u003Cuser\u003E\u0060 varchar(255) DEFAULT NULL,\n  \u0060icollection\u003Crole_permission\u003E\u0060 varchar(255) DEFAULT NULL,\n  \u0060icollection\u003Cuser_permission\u003E\u0060 varchar(255) DEFAULT NULL,\n  \u0060icollection\u003Cdelegated_permission\u003E\u0060 varchar(255) DEFAULT NULL,\n  \u0060string\u0060 varchar(255) DEFAULT NULL,\n  PRIMARY KEY (\u0060id\u0060),\n  UNIQUE KEY \u0060code\u0060 (\u0060code\u0060)\n) ENGINE=InnoDB AUTO_INCREMENT=5 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci"
.\tools\schema\snapshots\schema.json:15241:      "CreateSql": "CREATE TABLE \u0060photos\u0060 (\n  \u0060id\u0060 int NOT NULL AUTO_INCREMENT,\n  \u0060work_order_id\u0060 int DEFAULT NULL,\n  \u0060component_id\u0060 int DEFAULT NULL,\n  \u0060file_name\u0060 varchar(255) DEFAULT NULL,\n  \u0060file_path\u0060 varchar(255) DEFAULT NULL,\n  \u0060type\u0060 enum(\u0027prije\u0027,\u0027poslije\u0027,\u0027dokumentacija\u0027,\u0027drugo\u0027) DEFAULT \u0027dokumentacija\u0027,\n  \u0060uploaded_by\u0060 int DEFAULT NULL,\n  \u0060uploaded_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP,\n  \u0060watermark_applied\u0060 tinyint(1) DEFAULT \u00270\u0027,\n  \u0060note\u0060 text,\n  \u0060created_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP,\n  \u0060updated_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n  PRIMARY KEY (\u0060id\u0060),\n  KEY \u0060fk_ph_wo\u0060 (\u0060work_order_id\u0060),\n  KEY \u0060fk_ph_component\u0060 (\u0060component_id\u0060),\n  KEY \u0060fk_ph_user\u0060 (\u0060uploaded_by\u0060),\n  CONSTRAINT \u0060fk_ph_component\u0060 FOREIGN KEY (\u0060component_id\u0060) REFERENCES \u0060machine_components\u0060 (\u0060id\u0060) ON DELETE CASCADE,\n  CONSTRAINT \u0060fk_ph_user\u0060 FOREIGN KEY (\u0060uploaded_by\u0060) REFERENCES \u0060users\u0060 (\u0060id\u0060) ON DELETE SET NULL,\n  CONSTRAINT \u0060fk_ph_wo\u0060 FOREIGN KEY (\u0060work_order_id\u0060) REFERENCES \u0060work_orders\u0060 (\u0060id\u0060) ON DELETE CASCADE\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci"
.\tools\schema\snapshots\schema.json:15394:      "CreateSql": "CREATE TABLE \u0060ppm_plans\u0060 (\n  \u0060id\u0060 int NOT NULL AUTO_INCREMENT,\n  \u0060machine_id\u0060 int NOT NULL,\n  \u0060title\u0060 varchar(200) NOT NULL,\n  \u0060plan_json\u0060 json DEFAULT NULL,\n  \u0060effective_from\u0060 date DEFAULT NULL,\n  \u0060effective_to\u0060 date DEFAULT NULL,\n  \u0060status\u0060 varchar(30) NOT NULL DEFAULT \u0027active\u0027,\n  \u0060created_at\u0060 datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,\n  \u0060last_modified\u0060 datetime NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n  \u0060updated_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n  PRIMARY KEY (\u0060id\u0060),\n  KEY \u0060fk_ppm_plans_machine\u0060 (\u0060machine_id\u0060),\n  CONSTRAINT \u0060fk_ppm_plans_machine\u0060 FOREIGN KEY (\u0060machine_id\u0060) REFERENCES \u0060machines\u0060 (\u0060id\u0060) ON DELETE CASCADE ON UPDATE CASCADE\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci"
.\tools\schema\snapshots\schema.json:15917:      "CreateSql": "CREATE TABLE \u0060preventive_maintenance_plans\u0060 (\n  \u0060id\u0060 int NOT NULL AUTO_INCREMENT,\n  \u0060code\u0060 varchar(50) DEFAULT NULL,\n  \u0060name\u0060 varchar(100) DEFAULT NULL,\n  \u0060description\u0060 text,\n  \u0060machine_id\u0060 int DEFAULT NULL,\n  \u0060component_id\u0060 int DEFAULT NULL,\n  \u0060frequency\u0060 varchar(40) DEFAULT NULL,\n  \u0060checklist_file\u0060 varchar(255) DEFAULT NULL,\n  \u0060responsible_user_id\u0060 int DEFAULT NULL,\n  \u0060last_executed\u0060 date DEFAULT NULL,\n  \u0060next_due\u0060 date DEFAULT NULL,\n  \u0060status\u0060 varchar(40) DEFAULT NULL,\n  \u0060digital_signature\u0060 varchar(128) DEFAULT NULL,\n  \u0060created_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP,\n  \u0060updated_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n  \u0060checklist_template_id\u0060 int DEFAULT NULL,\n  \u0060machine\u0060 varchar(255) DEFAULT NULL,\n  \u0060component\u0060 varchar(255) DEFAULT NULL,\n  \u0060responsible_user\u0060 varchar(255) DEFAULT NULL,\n  \u0060execution_history\u0060 varchar(255) DEFAULT NULL,\n  \u0060risk_score\u0060 decimal(10,2) DEFAULT NULL,\n  \u0060ai_recommendation\u0060 varchar(2048) DEFAULT NULL,\n  \u0060last_modified\u0060 datetime DEFAULT NULL,\n  \u0060last_modified_by_id\u0060 int DEFAULT NULL,\n  \u0060last_modified_by\u0060 varchar(255) DEFAULT NULL,\n  \u0060source_ip\u0060 varchar(45) DEFAULT NULL,\n  \u0060session_id\u0060 varchar(80) DEFAULT NULL,\n  \u0060geo_location\u0060 varchar(100) DEFAULT NULL,\n  \u0060attachments\u0060 varchar(255) DEFAULT NULL,\n  \u0060version\u0060 int DEFAULT NULL,\n  \u0060previous_version_id\u0060 int DEFAULT NULL,\n  \u0060previous_version\u0060 varchar(255) DEFAULT NULL,\n  \u0060is_active_version\u0060 tinyint(1) DEFAULT NULL,\n  \u0060linked_work_orders\u0060 varchar(255) DEFAULT NULL,\n  \u0060is_automated\u0060 tinyint(1) DEFAULT NULL,\n  \u0060requires_notification\u0060 tinyint(1) DEFAULT NULL,\n  \u0060anomaly_score\u0060 decimal(10,2) DEFAULT NULL,\n  \u0060note\u0060 varchar(512) DEFAULT NULL,\n  PRIMARY KEY (\u0060id\u0060),\n  UNIQUE KEY \u0060code\u0060 (\u0060code\u0060),\n  KEY \u0060fk_pmp_machine\u0060 (\u0060machine_id\u0060),\n  KEY \u0060fk_pmp_component\u0060 (\u0060component_id\u0060),\n  KEY \u0060fk_pmp_responsible\u0060 (\u0060responsible_user_id\u0060),\n  KEY \u0060fk_pmp_tpl\u0060 (\u0060checklist_template_id\u0060),\n  CONSTRAINT \u0060fk_pmp_component\u0060 FOREIGN KEY (\u0060component_id\u0060) REFERENCES \u0060machine_components\u0060 (\u0060id\u0060),\n  CONSTRAINT \u0060fk_pmp_machine\u0060 FOREIGN KEY (\u0060machine_id\u0060) REFERENCES \u0060machines\u0060 (\u0060id\u0060),\n  CONSTRAINT \u0060fk_pmp_responsible\u0060 FOREIGN KEY (\u0060responsible_user_id\u0060) REFERENCES \u0060users\u0060 (\u0060id\u0060),\n  CONSTRAINT \u0060fk_pmp_tpl\u0060 FOREIGN KEY (\u0060checklist_template_id\u0060) REFERENCES \u0060checklist_templates\u0060 (\u0060id\u0060) ON DELETE SET NULL\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci"
.\tools\schema\snapshots\schema.json:16257:      "CreateSql": "CREATE TABLE \u0060quality_events\u0060 (\n  \u0060id\u0060 int NOT NULL AUTO_INCREMENT,\n  \u0060event_type\u0060 enum(\u0027deviation\u0027,\u0027complaint\u0027,\u0027recall\u0027,\u0027out_of_spec\u0027,\u0027change_control\u0027,\u0027audit\u0027,\u0027training\u0027) DEFAULT NULL,\n  \u0060date_open\u0060 date DEFAULT NULL,\n  \u0060date_close\u0060 date DEFAULT NULL,\n  \u0060description\u0060 text,\n  \u0060related_machine\u0060 int DEFAULT NULL,\n  \u0060related_component\u0060 int DEFAULT NULL,\n  \u0060status\u0060 enum(\u0027open\u0027,\u0027closed\u0027,\u0027under_review\u0027) DEFAULT NULL,\n  \u0060actions\u0060 text,\n  \u0060doc_file\u0060 varchar(255) DEFAULT NULL,\n  \u0060created_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP,\n  \u0060updated_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n  \u0060type_id\u0060 int DEFAULT NULL,\n  \u0060status_id\u0060 int DEFAULT NULL,\n  \u0060related_machine_id\u0060 int DEFAULT NULL,\n  \u0060related_component_id\u0060 int DEFAULT NULL,\n  \u0060digital_signature\u0060 varchar(128) DEFAULT NULL,\n  \u0060created_by_id\u0060 int DEFAULT NULL,\n  \u0060created_by\u0060 varchar(255) DEFAULT NULL,\n  \u0060last_modified_by_id\u0060 int DEFAULT NULL,\n  \u0060last_modified_by\u0060 varchar(255) DEFAULT NULL,\n  \u0060last_modified\u0060 datetime DEFAULT NULL,\n  PRIMARY KEY (\u0060id\u0060),\n  KEY \u0060fk_qe_machine\u0060 (\u0060related_machine\u0060),\n  KEY \u0060fk_qe_component\u0060 (\u0060related_component\u0060),\n  KEY \u0060idx_qe_type_id\u0060 (\u0060type_id\u0060),\n  KEY \u0060idx_qe_status_id\u0060 (\u0060status_id\u0060),\n  CONSTRAINT \u0060fk_qe_component\u0060 FOREIGN KEY (\u0060related_component\u0060) REFERENCES \u0060machine_components\u0060 (\u0060id\u0060),\n  CONSTRAINT \u0060fk_qe_machine\u0060 FOREIGN KEY (\u0060related_machine\u0060) REFERENCES \u0060machines\u0060 (\u0060id\u0060),\n  CONSTRAINT \u0060fk_qe_status\u0060 FOREIGN KEY (\u0060status_id\u0060) REFERENCES \u0060ref_value\u0060 (\u0060id\u0060) ON DELETE SET NULL,\n  CONSTRAINT \u0060fk_qe_type\u0060 FOREIGN KEY (\u0060type_id\u0060) REFERENCES \u0060ref_value\u0060 (\u0060id\u0060) ON DELETE SET NULL\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci"
.\tools\schema\snapshots\schema.json:16340:      "CreateSql": "CREATE TABLE \u0060ref_domain\u0060 (\n  \u0060id\u0060 int NOT NULL AUTO_INCREMENT,\n  \u0060name\u0060 varchar(64) NOT NULL,\n  \u0060description\u0060 varchar(255) DEFAULT NULL,\n  \u0060created_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP,\n  \u0060updated_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n  PRIMARY KEY (\u0060id\u0060),\n  UNIQUE KEY \u0060uq_ref_domain_name\u0060 (\u0060name\u0060)\n) ENGINE=InnoDB AUTO_INCREMENT=6 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci"
.\tools\schema\snapshots\schema.json:16479:      "CreateSql": "CREATE TABLE \u0060ref_value\u0060 (\n  \u0060id\u0060 int NOT NULL AUTO_INCREMENT,\n  \u0060domain_id\u0060 int NOT NULL,\n  \u0060code\u0060 varchar(255) NOT NULL,\n  \u0060label\u0060 varchar(255) DEFAULT NULL,\n  \u0060is_active\u0060 tinyint(1) DEFAULT \u00271\u0027,\n  \u0060sort_order\u0060 int DEFAULT \u00270\u0027,\n  \u0060created_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP,\n  \u0060updated_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n  PRIMARY KEY (\u0060id\u0060),\n  UNIQUE KEY \u0060uq_ref_value_domain_code\u0060 (\u0060domain_id\u0060,\u0060code\u0060),\n  KEY \u0060ix_ref_value_domain\u0060 (\u0060domain_id\u0060),\n  CONSTRAINT \u0060fk_ref_value_domain\u0060 FOREIGN KEY (\u0060domain_id\u0060) REFERENCES \u0060ref_domain\u0060 (\u0060id\u0060) ON DELETE CASCADE ON UPDATE CASCADE\n) ENGINE=InnoDB AUTO_INCREMENT=5 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci"
.\tools\schema\snapshots\schema.json:16641:      "CreateSql": "CREATE TABLE \u0060report_schedule\u0060 (\n  \u0060id\u0060 int NOT NULL AUTO_INCREMENT,\n  \u0060report_name\u0060 varchar(100) DEFAULT NULL,\n  \u0060schedule_type\u0060 enum(\u0027daily\u0027,\u0027weekly\u0027,\u0027monthly\u0027,\u0027on_demand\u0027) DEFAULT NULL,\n  \u0060format\u0060 enum(\u0027pdf\u0027,\u0027excel\u0027,\u0027csv\u0027) DEFAULT NULL,\n  \u0060recipients\u0060 text,\n  \u0060last_generated\u0060 datetime DEFAULT NULL,\n  \u0060next_due\u0060 datetime DEFAULT NULL,\n  \u0060status\u0060 enum(\u0027planned\u0027,\u0027generated\u0027,\u0027failed\u0027) DEFAULT NULL,\n  \u0060generated_by\u0060 int DEFAULT NULL,\n  \u0060created_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP,\n  \u0060updated_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n  PRIMARY KEY (\u0060id\u0060),\n  KEY \u0060fk_rsch_user\u0060 (\u0060generated_by\u0060),\n  CONSTRAINT \u0060fk_rsch_user\u0060 FOREIGN KEY (\u0060generated_by\u0060) REFERENCES \u0060users\u0060 (\u0060id\u0060)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci"
.\tools\schema\snapshots\schema.json:16979:      "CreateSql": "CREATE TABLE \u0060requalification_schedule\u0060 (\n  \u0060id\u0060 int NOT NULL AUTO_INCREMENT,\n  \u0060component_id\u0060 int DEFAULT NULL,\n  \u0060last_qualified\u0060 date DEFAULT NULL,\n  \u0060next_due\u0060 date DEFAULT NULL,\n  \u0060method\u0060 varchar(255) DEFAULT NULL,\n  \u0060responsible\u0060 varchar(100) DEFAULT NULL,\n  \u0060notes\u0060 text,\n  \u0060created_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP,\n  \u0060updated_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n  \u0060component\u0060 varchar(255) DEFAULT NULL,\n  \u0060responsible_user_id\u0060 int DEFAULT NULL,\n  \u0060responsible_user\u0060 varchar(255) DEFAULT NULL,\n  \u0060protocol_file\u0060 varchar(255) DEFAULT NULL,\n  \u0060status\u0060 varchar(30) DEFAULT NULL,\n  \u0060digital_signature\u0060 varchar(128) DEFAULT NULL,\n  \u0060last_modified\u0060 datetime DEFAULT NULL,\n  \u0060last_modified_by_id\u0060 int DEFAULT NULL,\n  \u0060last_modified_by\u0060 varchar(255) DEFAULT NULL,\n  \u0060source_ip\u0060 varchar(64) DEFAULT NULL,\n  \u0060session_id\u0060 varchar(100) DEFAULT NULL,\n  \u0060geo_location\u0060 varchar(128) DEFAULT NULL,\n  \u0060attachments_json\u0060 varchar(255) DEFAULT NULL,\n  \u0060regulator\u0060 varchar(40) DEFAULT NULL,\n  \u0060anomaly_score\u0060 decimal(10,2) DEFAULT NULL,\n  \u0060analytics_json\u0060 varchar(2048) DEFAULT NULL,\n  \u0060related_case_id\u0060 int DEFAULT NULL,\n  \u0060related_case_type\u0060 varchar(40) DEFAULT NULL,\n  PRIMARY KEY (\u0060id\u0060),\n  KEY \u0060fk_requal_component\u0060 (\u0060component_id\u0060),\n  CONSTRAINT \u0060fk_requal_component\u0060 FOREIGN KEY (\u0060component_id\u0060) REFERENCES \u0060machine_components\u0060 (\u0060id\u0060)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci"
.\tools\schema\snapshots\schema.json:17130:      "CreateSql": "CREATE TABLE \u0060role_audit\u0060 (\n  \u0060id\u0060 int NOT NULL AUTO_INCREMENT,\n  \u0060role_id\u0060 int DEFAULT NULL,\n  \u0060action\u0060 varchar(40) NOT NULL,\n  \u0060description\u0060 text,\n  \u0060created_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP,\n  \u0060source_ip\u0060 varchar(45) DEFAULT NULL,\n  \u0060device_info\u0060 varchar(255) DEFAULT NULL,\n  \u0060session_id\u0060 varchar(100) DEFAULT NULL,\n  \u0060updated_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n  \u0060details\u0060 text GENERATED ALWAYS AS (\u0060description\u0060) VIRTUAL,\n  PRIMARY KEY (\u0060id\u0060),\n  KEY \u0060fk_ra_role\u0060 (\u0060role_id\u0060),\n  CONSTRAINT \u0060fk_ra_role\u0060 FOREIGN KEY (\u0060role_id\u0060) REFERENCES \u0060roles\u0060 (\u0060id\u0060) ON DELETE SET NULL\n) ENGINE=InnoDB AUTO_INCREMENT=7 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci"
.\tools\schema\snapshots\schema.json:17415:      "CreateSql": "CREATE TABLE \u0060role_permissions\u0060 (\n  \u0060role_id\u0060 int NOT NULL,\n  \u0060permission_id\u0060 int NOT NULL,\n  \u0060allowed\u0060 tinyint(1) DEFAULT \u00271\u0027,\n  \u0060created_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP,\n  \u0060updated_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n  \u0060assigned_by_id\u0060 int DEFAULT NULL,\n  \u0060assigned_at\u0060 datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,\n  \u0060change_version\u0060 int DEFAULT \u00271\u0027,\n  \u0060role?\u0060 varchar(255) DEFAULT NULL,\n  \u0060permission?\u0060 varchar(255) DEFAULT NULL,\n  \u0060assigned_by\u0060 int DEFAULT NULL,\n  \u0060user?\u0060 varchar(255) DEFAULT NULL,\n  \u0060expires_at\u0060 datetime DEFAULT NULL,\n  \u0060reason\u0060 varchar(255) DEFAULT NULL,\n  \u0060is_active\u0060 tinyint(1) DEFAULT NULL,\n  \u0060digital_signature\u0060 varchar(128) DEFAULT NULL,\n  \u0060session_id\u0060 varchar(64) DEFAULT NULL,\n  \u0060source_ip\u0060 varchar(64) DEFAULT NULL,\n  \u0060note\u0060 varchar(512) DEFAULT NULL,\n  PRIMARY KEY (\u0060role_id\u0060,\u0060permission_id\u0060),\n  KEY \u0060fk_rp_perm\u0060 (\u0060permission_id\u0060),\n  KEY \u0060fk_rp_assigned_by_id\u0060 (\u0060assigned_by_id\u0060),\n  CONSTRAINT \u0060fk_rp_assigned_by_id\u0060 FOREIGN KEY (\u0060assigned_by_id\u0060) REFERENCES \u0060users\u0060 (\u0060id\u0060) ON DELETE SET NULL,\n  CONSTRAINT \u0060fk_rp_perm\u0060 FOREIGN KEY (\u0060permission_id\u0060) REFERENCES \u0060permissions\u0060 (\u0060id\u0060) ON DELETE CASCADE,\n  CONSTRAINT \u0060fk_rp_role\u0060 FOREIGN KEY (\u0060role_id\u0060) REFERENCES \u0060roles\u0060 (\u0060id\u0060) ON DELETE CASCADE\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci"
.\tools\schema\snapshots\schema.json:17660:      "CreateSql": "CREATE TABLE \u0060roles\u0060 (\n  \u0060id\u0060 int NOT NULL AUTO_INCREMENT,\n  \u0060name\u0060 varchar(50) NOT NULL,\n  \u0060description\u0060 varchar(255) DEFAULT NULL,\n  \u0060org_unit\u0060 varchar(80) DEFAULT NULL,\n  \u0060compliance_tags\u0060 varchar(120) DEFAULT NULL,\n  \u0060is_deleted\u0060 tinyint(1) NOT NULL DEFAULT \u00270\u0027,\n  \u0060notes\u0060 varchar(512) DEFAULT NULL,\n  \u0060created_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP,\n  \u0060updated_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n  \u0060created_by_id\u0060 int DEFAULT NULL,\n  \u0060last_modified_by_id\u0060 int DEFAULT NULL,\n  \u0060version\u0060 int NOT NULL DEFAULT \u00271\u0027,\n  \u0060icollection\u003Cpermission\u003E\u0060 varchar(255) DEFAULT NULL,\n  \u0060icollection\u003Cuser\u003E\u0060 varchar(255) DEFAULT NULL,\n  \u0060icollection\u003Crole_permission\u003E\u0060 varchar(255) DEFAULT NULL,\n  \u0060user?\u0060 varchar(255) DEFAULT NULL,\n  PRIMARY KEY (\u0060id\u0060),\n  UNIQUE KEY \u0060name\u0060 (\u0060name\u0060),\n  KEY \u0060fk_roles_created_by\u0060 (\u0060created_by_id\u0060),\n  KEY \u0060fk_roles_last_modified_by\u0060 (\u0060last_modified_by_id\u0060),\n  CONSTRAINT \u0060fk_roles_created_by\u0060 FOREIGN KEY (\u0060created_by_id\u0060) REFERENCES \u0060users\u0060 (\u0060id\u0060) ON DELETE SET NULL,\n  CONSTRAINT \u0060fk_roles_last_modified_by\u0060 FOREIGN KEY (\u0060last_modified_by_id\u0060) REFERENCES \u0060users\u0060 (\u0060id\u0060) ON DELETE SET NULL\n) ENGINE=InnoDB AUTO_INCREMENT=18 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci"
.\tools\schema\snapshots\schema.json:17779:      "CreateSql": "CREATE TABLE \u0060rooms\u0060 (\n  \u0060id\u0060 int NOT NULL AUTO_INCREMENT,\n  \u0060building_id\u0060 int NOT NULL,\n  \u0060code\u0060 varchar(20) DEFAULT NULL,\n  \u0060name\u0060 varchar(100) DEFAULT NULL,\n  \u0060classification\u0060 enum(\u0027C\u0027,\u0027D\u0027,\u0027Not Classified\u0027) DEFAULT \u0027Not Classified\u0027,\n  \u0060created_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP,\n  \u0060updated_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n  PRIMARY KEY (\u0060id\u0060),\n  KEY \u0060fk_room_build\u0060 (\u0060building_id\u0060),\n  CONSTRAINT \u0060fk_room_build\u0060 FOREIGN KEY (\u0060building_id\u0060) REFERENCES \u0060buildings\u0060 (\u0060id\u0060)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci"
.\tools\schema\snapshots\schema.json:18016:      "CreateSql": "CREATE TABLE \u0060scheduled_job_audit_log\u0060 (\n  \u0060id\u0060 int NOT NULL AUTO_INCREMENT,\n  \u0060scheduled_job_id\u0060 int NOT NULL,\n  \u0060user_id\u0060 int DEFAULT NULL,\n  \u0060action\u0060 enum(\u0027CREATE\u0027,\u0027UPDATE\u0027,\u0027DELETE\u0027,\u0027EXECUTE\u0027,\u0027ACKNOWLEDGE\u0027,\u0027ESCALATE\u0027,\u0027FAIL\u0027,\u0027CANCEL\u0027,\u0027EXPORT\u0027) NOT NULL,\n  \u0060old_value\u0060 text,\n  \u0060new_value\u0060 text,\n  \u0060changed_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP,\n  \u0060source_ip\u0060 varchar(45) DEFAULT NULL,\n  \u0060device_info\u0060 varchar(255) DEFAULT NULL,\n  \u0060session_id\u0060 varchar(100) DEFAULT NULL,\n  \u0060digital_signature\u0060 varchar(255) DEFAULT NULL,\n  \u0060note\u0060 text,\n  \u0060created_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP,\n  \u0060updated_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n  \u0060timestamp\u0060 datetime GENERATED ALWAYS AS (\u0060changed_at\u0060) VIRTUAL,\n  \u0060details\u0060 text GENERATED ALWAYS AS (\u0060note\u0060) VIRTUAL,\n  PRIMARY KEY (\u0060id\u0060),\n  KEY \u0060fk_sjal_job\u0060 (\u0060scheduled_job_id\u0060),\n  KEY \u0060fk_sjal_user\u0060 (\u0060user_id\u0060),\n  CONSTRAINT \u0060fk_sjal_job\u0060 FOREIGN KEY (\u0060scheduled_job_id\u0060) REFERENCES \u0060scheduled_jobs\u0060 (\u0060id\u0060) ON DELETE CASCADE,\n  CONSTRAINT \u0060fk_sjal_user\u0060 FOREIGN KEY (\u0060user_id\u0060) REFERENCES \u0060users\u0060 (\u0060id\u0060) ON DELETE SET NULL\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci"
.\tools\schema\snapshots\schema.json:18528:      "CreateSql": "CREATE TABLE \u0060scheduled_jobs\u0060 (\n  \u0060id\u0060 int NOT NULL AUTO_INCREMENT,\n  \u0060name\u0060 varchar(100) NOT NULL,\n  \u0060job_type\u0060 varchar(40) NOT NULL,\n  \u0060entity_type\u0060 varchar(40) DEFAULT NULL,\n  \u0060entity_id\u0060 int DEFAULT NULL,\n  \u0060status\u0060 enum(\u0027scheduled\u0027,\u0027in_progress\u0027,\u0027pending_ack\u0027,\u0027overdue\u0027,\u0027completed\u0027,\u0027failed\u0027,\u0027canceled\u0027,\u0027escalated\u0027) DEFAULT \u0027scheduled\u0027,\n  \u0060next_due\u0060 datetime NOT NULL,\n  \u0060recurrence_pattern\u0060 varchar(100) DEFAULT NULL,\n  \u0060cron_expression\u0060 varchar(100) DEFAULT NULL,\n  \u0060last_executed\u0060 datetime DEFAULT NULL,\n  \u0060last_result\u0060 varchar(255) DEFAULT NULL,\n  \u0060escalation_level\u0060 int DEFAULT \u00270\u0027,\n  \u0060escalation_note\u0060 varchar(255) DEFAULT NULL,\n  \u0060chain_job_id\u0060 int DEFAULT NULL,\n  \u0060is_critical\u0060 tinyint(1) DEFAULT \u00270\u0027,\n  \u0060needs_acknowledgment\u0060 tinyint(1) DEFAULT \u00270\u0027,\n  \u0060acknowledged_by\u0060 int DEFAULT NULL,\n  \u0060acknowledged_at\u0060 datetime DEFAULT NULL,\n  \u0060alert_on_failure\u0060 tinyint(1) DEFAULT \u00271\u0027,\n  \u0060retries\u0060 int DEFAULT \u00270\u0027,\n  \u0060max_retries\u0060 int DEFAULT \u00273\u0027,\n  \u0060last_error\u0060 text,\n  \u0060iot_device_id\u0060 varchar(80) DEFAULT NULL,\n  \u0060extra_params\u0060 json DEFAULT NULL,\n  \u0060created_by\u0060 int DEFAULT NULL,\n  \u0060created_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP,\n  \u0060last_modified\u0060 datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n  \u0060last_modified_by\u0060 int DEFAULT NULL,\n  \u0060digital_signature\u0060 varchar(255) DEFAULT NULL,\n  \u0060device_info\u0060 varchar(255) DEFAULT NULL,\n  \u0060session_id\u0060 varchar(100) DEFAULT NULL,\n  \u0060ip_address\u0060 varchar(45) DEFAULT NULL,\n  \u0060comment\u0060 text,\n  \u0060updated_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n  \u0060last_modified_at\u0060 datetime DEFAULT NULL,\n  PRIMARY KEY (\u0060id\u0060),\n  KEY \u0060fk_sj_created_by\u0060 (\u0060created_by\u0060),\n  KEY \u0060fk_sj_last_modified_by\u0060 (\u0060last_modified_by\u0060),\n  KEY \u0060fk_sj_ack_by\u0060 (\u0060acknowledged_by\u0060),\n  KEY \u0060fk_sj_chain\u0060 (\u0060chain_job_id\u0060),\n  KEY \u0060idx_scheduled_jobs_next_due\u0060 (\u0060next_due\u0060),\n  KEY \u0060idx_scheduled_jobs_status\u0060 (\u0060status\u0060),\n  KEY \u0060idx_scheduled_jobs_job_type\u0060 (\u0060job_type\u0060),\n  CONSTRAINT \u0060fk_sj_ack_by\u0060 FOREIGN KEY (\u0060acknowledged_by\u0060) REFERENCES \u0060users\u0060 (\u0060id\u0060) ON DELETE SET NULL,\n  CONSTRAINT \u0060fk_sj_chain\u0060 FOREIGN KEY (\u0060chain_job_id\u0060) REFERENCES \u0060scheduled_jobs\u0060 (\u0060id\u0060) ON DELETE SET NULL,\n  CONSTRAINT \u0060fk_sj_created_by\u0060 FOREIGN KEY (\u0060created_by\u0060) REFERENCES \u0060users\u0060 (\u0060id\u0060) ON DELETE SET NULL,\n  CONSTRAINT \u0060fk_sj_last_modified_by\u0060 FOREIGN KEY (\u0060last_modified_by\u0060) REFERENCES \u0060users\u0060 (\u0060id\u0060) ON DELETE SET NULL\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci"
.\tools\schema\snapshots\schema.json:18813:      "CreateSql": "CREATE TABLE \u0060schema_migration_log\u0060 (\n  \u0060id\u0060 int NOT NULL AUTO_INCREMENT,\n  \u0060migration_time\u0060 datetime DEFAULT CURRENT_TIMESTAMP,\n  \u0060migrated_by\u0060 int DEFAULT NULL,\n  \u0060schema_version\u0060 varchar(50) DEFAULT NULL,\n  \u0060migration_script\u0060 text,\n  \u0060description\u0060 text,\n  \u0060source_ip\u0060 varchar(45) DEFAULT NULL,\n  \u0060success\u0060 tinyint(1) DEFAULT \u00271\u0027,\n  \u0060error_message\u0060 text,\n  \u0060created_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP,\n  \u0060updated_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n  \u0060timestamp\u0060 datetime GENERATED ALWAYS AS (\u0060migration_time\u0060) VIRTUAL,\n  \u0060migrated_by_id\u0060 int DEFAULT NULL,\n  \u0060username\u0060 varchar(80) DEFAULT NULL,\n  \u0060rollback_script\u0060 varchar(255) DEFAULT NULL,\n  \u0060device_info\u0060 varchar(255) DEFAULT NULL,\n  \u0060digital_signature\u0060 varchar(128) DEFAULT NULL,\n  \u0060entry_hash\u0060 varchar(128) DEFAULT NULL,\n  \u0060attachments_json\u0060 varchar(255) DEFAULT NULL,\n  \u0060regulator\u0060 varchar(40) DEFAULT NULL,\n  \u0060anomaly_score\u0060 decimal(10,2) DEFAULT NULL,\n  \u0060note\u0060 varchar(1000) DEFAULT NULL,\n  PRIMARY KEY (\u0060id\u0060),\n  KEY \u0060fk_mig_user\u0060 (\u0060migrated_by\u0060),\n  CONSTRAINT \u0060fk_mig_user\u0060 FOREIGN KEY (\u0060migrated_by\u0060) REFERENCES \u0060users\u0060 (\u0060id\u0060) ON DELETE SET NULL\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci"
.\tools\schema\snapshots\schema.json:19204:      "CreateSql": "CREATE TABLE \u0060sensitive_data_access_log\u0060 (\n  \u0060id\u0060 int NOT NULL AUTO_INCREMENT,\n  \u0060user_id\u0060 int DEFAULT NULL,\n  \u0060access_time\u0060 datetime DEFAULT CURRENT_TIMESTAMP,\n  \u0060table_name\u0060 varchar(100) DEFAULT NULL,\n  \u0060record_id\u0060 int DEFAULT NULL,\n  \u0060field_name\u0060 varchar(100) DEFAULT NULL,\n  \u0060access_type\u0060 enum(\u0027view\u0027,\u0027export\u0027,\u0027print\u0027,\u0027api\u0027,\u0027edit\u0027,\u0027delete\u0027) DEFAULT NULL,\n  \u0060source_ip\u0060 varchar(45) DEFAULT NULL,\n  \u0060purpose\u0060 varchar(255) DEFAULT NULL,\n  \u0060approved_by\u0060 int DEFAULT NULL,\n  \u0060note\u0060 text,\n  \u0060created_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP,\n  \u0060updated_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n  \u0060accessed_at\u0060 datetime GENERATED ALWAYS AS (\u0060access_time\u0060) VIRTUAL,\n  \u0060timestamp\u0060 datetime GENERATED ALWAYS AS (\u0060access_time\u0060) VIRTUAL,\n  \u0060action\u0060 varchar(30) GENERATED ALWAYS AS (\u0060access_type\u0060) VIRTUAL,\n  \u0060details\u0060 text GENERATED ALWAYS AS (coalesce(\u0060purpose\u0060,\u0060note\u0060)) VIRTUAL,\n  \u0060user\u0060 varchar(255) DEFAULT NULL,\n  \u0060username\u0060 varchar(80) DEFAULT NULL,\n  \u0060device_info\u0060 varchar(255) DEFAULT NULL,\n  \u0060session_id\u0060 varchar(100) DEFAULT NULL,\n  \u0060approved_by_id\u0060 int DEFAULT NULL,\n  \u0060approver_name\u0060 varchar(100) DEFAULT NULL,\n  \u0060approved_at\u0060 datetime DEFAULT NULL,\n  \u0060approval_method\u0060 varchar(40) DEFAULT NULL,\n  \u0060digital_signature\u0060 varchar(128) DEFAULT NULL,\n  \u0060entry_hash\u0060 varchar(128) DEFAULT NULL,\n  \u0060geo_location\u0060 varchar(100) DEFAULT NULL,\n  \u0060severity\u0060 varchar(24) DEFAULT NULL,\n  \u0060anomaly_score\u0060 decimal(10,2) DEFAULT NULL,\n  PRIMARY KEY (\u0060id\u0060),\n  KEY \u0060fk_sdal_user\u0060 (\u0060user_id\u0060),\n  KEY \u0060fk_sdal_appr\u0060 (\u0060approved_by\u0060),\n  CONSTRAINT \u0060fk_sdal_appr\u0060 FOREIGN KEY (\u0060approved_by\u0060) REFERENCES \u0060users\u0060 (\u0060id\u0060) ON DELETE SET NULL,\n  CONSTRAINT \u0060fk_sdal_user\u0060 FOREIGN KEY (\u0060user_id\u0060) REFERENCES \u0060users\u0060 (\u0060id\u0060) ON DELETE SET NULL\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci"
.\tools\schema\snapshots\schema.json:19393:      "CreateSql": "CREATE TABLE \u0060sensor_data_logs\u0060 (\n  \u0060id\u0060 int NOT NULL AUTO_INCREMENT,\n  \u0060component_id\u0060 int DEFAULT NULL,\n  \u0060sensor_type\u0060 enum(\u0027temperatura\u0027,\u0027tlak\u0027,\u0027vlaga\u0027,\u0027protok\u0027) DEFAULT NULL,\n  \u0060value\u0060 decimal(10,2) DEFAULT NULL,\n  \u0060unit\u0060 varchar(10) DEFAULT NULL,\n  \u0060timestamp\u0060 datetime DEFAULT NULL,\n  \u0060created_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP,\n  \u0060updated_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n  \u0060unit_id\u0060 int DEFAULT NULL,\n  \u0060sensor_type_id\u0060 int DEFAULT NULL,\n  PRIMARY KEY (\u0060id\u0060),\n  KEY \u0060fk_sdl_component\u0060 (\u0060component_id\u0060),\n  KEY \u0060idx_sdl_sensor_type_id\u0060 (\u0060sensor_type_id\u0060),\n  KEY \u0060idx_sdl_unit_id\u0060 (\u0060unit_id\u0060),\n  CONSTRAINT \u0060fk_sdl_component\u0060 FOREIGN KEY (\u0060component_id\u0060) REFERENCES \u0060machine_components\u0060 (\u0060id\u0060),\n  CONSTRAINT \u0060fk_sdl_sensortype\u0060 FOREIGN KEY (\u0060sensor_type_id\u0060) REFERENCES \u0060ref_value\u0060 (\u0060id\u0060) ON DELETE SET NULL,\n  CONSTRAINT \u0060fk_sdl_unit\u0060 FOREIGN KEY (\u0060unit_id\u0060) REFERENCES \u0060units\u0060 (\u0060id\u0060) ON DELETE SET NULL\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci"
.\tools\schema\snapshots\schema.json:19499:      "CreateSql": "CREATE TABLE \u0060sensor_models\u0060 (\n  \u0060id\u0060 int NOT NULL AUTO_INCREMENT,\n  \u0060vendor\u0060 varchar(120) DEFAULT NULL,\n  \u0060model_code\u0060 varchar(100) DEFAULT NULL,\n  \u0060sensor_type_code\u0060 varchar(80) DEFAULT NULL,\n  \u0060unit_code\u0060 varchar(20) DEFAULT NULL,\n  \u0060created_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP,\n  \u0060updated_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n  PRIMARY KEY (\u0060id\u0060),\n  UNIQUE KEY \u0060ux_sensor_model\u0060 (\u0060vendor\u0060,\u0060model_code\u0060)\n) ENGINE=InnoDB AUTO_INCREMENT=33 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci"
.\tools\schema\snapshots\schema.json:19646:      "CreateSql": "CREATE TABLE \u0060sensor_types\u0060 (\n  \u0060id\u0060 int NOT NULL AUTO_INCREMENT,\n  \u0060code\u0060 varchar(20) DEFAULT NULL,\n  \u0060name\u0060 varchar(100) DEFAULT NULL,\n  \u0060default_unit_id\u0060 int DEFAULT NULL,\n  \u0060accuracy\u0060 decimal(6,3) DEFAULT NULL,\n  \u0060range_min\u0060 decimal(10,3) DEFAULT NULL,\n  \u0060range_max\u0060 decimal(10,3) DEFAULT NULL,\n  \u0060created_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP,\n  \u0060updated_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n  PRIMARY KEY (\u0060id\u0060),\n  UNIQUE KEY \u0060code\u0060 (\u0060code\u0060),\n  KEY \u0060fk_st_unit\u0060 (\u0060default_unit_id\u0060),\n  CONSTRAINT \u0060fk_st_unit\u0060 FOREIGN KEY (\u0060default_unit_id\u0060) REFERENCES \u0060measurement_units\u0060 (\u0060id\u0060)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci"
.\tools\schema\snapshots\schema.json:19984:      "CreateSql": "CREATE TABLE \u0060session_log\u0060 (\n  \u0060id\u0060 int NOT NULL AUTO_INCREMENT,\n  \u0060user_id\u0060 int NOT NULL,\n  \u0060session_token\u0060 varchar(128) NOT NULL,\n  \u0060login_time\u0060 datetime DEFAULT CURRENT_TIMESTAMP,\n  \u0060logout_time\u0060 datetime DEFAULT NULL,\n  \u0060ip_address\u0060 varchar(45) DEFAULT NULL,\n  \u0060device_info\u0060 varchar(255) DEFAULT NULL,\n  \u0060mfa_success\u0060 tinyint(1) DEFAULT \u00271\u0027,\n  \u0060reason\u0060 text,\n  \u0060is_terminated\u0060 tinyint(1) DEFAULT \u00270\u0027,\n  \u0060terminated_by\u0060 int DEFAULT NULL,\n  \u0060created_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP,\n  \u0060updated_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n  \u0060timestamp\u0060 datetime GENERATED ALWAYS AS (\u0060login_time\u0060) VIRTUAL,\n  \u0060action\u0060 varchar(20) GENERATED ALWAYS AS (if((\u0060is_terminated\u0060 = 1),_cp852\u0027TERMINATE\u0027,_cp852\u0027SESSION\u0027)) VIRTUAL,\n  \u0060details\u0060 text GENERATED ALWAYS AS (\u0060reason\u0060) VIRTUAL,\n  \u0060user\u0060 varchar(255) DEFAULT NULL,\n  \u0060session_id\u0060 varchar(100) DEFAULT NULL,\n  \u0060login_at\u0060 datetime DEFAULT NULL,\n  \u0060logout_at\u0060 datetime DEFAULT NULL,\n  \u0060is_impersonated\u0060 tinyint(1) DEFAULT NULL,\n  \u0060impersonated_by_id\u0060 int DEFAULT NULL,\n  \u0060impersonated_by\u0060 varchar(255) DEFAULT NULL,\n  \u0060is_temporary_escalation\u0060 tinyint(1) DEFAULT NULL,\n  \u0060note\u0060 varchar(400) DEFAULT NULL,\n  PRIMARY KEY (\u0060id\u0060),\n  KEY \u0060fk_sl_user\u0060 (\u0060user_id\u0060),\n  KEY \u0060fk_sl_by\u0060 (\u0060terminated_by\u0060),\n  CONSTRAINT \u0060fk_sl_by\u0060 FOREIGN KEY (\u0060terminated_by\u0060) REFERENCES \u0060users\u0060 (\u0060id\u0060),\n  CONSTRAINT \u0060fk_sl_user\u0060 FOREIGN KEY (\u0060user_id\u0060) REFERENCES \u0060users\u0060 (\u0060id\u0060) ON DELETE CASCADE\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci"
.\tools\schema\snapshots\schema.json:20079:      "CreateSql": "CREATE TABLE \u0060sites\u0060 (\n  \u0060id\u0060 int NOT NULL AUTO_INCREMENT,\n  \u0060code\u0060 varchar(20) DEFAULT NULL,\n  \u0060name\u0060 varchar(100) DEFAULT NULL,\n  \u0060timezone\u0060 varchar(40) DEFAULT \u0027Europe/Zagreb\u0027,\n  \u0060created_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP,\n  \u0060updated_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n  PRIMARY KEY (\u0060id\u0060),\n  UNIQUE KEY \u0060code\u0060 (\u0060code\u0060)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci"
.\tools\schema\snapshots\schema.json:20228:      "CreateSql": "CREATE TABLE \u0060sop_document_log\u0060 (\n  \u0060id\u0060 int NOT NULL AUTO_INCREMENT,\n  \u0060sop_document_id\u0060 int DEFAULT NULL,\n  \u0060action\u0060 enum(\u0027create\u0027,\u0027update\u0027,\u0027archive\u0027,\u0027approve\u0027,\u0027invalidate\u0027,\u0027review\u0027,\u0027new_version\u0027) DEFAULT NULL,\n  \u0060performed_by\u0060 int DEFAULT NULL,\n  \u0060performed_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP,\n  \u0060note\u0060 text,\n  \u0060created_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP,\n  \u0060updated_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n  PRIMARY KEY (\u0060id\u0060),\n  KEY \u0060fk_soplog_doc\u0060 (\u0060sop_document_id\u0060),\n  KEY \u0060fk_soplog_user\u0060 (\u0060performed_by\u0060),\n  CONSTRAINT \u0060fk_soplog_doc\u0060 FOREIGN KEY (\u0060sop_document_id\u0060) REFERENCES \u0060sop_documents\u0060 (\u0060id\u0060),\n  CONSTRAINT \u0060fk_soplog_user\u0060 FOREIGN KEY (\u0060performed_by\u0060) REFERENCES \u0060users\u0060 (\u0060id\u0060) ON DELETE SET NULL\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci"
.\tools\schema\snapshots\schema.json:20724:      "CreateSql": "CREATE TABLE \u0060sop_documents\u0060 (\n  \u0060id\u0060 int NOT NULL AUTO_INCREMENT,\n  \u0060code\u0060 varchar(50) DEFAULT NULL,\n  \u0060name\u0060 varchar(255) DEFAULT NULL,\n  \u0060version\u0060 varchar(40) DEFAULT NULL,\n  \u0060status\u0060 enum(\u0027draft\u0027,\u0027active\u0027,\u0027archived\u0027,\u0027obsolete\u0027) DEFAULT NULL,\n  \u0060created_by\u0060 int DEFAULT NULL,\n  \u0060created_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP,\n  \u0060approved_by\u0060 int DEFAULT NULL,\n  \u0060approved_at\u0060 datetime DEFAULT NULL,\n  \u0060file_path\u0060 varchar(255) DEFAULT NULL,\n  \u0060notes\u0060 text,\n  \u0060updated_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n  \u0060description\u0060 varchar(400) DEFAULT NULL,\n  \u0060process\u0060 varchar(80) DEFAULT NULL,\n  \u0060language\u0060 varchar(10) DEFAULT NULL,\n  \u0060date_issued\u0060 datetime DEFAULT NULL,\n  \u0060date_expiry\u0060 datetime DEFAULT NULL,\n  \u0060next_review_date\u0060 datetime DEFAULT NULL,\n  \u0060attachments\u0060 varchar(255) DEFAULT NULL,\n  \u0060responsible_user_id\u0060 int DEFAULT NULL,\n  \u0060responsible_user\u0060 varchar(255) DEFAULT NULL,\n  \u0060created_by_id\u0060 int DEFAULT NULL,\n  \u0060version_no\u0060 int DEFAULT NULL,\n  \u0060file_hash\u0060 varchar(128) DEFAULT NULL,\n  \u0060digital_signature\u0060 varchar(128) DEFAULT NULL,\n  \u0060chain_hash\u0060 varchar(128) DEFAULT NULL,\n  \u0060approver_ids\u0060 varchar(255) DEFAULT NULL,\n  \u0060approvers\u0060 varchar(255) DEFAULT NULL,\n  \u0060approval_timestamps\u0060 varchar(255) DEFAULT NULL,\n  \u0060review_notes\u0060 varchar(1000) DEFAULT NULL,\n  \u0060pdf_metadata\u0060 varchar(1024) DEFAULT NULL,\n  \u0060related_type\u0060 varchar(40) DEFAULT NULL,\n  \u0060related_id\u0060 int DEFAULT NULL,\n  \u0060comment\u0060 varchar(400) DEFAULT NULL,\n  \u0060last_modified\u0060 datetime DEFAULT NULL,\n  \u0060last_modified_by_id\u0060 int DEFAULT NULL,\n  \u0060last_modified_by\u0060 varchar(255) DEFAULT NULL,\n  \u0060source_ip\u0060 varchar(64) DEFAULT NULL,\n  \u0060ai_tags\u0060 varchar(512) DEFAULT NULL,\n  PRIMARY KEY (\u0060id\u0060),\n  UNIQUE KEY \u0060code\u0060 (\u0060code\u0060),\n  KEY \u0060fk_sop_created\u0060 (\u0060created_by\u0060),\n  KEY \u0060fk_sop_approved\u0060 (\u0060approved_by\u0060),\n  CONSTRAINT \u0060fk_sop_approved\u0060 FOREIGN KEY (\u0060approved_by\u0060) REFERENCES \u0060users\u0060 (\u0060id\u0060) ON DELETE SET NULL,\n  CONSTRAINT \u0060fk_sop_created\u0060 FOREIGN KEY (\u0060created_by\u0060) REFERENCES \u0060users\u0060 (\u0060id\u0060) ON DELETE SET NULL\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci"
.\tools\schema\snapshots\schema.json:21092:      "CreateSql": "CREATE TABLE \u0060stock_levels\u0060 (\n  \u0060id\u0060 int NOT NULL AUTO_INCREMENT,\n  \u0060part_id\u0060 int DEFAULT NULL,\n  \u0060warehouse_id\u0060 int DEFAULT NULL,\n  \u0060quantity\u0060 int DEFAULT NULL,\n  \u0060min_threshold\u0060 int DEFAULT NULL,\n  \u0060max_threshold\u0060 int DEFAULT NULL,\n  \u0060created_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP,\n  \u0060updated_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n  \u0060part\u0060 varchar(255) DEFAULT NULL,\n  \u0060warehouse\u0060 varchar(255) DEFAULT NULL,\n  \u0060auto_reorder_triggered\u0060 tinyint(1) DEFAULT NULL,\n  \u0060days_below_min\u0060 int DEFAULT NULL,\n  \u0060alarm_status\u0060 varchar(30) DEFAULT NULL,\n  \u0060anomaly_score\u0060 decimal(10,2) DEFAULT NULL,\n  \u0060last_modified\u0060 datetime DEFAULT NULL,\n  \u0060last_modified_by_id\u0060 int DEFAULT NULL,\n  \u0060last_modified_by\u0060 varchar(255) DEFAULT NULL,\n  \u0060source_ip\u0060 varchar(45) DEFAULT NULL,\n  \u0060geo_location\u0060 varchar(100) DEFAULT NULL,\n  \u0060comment\u0060 varchar(255) DEFAULT NULL,\n  \u0060digital_signature\u0060 varchar(128) DEFAULT NULL,\n  \u0060entry_hash\u0060 varchar(128) DEFAULT NULL,\n  \u0060old_state_snapshot\u0060 varchar(255) DEFAULT NULL,\n  \u0060new_state_snapshot\u0060 varchar(255) DEFAULT NULL,\n  \u0060is_automated\u0060 tinyint(1) DEFAULT NULL,\n  \u0060session_id\u0060 varchar(80) DEFAULT NULL,\n  \u0060related_case_id\u0060 int DEFAULT NULL,\n  \u0060related_case_type\u0060 varchar(30) DEFAULT NULL,\n  PRIMARY KEY (\u0060id\u0060),\n  KEY \u0060fk_sl_part\u0060 (\u0060part_id\u0060),\n  KEY \u0060fk_sl_warehouse\u0060 (\u0060warehouse_id\u0060),\n  CONSTRAINT \u0060fk_sl_part\u0060 FOREIGN KEY (\u0060part_id\u0060) REFERENCES \u0060parts\u0060 (\u0060id\u0060),\n  CONSTRAINT \u0060fk_sl_warehouse\u0060 FOREIGN KEY (\u0060warehouse_id\u0060) REFERENCES \u0060warehouses\u0060 (\u0060id\u0060),\n  CONSTRAINT \u0060chk_qty_nonneg\u0060 CHECK ((\u0060quantity\u0060 \u003E= 0)),\n  CONSTRAINT \u0060chk_sl_ranges\u0060 CHECK (((\u0060min_threshold\u0060 is null) or (\u0060max_threshold\u0060 is null) or (\u0060max_threshold\u0060 \u003E= \u0060min_threshold\u0060)))\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci"
.\tools\schema\snapshots\schema.json:21251:      "CreateSql": "CREATE TABLE \u0060supplier_risk_audit\u0060 (\n  \u0060id\u0060 int NOT NULL AUTO_INCREMENT,\n  \u0060supplier_id\u0060 int DEFAULT NULL,\n  \u0060audit_date\u0060 date DEFAULT NULL,\n  \u0060score\u0060 int DEFAULT NULL,\n  \u0060performed_by\u0060 int DEFAULT NULL,\n  \u0060findings\u0060 text,\n  \u0060corrective_actions\u0060 text,\n  \u0060created_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP,\n  \u0060updated_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n  PRIMARY KEY (\u0060id\u0060),\n  KEY \u0060fk_sra_supplier\u0060 (\u0060supplier_id\u0060),\n  KEY \u0060fk_sra_user\u0060 (\u0060performed_by\u0060),\n  CONSTRAINT \u0060fk_sra_supplier\u0060 FOREIGN KEY (\u0060supplier_id\u0060) REFERENCES \u0060suppliers\u0060 (\u0060id\u0060),\n  CONSTRAINT \u0060fk_sra_user\u0060 FOREIGN KEY (\u0060performed_by\u0060) REFERENCES \u0060users\u0060 (\u0060id\u0060)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci"
.\tools\schema\snapshots\schema.json:21631:      "CreateSql": "CREATE TABLE \u0060suppliers\u0060 (\n  \u0060id\u0060 int NOT NULL AUTO_INCREMENT,\n  \u0060name\u0060 varchar(100) DEFAULT NULL,\n  \u0060vat_number\u0060 varchar(40) DEFAULT NULL,\n  \u0060code\u0060 varchar(50) DEFAULT NULL,\n  \u0060oib\u0060 varchar(40) DEFAULT NULL,\n  \u0060contact\u0060 varchar(100) DEFAULT NULL,\n  \u0060email\u0060 varchar(100) DEFAULT NULL,\n  \u0060phone\u0060 varchar(50) DEFAULT NULL,\n  \u0060website\u0060 varchar(200) DEFAULT NULL,\n  \u0060supplier_type\u0060 varchar(40) DEFAULT NULL,\n  \u0060notes\u0060 text,\n  \u0060contract_file\u0060 varchar(255) DEFAULT NULL,\n  \u0060address\u0060 text,\n  \u0060city\u0060 varchar(80) DEFAULT NULL,\n  \u0060country\u0060 varchar(80) DEFAULT NULL,\n  \u0060type\u0060 varchar(40) DEFAULT NULL,\n  \u0060status\u0060 varchar(40) DEFAULT NULL,\n  \u0060contract_start\u0060 date DEFAULT NULL,\n  \u0060contract_end\u0060 date DEFAULT NULL,\n  \u0060cert_doc\u0060 varchar(255) DEFAULT NULL,\n  \u0060valid_until\u0060 date DEFAULT NULL,\n  \u0060risk_score\u0060 int DEFAULT \u002750\u0027,\n  \u0060last_audit\u0060 date DEFAULT NULL,\n  \u0060comment\u0060 text,\n  \u0060digital_signature\u0060 varchar(128) DEFAULT NULL,\n  \u0060created_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP,\n  \u0060updated_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n  \u0060status_id\u0060 int DEFAULT NULL,\n  \u0060type_id\u0060 int DEFAULT NULL,\n  PRIMARY KEY (\u0060id\u0060),\n  KEY \u0060idx_sup_status_id\u0060 (\u0060status_id\u0060),\n  KEY \u0060idx_sup_type_id\u0060 (\u0060type_id\u0060),\n  CONSTRAINT \u0060fk_sup_status\u0060 FOREIGN KEY (\u0060status_id\u0060) REFERENCES \u0060ref_value\u0060 (\u0060id\u0060) ON DELETE SET NULL,\n  CONSTRAINT \u0060fk_sup_type\u0060 FOREIGN KEY (\u0060type_id\u0060) REFERENCES \u0060ref_value\u0060 (\u0060id\u0060) ON DELETE SET NULL\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci"
.\tools\schema\snapshots\schema.json:22082:      "CreateSql": "CREATE TABLE \u0060system_event_log\u0060 (\n  \u0060id\u0060 int NOT NULL AUTO_INCREMENT,\n  \u0060event_time\u0060 datetime DEFAULT CURRENT_TIMESTAMP,\n  \u0060timestamp\u0060 datetime DEFAULT CURRENT_TIMESTAMP,\n  \u0060user_id\u0060 int DEFAULT NULL,\n  \u0060event_type\u0060 varchar(100) DEFAULT NULL,\n  \u0060action\u0060 varchar(100) DEFAULT NULL,\n  \u0060table_name\u0060 varchar(100) DEFAULT NULL,\n  \u0060related_module\u0060 varchar(100) DEFAULT NULL,\n  \u0060record_id\u0060 int DEFAULT NULL,\n  \u0060field_name\u0060 varchar(100) DEFAULT NULL,\n  \u0060old_value\u0060 text,\n  \u0060new_value\u0060 text,\n  \u0060description\u0060 text,\n  \u0060details\u0060 text,\n  \u0060source_ip\u0060 varchar(45) DEFAULT NULL,\n  \u0060device_info\u0060 varchar(255) DEFAULT NULL,\n  \u0060session_id\u0060 varchar(100) DEFAULT NULL,\n  \u0060severity\u0060 varchar(20) DEFAULT NULL,\n  \u0060processed\u0060 tinyint(1) DEFAULT \u00270\u0027,\n  \u0060created_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP,\n  \u0060updated_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n  \u0060ts_utc\u0060 datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,\n  \u0060username\u0060 varchar(128) DEFAULT NULL,\n  \u0060digital_signature\u0060 varchar(256) DEFAULT NULL,\n  \u0060entry_hash\u0060 varchar(256) DEFAULT NULL,\n  \u0060mac_address\u0060 varchar(64) DEFAULT NULL,\n  \u0060geo_location\u0060 varchar(128) DEFAULT NULL,\n  \u0060regulator\u0060 varchar(64) DEFAULT NULL,\n  \u0060related_case_id\u0060 int DEFAULT NULL,\n  \u0060related_case_type\u0060 varchar(64) DEFAULT NULL,\n  \u0060anomaly_score\u0060 double DEFAULT NULL,\n  \u0060user\u0060 varchar(255) DEFAULT NULL,\n  \u0060change_version\u0060 int DEFAULT NULL,\n  \u0060is_deleted\u0060 tinyint(1) DEFAULT NULL,\n  PRIMARY KEY (\u0060id\u0060),\n  KEY \u0060fk_sel_user\u0060 (\u0060user_id\u0060),\n  KEY \u0060idx_sel_time_sev\u0060 (\u0060timestamp\u0060,\u0060severity\u0060),\n  KEY \u0060ix_system_event_log_ts\u0060 (\u0060ts_utc\u0060),\n  KEY \u0060ix_event_table_record_ts\u0060 (\u0060table_name\u0060,\u0060record_id\u0060,\u0060ts_utc\u0060),\n  KEY \u0060ix_event_type_ts\u0060 (\u0060event_type\u0060,\u0060ts_utc\u0060),\n  CONSTRAINT \u0060fk_sel_user\u0060 FOREIGN KEY (\u0060user_id\u0060) REFERENCES \u0060users\u0060 (\u0060id\u0060) ON DELETE SET NULL\n) ENGINE=InnoDB AUTO_INCREMENT=15285 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci"
.\tools\schema\snapshots\schema.json:22279:      "CreateSql": "CREATE TABLE \u0060tags\u0060 (\n  \u0060id\u0060 int NOT NULL AUTO_INCREMENT,\n  \u0060tag\u0060 varchar(60) NOT NULL,\n  \u0060created_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP,\n  \u0060updated_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n  PRIMARY KEY (\u0060id\u0060),\n  UNIQUE KEY \u0060tag\u0060 (\u0060tag\u0060)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci"
.\tools\schema\snapshots\schema.json:22385:      "CreateSql": "CREATE TABLE \u0060tenants\u0060 (\n  \u0060id\u0060 int NOT NULL AUTO_INCREMENT,\n  \u0060code\u0060 varchar(40) DEFAULT NULL,\n  \u0060name\u0060 varchar(100) DEFAULT NULL,\n  \u0060contact\u0060 varchar(100) DEFAULT NULL,\n  \u0060is_active\u0060 tinyint(1) DEFAULT \u00271\u0027,\n  \u0060created_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP,\n  \u0060updated_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n  PRIMARY KEY (\u0060id\u0060),\n  UNIQUE KEY \u0060code\u0060 (\u0060code\u0060)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci"
.\tools\schema\snapshots\schema.json:22536:      "CreateSql": "CREATE TABLE \u0060user_audit\u0060 (\n  \u0060id\u0060 int NOT NULL AUTO_INCREMENT,\n  \u0060user_id\u0060 int DEFAULT NULL,\n  \u0060action\u0060 varchar(40) NOT NULL,\n  \u0060description\u0060 text,\n  \u0060created_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP,\n  \u0060source_ip\u0060 varchar(45) DEFAULT NULL,\n  \u0060device_info\u0060 varchar(255) DEFAULT NULL,\n  \u0060session_id\u0060 varchar(100) DEFAULT NULL,\n  \u0060updated_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n  \u0060details\u0060 text GENERATED ALWAYS AS (\u0060description\u0060) VIRTUAL,\n  PRIMARY KEY (\u0060id\u0060),\n  KEY \u0060fk_ua_user\u0060 (\u0060user_id\u0060),\n  CONSTRAINT \u0060fk_ua_user\u0060 FOREIGN KEY (\u0060user_id\u0060) REFERENCES \u0060users\u0060 (\u0060id\u0060) ON DELETE SET NULL\n) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci"
.\tools\schema\snapshots\schema.json:22711:      "CreateSql": "CREATE TABLE \u0060user_esignatures\u0060 (\n  \u0060id\u0060 int NOT NULL AUTO_INCREMENT,\n  \u0060user_id\u0060 int DEFAULT NULL,\n  \u0060signed_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP,\n  \u0060action\u0060 varchar(100) DEFAULT NULL,\n  \u0060table_name\u0060 varchar(100) DEFAULT NULL,\n  \u0060record_id\u0060 int DEFAULT NULL,\n  \u0060signature_hash\u0060 varchar(255) DEFAULT NULL,\n  \u0060method\u0060 enum(\u0027pin\u0027,\u0027certificate\u0027,\u0027biometric\u0027,\u0027password\u0027) DEFAULT NULL,\n  \u0060status\u0060 enum(\u0027valid\u0027,\u0027revoked\u0027,\u0027pending\u0027) DEFAULT \u0027valid\u0027,\n  \u0060ip_address\u0060 varchar(45) DEFAULT NULL,\n  \u0060created_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP,\n  \u0060updated_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n  PRIMARY KEY (\u0060id\u0060),\n  KEY \u0060fk_ues_user\u0060 (\u0060user_id\u0060),\n  CONSTRAINT \u0060fk_ues_user\u0060 FOREIGN KEY (\u0060user_id\u0060) REFERENCES \u0060users\u0060 (\u0060id\u0060)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci"
.\tools\schema\snapshots\schema.json:23007:      "CreateSql": "CREATE TABLE \u0060user_login_audit\u0060 (\n  \u0060id\u0060 int NOT NULL AUTO_INCREMENT,\n  \u0060user_id\u0060 int DEFAULT NULL,\n  \u0060login_time\u0060 datetime DEFAULT CURRENT_TIMESTAMP,\n  \u0060logout_time\u0060 datetime DEFAULT NULL,\n  \u0060session_token\u0060 varchar(128) DEFAULT NULL,\n  \u0060ip_address\u0060 varchar(45) DEFAULT NULL,\n  \u0060device_info\u0060 varchar(255) DEFAULT NULL,\n  \u0060success\u0060 tinyint(1) DEFAULT \u00271\u0027,\n  \u0060reason\u0060 text,\n  \u0060created_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP,\n  \u0060updated_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n  \u0060timestamp\u0060 datetime GENERATED ALWAYS AS (\u0060login_time\u0060) VIRTUAL,\n  \u0060action\u0060 varchar(20) GENERATED ALWAYS AS (if((\u0060success\u0060 = 1),_cp852\u0027LOGIN\u0027,_cp852\u0027LOGIN_FAIL\u0027)) VIRTUAL,\n  \u0060details\u0060 text GENERATED ALWAYS AS (\u0060reason\u0060) VIRTUAL,\n  \u0060two_factor_ok\u0060 tinyint(1) DEFAULT NULL,\n  \u0060sso_used\u0060 tinyint(1) DEFAULT NULL,\n  \u0060biometric_used\u0060 tinyint(1) DEFAULT NULL,\n  \u0060geo_location\u0060 varchar(128) DEFAULT NULL,\n  \u0060risk_score\u0060 double DEFAULT NULL,\n  \u0060status\u0060 varchar(32) DEFAULT NULL,\n  \u0060digital_signature\u0060 varchar(128) DEFAULT NULL,\n  \u0060note\u0060 text,\n  \u0060user\u0060 varchar(255) DEFAULT NULL,\n  PRIMARY KEY (\u0060id\u0060),\n  KEY \u0060fk_ula_user\u0060 (\u0060user_id\u0060),\n  CONSTRAINT \u0060fk_ula_user\u0060 FOREIGN KEY (\u0060user_id\u0060) REFERENCES \u0060users\u0060 (\u0060id\u0060)\n) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci"
.\tools\schema\snapshots\schema.json:23290:      "CreateSql": "CREATE TABLE \u0060user_permissions\u0060 (\n  \u0060user_id\u0060 int NOT NULL,\n  \u0060permission_id\u0060 int NOT NULL,\n  \u0060allowed\u0060 tinyint(1) NOT NULL,\n  \u0060reason\u0060 varchar(255) DEFAULT NULL,\n  \u0060granted_by\u0060 int DEFAULT NULL,\n  \u0060granted_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP,\n  \u0060expires_at\u0060 datetime DEFAULT NULL,\n  \u0060created_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP,\n  \u0060updated_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n  \u0060user\u0060 varchar(255) DEFAULT NULL,\n  \u0060permission\u0060 varchar(255) DEFAULT NULL,\n  \u0060assigned_at\u0060 datetime DEFAULT NULL,\n  \u0060assigned_by\u0060 int DEFAULT NULL,\n  \u0060is_active\u0060 tinyint(1) DEFAULT NULL,\n  \u0060change_version\u0060 int DEFAULT NULL,\n  \u0060digital_signature\u0060 varchar(128) DEFAULT NULL,\n  \u0060session_id\u0060 varchar(64) DEFAULT NULL,\n  \u0060source_ip\u0060 varchar(64) DEFAULT NULL,\n  \u0060note\u0060 varchar(512) DEFAULT NULL,\n  PRIMARY KEY (\u0060user_id\u0060,\u0060permission_id\u0060),\n  KEY \u0060fk_up_perm\u0060 (\u0060permission_id\u0060),\n  KEY \u0060fk_up_by\u0060 (\u0060granted_by\u0060),\n  CONSTRAINT \u0060fk_up_by\u0060 FOREIGN KEY (\u0060granted_by\u0060) REFERENCES \u0060users\u0060 (\u0060id\u0060),\n  CONSTRAINT \u0060fk_up_perm\u0060 FOREIGN KEY (\u0060permission_id\u0060) REFERENCES \u0060permissions\u0060 (\u0060id\u0060) ON DELETE CASCADE,\n  CONSTRAINT \u0060fk_up_user\u0060 FOREIGN KEY (\u0060user_id\u0060) REFERENCES \u0060users\u0060 (\u0060id\u0060) ON DELETE CASCADE\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci"
.\tools\schema\snapshots\schema.json:23595:      "CreateSql": "CREATE TABLE \u0060user_roles\u0060 (\n  \u0060user_id\u0060 int NOT NULL,\n  \u0060role_id\u0060 int NOT NULL,\n  \u0060assigned_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP,\n  \u0060assigned_by_id\u0060 int DEFAULT NULL,\n  \u0060expires_at\u0060 datetime DEFAULT NULL,\n  \u0060created_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP,\n  \u0060updated_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n  \u0060granted_by\u0060 int DEFAULT NULL,\n  \u0060granted_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP,\n  \u0060is_active\u0060 tinyint(1) DEFAULT \u00271\u0027,\n  \u0060change_version\u0060 int DEFAULT \u00271\u0027,\n  \u0060digital_signature\u0060 varchar(256) DEFAULT NULL,\n  \u0060user\u0060 varchar(255) DEFAULT NULL,\n  \u0060role\u0060 varchar(255) DEFAULT NULL,\n  \u0060assigned_by\u0060 int DEFAULT NULL,\n  \u0060reason\u0060 varchar(255) DEFAULT NULL,\n  \u0060session_id\u0060 varchar(64) DEFAULT NULL,\n  \u0060source_ip\u0060 varchar(64) DEFAULT NULL,\n  \u0060note\u0060 varchar(512) DEFAULT NULL,\n  PRIMARY KEY (\u0060user_id\u0060,\u0060role_id\u0060),\n  KEY \u0060fk_ur_role\u0060 (\u0060role_id\u0060),\n  KEY \u0060ix_user_roles_granted_by\u0060 (\u0060granted_by\u0060),\n  KEY \u0060fk_ur_assigned_by_id\u0060 (\u0060assigned_by_id\u0060),\n  CONSTRAINT \u0060fk_ur_assigned_by_id\u0060 FOREIGN KEY (\u0060assigned_by_id\u0060) REFERENCES \u0060users\u0060 (\u0060id\u0060) ON DELETE SET NULL,\n  CONSTRAINT \u0060fk_ur_role\u0060 FOREIGN KEY (\u0060role_id\u0060) REFERENCES \u0060roles\u0060 (\u0060id\u0060) ON DELETE CASCADE,\n  CONSTRAINT \u0060fk_ur_user\u0060 FOREIGN KEY (\u0060user_id\u0060) REFERENCES \u0060users\u0060 (\u0060id\u0060) ON DELETE CASCADE,\n  CONSTRAINT \u0060fk_user_roles_granted_by\u0060 FOREIGN KEY (\u0060granted_by\u0060) REFERENCES \u0060users\u0060 (\u0060id\u0060) ON DELETE SET NULL\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci"
.\tools\schema\snapshots\schema.json:23723:      "CreateSql": "CREATE TABLE \u0060user_subscriptions\u0060 (\n  \u0060id\u0060 int NOT NULL AUTO_INCREMENT,\n  \u0060user_id\u0060 int NOT NULL,\n  \u0060template_id\u0060 int NOT NULL,\n  \u0060enabled\u0060 tinyint(1) DEFAULT \u00271\u0027,\n  \u0060created_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP,\n  \u0060updated_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n  PRIMARY KEY (\u0060id\u0060),\n  UNIQUE KEY \u0060ux_user_tpl\u0060 (\u0060user_id\u0060,\u0060template_id\u0060),\n  KEY \u0060fk_us_tpl\u0060 (\u0060template_id\u0060),\n  CONSTRAINT \u0060fk_us_tpl\u0060 FOREIGN KEY (\u0060template_id\u0060) REFERENCES \u0060notification_templates\u0060 (\u0060id\u0060) ON DELETE CASCADE,\n  CONSTRAINT \u0060fk_us_user\u0060 FOREIGN KEY (\u0060user_id\u0060) REFERENCES \u0060users\u0060 (\u0060id\u0060) ON DELETE CASCADE\n) ENGINE=InnoDB AUTO_INCREMENT=8 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci"
.\tools\schema\snapshots\schema.json:23885:      "CreateSql": "CREATE TABLE \u0060user_training\u0060 (\n  \u0060id\u0060 int NOT NULL AUTO_INCREMENT,\n  \u0060user_id\u0060 int DEFAULT NULL,\n  \u0060training_type\u0060 varchar(100) DEFAULT NULL,\n  \u0060training_date\u0060 date DEFAULT NULL,\n  \u0060valid_until\u0060 date DEFAULT NULL,\n  \u0060certificate_file\u0060 varchar(255) DEFAULT NULL,\n  \u0060provider\u0060 varchar(100) DEFAULT NULL,\n  \u0060status\u0060 enum(\u0027planned\u0027,\u0027completed\u0027,\u0027expired\u0027) DEFAULT NULL,\n  \u0060notes\u0060 text,\n  \u0060created_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP,\n  \u0060updated_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n  PRIMARY KEY (\u0060id\u0060),\n  KEY \u0060fk_ut_user\u0060 (\u0060user_id\u0060),\n  CONSTRAINT \u0060fk_ut_user\u0060 FOREIGN KEY (\u0060user_id\u0060) REFERENCES \u0060users\u0060 (\u0060id\u0060)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci"
.\tools\schema\snapshots\schema.json:24038:      "CreateSql": "CREATE TABLE \u0060user_window_layouts\u0060 (\n  \u0060id\u0060 int NOT NULL AUTO_INCREMENT,\n  \u0060user_id\u0060 int NOT NULL,\n  \u0060page_type\u0060 varchar(200) NOT NULL,\n  \u0060pos_x\u0060 int DEFAULT NULL,\n  \u0060pos_y\u0060 int DEFAULT NULL,\n  \u0060width\u0060 int NOT NULL,\n  \u0060height\u0060 int NOT NULL,\n  \u0060saved_at\u0060 datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,\n  \u0060created_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP,\n  \u0060updated_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n  PRIMARY KEY (\u0060id\u0060),\n  UNIQUE KEY \u0060ux_user_page\u0060 (\u0060user_id\u0060,\u0060page_type\u0060),\n  CONSTRAINT \u0060fk_uwl_user\u0060 FOREIGN KEY (\u0060user_id\u0060) REFERENCES \u0060users\u0060 (\u0060id\u0060) ON DELETE CASCADE\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci"
.\tools\schema\snapshots\schema.json:24750:      "CreateSql": "CREATE TABLE \u0060users\u0060 (\n  \u0060id\u0060 int NOT NULL AUTO_INCREMENT,\n  \u0060username\u0060 varchar(100) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL,\n  \u0060password\u0060 varchar(128) NOT NULL,\n  \u0060password_hash\u0060 varchar(256) DEFAULT NULL,\n  \u0060full_name\u0060 varchar(100) NOT NULL,\n  \u0060role\u0060 varchar(30) DEFAULT NULL,\n  \u0060role_id\u0060 int DEFAULT NULL,\n  \u0060active\u0060 tinyint(1) DEFAULT \u00271\u0027,\n  \u0060is_locked\u0060 tinyint(1) DEFAULT \u00270\u0027,\n  \u0060last_failed_login\u0060 datetime DEFAULT NULL,\n  \u0060email\u0060 varchar(100) DEFAULT NULL,\n  \u0060phone\u0060 varchar(40) DEFAULT NULL,\n  \u0060last_login\u0060 datetime DEFAULT NULL,\n  \u0060password_reset_required\u0060 tinyint(1) DEFAULT \u00270\u0027,\n  \u0060is_deleted\u0060 tinyint(1) DEFAULT \u00270\u0027,\n  \u0060deleted_at\u0060 datetime DEFAULT NULL,\n  \u0060digital_signature\u0060 varchar(128) DEFAULT NULL,\n  \u0060department_id\u0060 int DEFAULT NULL,\n  \u0060department_name\u0060 varchar(80) DEFAULT NULL,\n  \u0060is_two_factor_enabled\u0060 tinyint(1) DEFAULT \u00270\u0027,\n  \u0060privacy_consent_version\u0060 varchar(20) DEFAULT NULL,\n  \u0060privacy_consent_date\u0060 datetime DEFAULT NULL,\n  \u0060custom_attributes\u0060 text,\n  \u0060security_anomaly_score\u0060 decimal(5,3) DEFAULT NULL,\n  \u0060is_system_account\u0060 tinyint(1) DEFAULT \u00270\u0027,\n  \u0060notification_channel\u0060 varchar(24) DEFAULT NULL,\n  \u0060external_provider_id\u0060 varchar(255) DEFAULT NULL,\n  \u0060external_provider_type\u0060 varchar(40) DEFAULT NULL,\n  \u0060federated_unique_id\u0060 varchar(255) DEFAULT NULL,\n  \u0060global_federated_id\u0060 varchar(255) DEFAULT NULL,\n  \u0060preferred_culture\u0060 varchar(16) DEFAULT NULL,\n  \u0060last_change_signature\u0060 varchar(256) DEFAULT NULL,\n  \u0060public_key\u0060 longtext,\n  \u0060created_at\u0060 timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,\n  \u0060last_modified\u0060 timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n  \u0060last_modified_by_id\u0060 int DEFAULT NULL,\n  \u0060change_version\u0060 int NOT NULL DEFAULT \u00271\u0027,\n  \u0060failed_login_attempts\u0060 int DEFAULT \u00270\u0027,\n  \u0060tenant_id\u0060 int DEFAULT NULL,\n  \u0060job_title_id\u0060 int DEFAULT NULL,\n  \u0060updated_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n  \u0060user?\u0060 varchar(255) DEFAULT NULL,\n  \u0060icollection\u003Crole\u003E\u0060 varchar(255) DEFAULT NULL,\n  \u0060icollection\u003Cpermission\u003E\u0060 varchar(255) DEFAULT NULL,\n  \u0060icollection\u003Cdelegated_permission\u003E\u0060 varchar(255) DEFAULT NULL,\n  \u0060icollection\u003Caudit_log\u003E\u0060 varchar(255) DEFAULT NULL,\n  \u0060icollection\u003Cdigital_signature\u003E\u0060 varchar(255) DEFAULT NULL,\n  \u0060icollection\u003Csession_log\u003E\u0060 varchar(255) DEFAULT NULL,\n  \u0060icollection\u003Cwork_order\u003E\u0060 varchar(255) DEFAULT NULL,\n  \u0060icollection\u003Cphoto\u003E\u0060 varchar(255) DEFAULT NULL,\n  \u0060icollection\u003Cattachment\u003E\u0060 varchar(255) DEFAULT NULL,\n  \u0060icollection\u003Cadmin_activity_log\u003E\u0060 varchar(255) DEFAULT NULL,\n  PRIMARY KEY (\u0060id\u0060),\n  UNIQUE KEY \u0060ux_users_username_lower\u0060 ((lower(\u0060username\u0060))),\n  KEY \u0060fk_users_last_modified_by\u0060 (\u0060last_modified_by_id\u0060),\n  KEY \u0060fk_users_department\u0060 (\u0060department_id\u0060),\n  KEY \u0060fk_users_tenant_id\u0060 (\u0060tenant_id\u0060),\n  KEY \u0060fk_users_job_title\u0060 (\u0060job_title_id\u0060),\n  KEY \u0060fk_users_role\u0060 (\u0060role_id\u0060),\n  KEY \u0060idx_users_username_insensitive\u0060 ((lower(\u0060username\u0060))),\n  CONSTRAINT \u0060fk_users_department\u0060 FOREIGN KEY (\u0060department_id\u0060) REFERENCES \u0060departments\u0060 (\u0060id\u0060) ON DELETE SET NULL,\n  CONSTRAINT \u0060fk_users_job_title\u0060 FOREIGN KEY (\u0060job_title_id\u0060) REFERENCES \u0060job_titles\u0060 (\u0060id\u0060),\n  CONSTRAINT \u0060fk_users_last_modified_by\u0060 FOREIGN KEY (\u0060last_modified_by_id\u0060) REFERENCES \u0060users\u0060 (\u0060id\u0060),\n  CONSTRAINT \u0060fk_users_role\u0060 FOREIGN KEY (\u0060role_id\u0060) REFERENCES \u0060roles\u0060 (\u0060id\u0060),\n  CONSTRAINT \u0060fk_users_tenant_id\u0060 FOREIGN KEY (\u0060tenant_id\u0060) REFERENCES \u0060tenants\u0060 (\u0060id\u0060)\n) ENGINE=InnoDB AUTO_INCREMENT=10 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci"
.\tools\schema\snapshots\schema.json:25184:      "CreateSql": "CREATE TABLE \u0060validations\u0060 (\n  \u0060id\u0060 int NOT NULL AUTO_INCREMENT,\n  \u0060type\u0060 varchar(40) DEFAULT NULL,\n  \u0060machine_id\u0060 int DEFAULT NULL,\n  \u0060component_id\u0060 int DEFAULT NULL,\n  \u0060validation_date\u0060 date DEFAULT NULL,\n  \u0060status\u0060 varchar(40) DEFAULT NULL,\n  \u0060doc_file\u0060 varchar(255) DEFAULT NULL,\n  \u0060signed_by\u0060 varchar(128) DEFAULT NULL,\n  \u0060next_due\u0060 date DEFAULT NULL,\n  \u0060comment\u0060 text,\n  \u0060digital_signature\u0060 varchar(128) DEFAULT NULL,\n  \u0060created_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP,\n  \u0060updated_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n  \u0060code\u0060 varchar(40) DEFAULT NULL,\n  \u0060machine?\u0060 varchar(255) DEFAULT NULL,\n  \u0060machine_component?\u0060 varchar(255) DEFAULT NULL,\n  \u0060date_start\u0060 datetime DEFAULT NULL,\n  \u0060date_end\u0060 datetime DEFAULT NULL,\n  \u0060signed_by_id\u0060 int DEFAULT NULL,\n  \u0060user?\u0060 varchar(255) DEFAULT NULL,\n  \u0060signed_by_name\u0060 varchar(100) DEFAULT NULL,\n  \u0060entry_hash\u0060 varchar(128) DEFAULT NULL,\n  \u0060created_by_id\u0060 int DEFAULT NULL,\n  \u0060last_modified\u0060 datetime DEFAULT NULL,\n  \u0060last_modified_by_id\u0060 int DEFAULT NULL,\n  \u0060source_ip\u0060 varchar(64) DEFAULT NULL,\n  \u0060workflow_status\u0060 varchar(40) DEFAULT NULL,\n  \u0060additional_signers\u0060 varchar(512) DEFAULT NULL,\n  \u0060regulator\u0060 varchar(60) DEFAULT NULL,\n  \u0060anomaly_score\u0060 decimal(10,2) DEFAULT NULL,\n  \u0060linked_capa_id\u0060 int DEFAULT NULL,\n  \u0060capa_case?\u0060 varchar(255) DEFAULT NULL,\n  \u0060signature_timestamp\u0060 datetime DEFAULT NULL,\n  \u0060session_id\u0060 varchar(80) DEFAULT NULL,\n  PRIMARY KEY (\u0060id\u0060),\n  KEY \u0060fk_val_machine\u0060 (\u0060machine_id\u0060),\n  KEY \u0060fk_val_component\u0060 (\u0060component_id\u0060),\n  CONSTRAINT \u0060fk_val_component\u0060 FOREIGN KEY (\u0060component_id\u0060) REFERENCES \u0060machine_components\u0060 (\u0060id\u0060),\n  CONSTRAINT \u0060fk_val_machine\u0060 FOREIGN KEY (\u0060machine_id\u0060) REFERENCES \u0060machines\u0060 (\u0060id\u0060)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci"
.\tools\schema\snapshots\schema.json:25541:      "CreateSql": "CREATE TABLE \u0060warehouses\u0060 (\n  \u0060id\u0060 int NOT NULL AUTO_INCREMENT,\n  \u0060name\u0060 varchar(100) DEFAULT NULL,\n  \u0060location\u0060 varchar(255) DEFAULT NULL,\n  \u0060responsible_id\u0060 int DEFAULT NULL,\n  \u0060created_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP,\n  \u0060updated_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n  \u0060location_id\u0060 int DEFAULT NULL,\n  \u0060responsible\u0060 varchar(255) DEFAULT NULL,\n  \u0060qr_code\u0060 varchar(255) DEFAULT NULL,\n  \u0060note\u0060 varchar(500) DEFAULT NULL,\n  \u0060created_by_id\u0060 int DEFAULT NULL,\n  \u0060created_by\u0060 varchar(255) DEFAULT NULL,\n  \u0060last_modified\u0060 datetime DEFAULT NULL,\n  \u0060last_modified_by_id\u0060 int DEFAULT NULL,\n  \u0060last_modified_by\u0060 varchar(255) DEFAULT NULL,\n  \u0060digital_signature\u0060 varchar(128) DEFAULT NULL,\n  \u0060status\u0060 varchar(30) DEFAULT NULL,\n  \u0060io_tdevice_id\u0060 varchar(64) DEFAULT NULL,\n  \u0060climate_mode\u0060 varchar(60) DEFAULT NULL,\n  \u0060compliance_docs\u0060 varchar(255) DEFAULT NULL,\n  \u0060entry_hash\u0060 varchar(128) DEFAULT NULL,\n  \u0060source_ip\u0060 varchar(45) DEFAULT NULL,\n  \u0060is_qualified\u0060 tinyint(1) DEFAULT NULL,\n  \u0060last_qualified\u0060 datetime DEFAULT NULL,\n  \u0060session_id\u0060 varchar(80) DEFAULT NULL,\n  \u0060anomaly_score\u0060 decimal(10,2) DEFAULT NULL,\n  \u0060is_deleted\u0060 tinyint(1) DEFAULT NULL,\n  PRIMARY KEY (\u0060id\u0060),\n  KEY \u0060fk_wh_user\u0060 (\u0060responsible_id\u0060),\n  KEY \u0060fk_wh_location\u0060 (\u0060location_id\u0060),\n  CONSTRAINT \u0060fk_wh_location\u0060 FOREIGN KEY (\u0060location_id\u0060) REFERENCES \u0060locations\u0060 (\u0060id\u0060) ON DELETE SET NULL,\n  CONSTRAINT \u0060fk_wh_user\u0060 FOREIGN KEY (\u0060responsible_id\u0060) REFERENCES \u0060users\u0060 (\u0060id\u0060)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci"
.\tools\schema\snapshots\schema.json:25811:      "CreateSql": "CREATE TABLE \u0060work_order_audit\u0060 (\n  \u0060id\u0060 int NOT NULL AUTO_INCREMENT,\n  \u0060work_order_id\u0060 int NOT NULL,\n  \u0060user_id\u0060 int NOT NULL,\n  \u0060action\u0060 enum(\u0027CREATE\u0027,\u0027UPDATE\u0027,\u0027DELETE\u0027,\u0027SIGN\u0027,\u0027EXPORT\u0027,\u0027ROLLBACK\u0027) NOT NULL,\n  \u0060old_value\u0060 text,\n  \u0060new_value\u0060 text,\n  \u0060changed_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP,\n  \u0060source_ip\u0060 varchar(45) DEFAULT NULL,\n  \u0060device_info\u0060 varchar(255) DEFAULT NULL,\n  \u0060incident_id\u0060 int DEFAULT NULL,\n  \u0060capa_id\u0060 int DEFAULT NULL,\n  \u0060note\u0060 text,\n  \u0060created_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP,\n  \u0060updated_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n  \u0060work_order\u0060 varchar(255) DEFAULT NULL,\n  \u0060user\u0060 varchar(255) DEFAULT NULL,\n  \u0060session_id\u0060 varchar(64) DEFAULT NULL,\n  \u0060digital_signature\u0060 varchar(256) DEFAULT NULL,\n  \u0060integrity_hash\u0060 varchar(256) DEFAULT NULL,\n  PRIMARY KEY (\u0060id\u0060),\n  KEY \u0060fk_woa_wo\u0060 (\u0060work_order_id\u0060),\n  KEY \u0060fk_woa_user\u0060 (\u0060user_id\u0060),\n  CONSTRAINT \u0060fk_woa_user\u0060 FOREIGN KEY (\u0060user_id\u0060) REFERENCES \u0060users\u0060 (\u0060id\u0060) ON DELETE CASCADE,\n  CONSTRAINT \u0060fk_woa_wo\u0060 FOREIGN KEY (\u0060work_order_id\u0060) REFERENCES \u0060work_orders\u0060 (\u0060id\u0060) ON DELETE CASCADE\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci"
.\tools\schema\snapshots\schema.json:25960:      "CreateSql": "CREATE TABLE \u0060work_order_checklist_item\u0060 (\n  \u0060id\u0060 int NOT NULL AUTO_INCREMENT,\n  \u0060work_order_id\u0060 int NOT NULL,\n  \u0060item_id\u0060 int NOT NULL,\n  \u0060result\u0060 varchar(255) DEFAULT NULL,\n  \u0060ok\u0060 tinyint(1) DEFAULT NULL,\n  \u0060note\u0060 text,\n  \u0060created_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP,\n  \u0060updated_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n  PRIMARY KEY (\u0060id\u0060),\n  UNIQUE KEY \u0060ux_wocli\u0060 (\u0060work_order_id\u0060,\u0060item_id\u0060),\n  KEY \u0060fk_wocli_item\u0060 (\u0060item_id\u0060),\n  CONSTRAINT \u0060fk_wocli_item\u0060 FOREIGN KEY (\u0060item_id\u0060) REFERENCES \u0060checklist_items\u0060 (\u0060id\u0060) ON DELETE CASCADE,\n  CONSTRAINT \u0060fk_wocli_wo\u0060 FOREIGN KEY (\u0060work_order_id\u0060) REFERENCES \u0060work_orders\u0060 (\u0060id\u0060) ON DELETE CASCADE\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci"
.\tools\schema\snapshots\schema.json:26098:      "CreateSql": "CREATE TABLE \u0060work_order_comments\u0060 (\n  \u0060id\u0060 int NOT NULL AUTO_INCREMENT,\n  \u0060work_order_id\u0060 int NOT NULL,\n  \u0060user_id\u0060 int NOT NULL,\n  \u0060comment\u0060 text,\n  \u0060revision_no\u0060 int DEFAULT \u00271\u0027,\n  \u0060created_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP,\n  \u0060updated_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n  PRIMARY KEY (\u0060id\u0060),\n  KEY \u0060fk_woc_wo\u0060 (\u0060work_order_id\u0060),\n  KEY \u0060fk_woc_user\u0060 (\u0060user_id\u0060),\n  CONSTRAINT \u0060fk_woc_user\u0060 FOREIGN KEY (\u0060user_id\u0060) REFERENCES \u0060users\u0060 (\u0060id\u0060) ON DELETE CASCADE,\n  CONSTRAINT \u0060fk_woc_wo\u0060 FOREIGN KEY (\u0060work_order_id\u0060) REFERENCES \u0060work_orders\u0060 (\u0060id\u0060) ON DELETE CASCADE\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci"
.\tools\schema\snapshots\schema.json:26449:      "CreateSql": "CREATE TABLE \u0060work_order_parts\u0060 (\n  \u0060work_order_id\u0060 int NOT NULL,\n  \u0060part_id\u0060 int NOT NULL,\n  \u0060quantity\u0060 int DEFAULT NULL,\n  \u0060created_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP,\n  \u0060updated_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n  \u0060id\u0060 int DEFAULT NULL,\n  \u0060unit_of_measure\u0060 varchar(255) DEFAULT NULL,\n  \u0060unit_price\u0060 decimal(10,2) DEFAULT NULL,\n  \u0060currency\u0060 varchar(255) DEFAULT NULL,\n  \u0060warehouse_id\u0060 int DEFAULT NULL,\n  \u0060capa_case_id\u0060 int DEFAULT NULL,\n  \u0060incident_id\u0060 int DEFAULT NULL,\n  \u0060used_at\u0060 datetime DEFAULT NULL,\n  \u0060used_by_id\u0060 int DEFAULT NULL,\n  \u0060digital_signature\u0060 varchar(255) DEFAULT NULL,\n  \u0060source_ip\u0060 varchar(255) DEFAULT NULL,\n  \u0060device_info\u0060 varchar(255) DEFAULT NULL,\n  \u0060session_id\u0060 varchar(255) DEFAULT NULL,\n  \u0060note\u0060 varchar(255) DEFAULT NULL,\n  \u0060last_modified_at\u0060 datetime DEFAULT NULL,\n  \u0060last_modified_by_id\u0060 int DEFAULT NULL,\n  \u0060work_order?\u0060 varchar(255) DEFAULT NULL,\n  \u0060part?\u0060 varchar(255) DEFAULT NULL,\n  \u0060warehouse?\u0060 varchar(255) DEFAULT NULL,\n  \u0060user?\u0060 varchar(255) DEFAULT NULL,\n  \u0060capa_case?\u0060 varchar(255) DEFAULT NULL,\n  \u0060incident?\u0060 varchar(255) DEFAULT NULL,\n  PRIMARY KEY (\u0060work_order_id\u0060,\u0060part_id\u0060),\n  KEY \u0060fk_wop_part\u0060 (\u0060part_id\u0060),\n  CONSTRAINT \u0060fk_wop_part\u0060 FOREIGN KEY (\u0060part_id\u0060) REFERENCES \u0060parts\u0060 (\u0060id\u0060),\n  CONSTRAINT \u0060fk_wop_wo\u0060 FOREIGN KEY (\u0060work_order_id\u0060) REFERENCES \u0060work_orders\u0060 (\u0060id\u0060)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci"
.\tools\schema\snapshots\schema.json:26621:      "CreateSql": "CREATE TABLE \u0060work_order_signatures\u0060 (\n  \u0060id\u0060 int NOT NULL AUTO_INCREMENT,\n  \u0060work_order_id\u0060 int NOT NULL,\n  \u0060user_id\u0060 int NOT NULL,\n  \u0060signature_hash\u0060 varchar(255) DEFAULT NULL,\n  \u0060signed_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP,\n  \u0060pin_used\u0060 varchar(20) DEFAULT NULL,\n  \u0060signature_type\u0060 enum(\u0027zakljucavanje\u0027,\u0027odobrenje\u0027,\u0027potvrda\u0027) DEFAULT \u0027zakljucavanje\u0027,\n  \u0060note\u0060 text,\n  \u0060created_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP,\n  \u0060updated_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n  PRIMARY KEY (\u0060id\u0060),\n  KEY \u0060fk_wos_wo\u0060 (\u0060work_order_id\u0060),\n  KEY \u0060fk_wos_user\u0060 (\u0060user_id\u0060),\n  CONSTRAINT \u0060fk_wos_user\u0060 FOREIGN KEY (\u0060user_id\u0060) REFERENCES \u0060users\u0060 (\u0060id\u0060) ON DELETE CASCADE,\n  CONSTRAINT \u0060fk_wos_wo\u0060 FOREIGN KEY (\u0060work_order_id\u0060) REFERENCES \u0060work_orders\u0060 (\u0060id\u0060) ON DELETE CASCADE\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci"
.\tools\schema\snapshots\schema.json:26847:      "CreateSql": "CREATE TABLE \u0060work_order_status_log\u0060 (\n  \u0060id\u0060 int NOT NULL AUTO_INCREMENT,\n  \u0060work_order_id\u0060 int NOT NULL,\n  \u0060old_status\u0060 varchar(50) DEFAULT NULL,\n  \u0060new_status\u0060 varchar(50) DEFAULT NULL,\n  \u0060changed_by\u0060 int DEFAULT NULL,\n  \u0060changed_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP,\n  \u0060note\u0060 text,\n  \u0060created_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP,\n  \u0060updated_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n  \u0060work_order\u0060 varchar(255) DEFAULT NULL,\n  \u0060changed_by_id\u0060 int DEFAULT NULL,\n  \u0060reason\u0060 varchar(400) DEFAULT NULL,\n  \u0060is_incident\u0060 tinyint(1) DEFAULT NULL,\n  \u0060device_info\u0060 varchar(255) DEFAULT NULL,\n  \u0060ip_address\u0060 varchar(45) DEFAULT NULL,\n  PRIMARY KEY (\u0060id\u0060),\n  KEY \u0060fk_wosl_wo\u0060 (\u0060work_order_id\u0060),\n  KEY \u0060fk_wosl_user\u0060 (\u0060changed_by\u0060),\n  CONSTRAINT \u0060fk_wosl_user\u0060 FOREIGN KEY (\u0060changed_by\u0060) REFERENCES \u0060users\u0060 (\u0060id\u0060) ON DELETE SET NULL,\n  CONSTRAINT \u0060fk_wosl_wo\u0060 FOREIGN KEY (\u0060work_order_id\u0060) REFERENCES \u0060work_orders\u0060 (\u0060id\u0060) ON DELETE CASCADE\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci"
.\tools\schema\snapshots\schema.json:27637:      "CreateSql": "CREATE TABLE \u0060work_orders\u0060 (\n  \u0060id\u0060 int NOT NULL AUTO_INCREMENT,\n  \u0060machine_id\u0060 int DEFAULT NULL,\n  \u0060component_id\u0060 int DEFAULT NULL,\n  \u0060type\u0060 enum(\u0027preventivni\u0027,\u0027korektivni\u0027,\u0027vanredni\u0027) DEFAULT NULL,\n  \u0060created_by\u0060 int DEFAULT NULL,\n  \u0060assigned_to\u0060 int DEFAULT NULL,\n  \u0060date_open\u0060 date DEFAULT NULL,\n  \u0060date_close\u0060 date DEFAULT NULL,\n  \u0060description\u0060 text,\n  \u0060result\u0060 text,\n  \u0060status\u0060 enum(\u0027otvoren\u0027,\u0027u_tijeku\u0027,\u0027zavrsen\u0027,\u0027odbijen\u0027,\u0027na_\u2500\u0179ekanju\u0027,\u0027planiran\u0027,\u0027otkazan\u0027) DEFAULT \u0027otvoren\u0027,\n  \u0060digital_signature\u0060 varchar(128) DEFAULT NULL,\n  \u0060priority\u0060 enum(\u0027nizak\u0027,\u0027srednji\u0027,\u0027visok\u0027,\u0027kritican\u0027) DEFAULT \u0027srednji\u0027,\n  \u0060related_incident\u0060 int DEFAULT NULL,\n  \u0060created_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP,\n  \u0060updated_at\u0060 datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n  \u0060status_id\u0060 int DEFAULT NULL,\n  \u0060type_id\u0060 int DEFAULT NULL,\n  \u0060priority_id\u0060 int DEFAULT NULL,\n  \u0060tenant_id\u0060 int DEFAULT NULL,\n  \u0060title\u0060 varchar(255) DEFAULT NULL,\n  \u0060task_description\u0060 varchar(255) DEFAULT NULL,\n  \u0060due_date\u0060 datetime DEFAULT NULL,\n  \u0060closed_at\u0060 datetime DEFAULT NULL,\n  \u0060requested_by_id\u0060 int DEFAULT NULL,\n  \u0060user?\u0060 varchar(255) DEFAULT NULL,\n  \u0060created_by_id\u0060 int DEFAULT NULL,\n  \u0060assigned_to_id\u0060 int DEFAULT NULL,\n  \u0060machine?\u0060 varchar(255) DEFAULT NULL,\n  \u0060machine_component?\u0060 varchar(255) DEFAULT NULL,\n  \u0060capa_case_id\u0060 int DEFAULT NULL,\n  \u0060capa_case?\u0060 varchar(255) DEFAULT NULL,\n  \u0060incident_id\u0060 int DEFAULT NULL,\n  \u0060incident?\u0060 varchar(255) DEFAULT NULL,\n  \u0060notes\u0060 varchar(255) DEFAULT NULL,\n  \u0060last_modified\u0060 datetime DEFAULT NULL,\n  \u0060last_modified_by_id\u0060 int DEFAULT NULL,\n  \u0060device_info\u0060 varchar(255) DEFAULT NULL,\n  \u0060source_ip\u0060 varchar(255) DEFAULT NULL,\n  \u0060session_id\u0060 varchar(255) DEFAULT NULL,\n  \u0060document_path\u0060 varchar(255) DEFAULT NULL,\n  \u0060next_due\u0060 datetime DEFAULT NULL,\n  \u0060external_ref\u0060 varchar(255) DEFAULT NULL,\n  \u0060entry_hash\u0060 varchar(255) DEFAULT NULL,\n  \u0060audit_flag\u0060 tinyint(1) DEFAULT NULL,\n  \u0060anomaly_score\u0060 decimal(10,2) DEFAULT NULL,\n  \u0060photo_before_ids\u0060 varchar(255) DEFAULT NULL,\n  \u0060photo_after_ids\u0060 varchar(255) DEFAULT NULL,\n  \u0060icollection\u003Cwork_order_part\u003E\u0060 varchar(255) DEFAULT NULL,\n  \u0060icollection\u003Cphoto\u003E\u0060 varchar(255) DEFAULT NULL,\n  \u0060icollection\u003Cwork_order_comment\u003E\u0060 varchar(255) DEFAULT NULL,\n  \u0060icollection\u003Cwork_order_status_log\u003E\u0060 varchar(255) DEFAULT NULL,\n  \u0060icollection\u003Cwork_order_signature\u003E\u0060 varchar(255) DEFAULT NULL,\n  \u0060icollection\u003Cwork_order_audit\u003E\u0060 varchar(255) DEFAULT NULL,\n  PRIMARY KEY (\u0060id\u0060),\n  KEY \u0060fk_wo_comp\u0060 (\u0060component_id\u0060),\n  KEY \u0060fk_wo_created\u0060 (\u0060created_by\u0060),\n  KEY \u0060fk_wo_assigned\u0060 (\u0060assigned_to\u0060),\n  KEY \u0060fk_wo_incident\u0060 (\u0060related_incident\u0060),\n  KEY \u0060idx_wo_status_id\u0060 (\u0060status_id\u0060),\n  KEY \u0060idx_wo_type_id\u0060 (\u0060type_id\u0060),\n  KEY \u0060idx_wo_priority_id\u0060 (\u0060priority_id\u0060),\n  KEY \u0060idx_wo_machine_stat\u0060 (\u0060machine_id\u0060,\u0060status_id\u0060),\n  KEY \u0060fk_wo_tenant_id\u0060 (\u0060tenant_id\u0060),\n  CONSTRAINT \u0060fk_wo_assigned\u0060 FOREIGN KEY (\u0060assigned_to\u0060) REFERENCES \u0060users\u0060 (\u0060id\u0060),\n  CONSTRAINT \u0060fk_wo_comp\u0060 FOREIGN KEY (\u0060component_id\u0060) REFERENCES \u0060machine_components\u0060 (\u0060id\u0060),\n  CONSTRAINT \u0060fk_wo_created\u0060 FOREIGN KEY (\u0060created_by\u0060) REFERENCES \u0060users\u0060 (\u0060id\u0060),\n  CONSTRAINT \u0060fk_wo_incident\u0060 FOREIGN KEY (\u0060related_incident\u0060) REFERENCES \u0060incident_log\u0060 (\u0060id\u0060),\n  CONSTRAINT \u0060fk_wo_machine\u0060 FOREIGN KEY (\u0060machine_id\u0060) REFERENCES \u0060machines\u0060 (\u0060id\u0060),\n  CONSTRAINT \u0060fk_wo_priority\u0060 FOREIGN KEY (\u0060priority_id\u0060) REFERENCES \u0060ref_value\u0060 (\u0060id\u0060) ON DELETE SET NULL,\n  CONSTRAINT \u0060fk_wo_status\u0060 FOREIGN KEY (\u0060status_id\u0060) REFERENCES \u0060ref_value\u0060 (\u0060id\u0060) ON DELETE SET NULL,\n  CONSTRAINT \u0060fk_wo_tenant_id\u0060 FOREIGN KEY (\u0060tenant_id\u0060) REFERENCES \u0060tenants\u0060 (\u0060id\u0060),\n  CONSTRAINT \u0060fk_wo_type\u0060 FOREIGN KEY (\u0060type_id\u0060) REFERENCES \u0060ref_value\u0060 (\u0060id\u0060) ON DELETE SET NULL\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci"
.\tools\schema\snapshots\schema.json:28132:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_admin_activity_log_ad_audit\u0060 AFTER DELETE ON \u0060admin_activity_log\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027DELETE\u0027, \u0027admin_activity_log\u0027, \u0027AdminActivityLogPage\u0027, OLD.id, NULL,\n     NULL, NULL, CONCAT(\u0027admin_activity_log delete\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027warning\u0027);\nEND"
.\tools\schema\snapshots\schema.json:28139:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_admin_activity_log_ai_audit\u0060 AFTER INSERT ON \u0060admin_activity_log\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027INSERT\u0027, \u0027admin_activity_log\u0027, \u0027AdminActivityLogPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027admin_activity_log insert\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\nEND"
.\tools\schema\snapshots\schema.json:28146:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_admin_activity_log_au_audit\u0060 AFTER UPDATE ON \u0060admin_activity_log\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027UPDATE\u0027, \u0027admin_activity_log\u0027, \u0027AdminActivityLogPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027admin_activity_log update\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\n\nEND"
.\tools\schema\snapshots\schema.json:28153:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_admin_activity_log_fk_guard\u0060 BEFORE INSERT ON \u0060admin_activity_log\u0060 FOR EACH ROW BEGIN\n  IF NEW.admin_id IS NOT NULL THEN\n    IF (SELECT COUNT(*) FROM users WHERE id = NEW.admin_id) = 0 THEN\n      SET NEW.admin_id = NULL;\n    END IF;\n  END IF;\nEND"
.\tools\schema\snapshots\schema.json:28160:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_api_audit_log_ad_audit\u0060 AFTER DELETE ON \u0060api_audit_log\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027DELETE\u0027, \u0027api_audit_log\u0027, \u0027ApiAuditLogPage\u0027, OLD.id, NULL,\n     NULL, NULL, CONCAT(\u0027api_audit_log delete\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027warning\u0027);\nEND"
.\tools\schema\snapshots\schema.json:28167:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_api_audit_log_ai_audit\u0060 AFTER INSERT ON \u0060api_audit_log\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027INSERT\u0027, \u0027api_audit_log\u0027, \u0027ApiAuditLogPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027api_audit_log insert\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\nEND"
.\tools\schema\snapshots\schema.json:28174:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_api_audit_log_au_audit\u0060 AFTER UPDATE ON \u0060api_audit_log\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027UPDATE\u0027, \u0027api_audit_log\u0027, \u0027ApiAuditLogPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027api_audit_log update\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\n\nEND"
.\tools\schema\snapshots\schema.json:28181:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_api_keys_ad_audit\u0060 AFTER DELETE ON \u0060api_keys\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027DELETE\u0027, \u0027api_keys\u0027, \u0027ApiKeysPage\u0027, OLD.id, NULL,\n     NULL, NULL, CONCAT(\u0027api_keys delete\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027warning\u0027);\nEND"
.\tools\schema\snapshots\schema.json:28188:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_api_keys_ai_audit\u0060 AFTER INSERT ON \u0060api_keys\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027INSERT\u0027, \u0027api_keys\u0027, \u0027ApiKeysPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027api_keys insert\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\nEND"
.\tools\schema\snapshots\schema.json:28195:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_api_keys_au_audit\u0060 AFTER UPDATE ON \u0060api_keys\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027UPDATE\u0027, \u0027api_keys\u0027, \u0027ApiKeysPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027api_keys update\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\n\nEND"
.\tools\schema\snapshots\schema.json:28202:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_api_usage_log_ad_audit\u0060 AFTER DELETE ON \u0060api_usage_log\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027DELETE\u0027, \u0027api_usage_log\u0027, \u0027ApiUsageLogPage\u0027, OLD.id, NULL,\n     NULL, NULL, CONCAT(\u0027api_usage_log delete\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027warning\u0027);\nEND"
.\tools\schema\snapshots\schema.json:28209:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_api_usage_log_ai_audit\u0060 AFTER INSERT ON \u0060api_usage_log\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027INSERT\u0027, \u0027api_usage_log\u0027, \u0027ApiUsageLogPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027api_usage_log insert\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\nEND"
.\tools\schema\snapshots\schema.json:28216:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_api_usage_log_au_audit\u0060 AFTER UPDATE ON \u0060api_usage_log\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027UPDATE\u0027, \u0027api_usage_log\u0027, \u0027ApiUsageLogPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027api_usage_log update\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\n\nEND"
.\tools\schema\snapshots\schema.json:28223:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_attachments_ad_audit\u0060 AFTER DELETE ON \u0060attachments\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027DELETE\u0027, \u0027attachments\u0027, \u0027AttachmentsPage\u0027, OLD.id, NULL,\n     NULL, NULL, CONCAT(\u0027attachments delete\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027warning\u0027);\nEND"
.\tools\schema\snapshots\schema.json:28230:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_attachments_ai_audit\u0060 AFTER INSERT ON \u0060attachments\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027INSERT\u0027, \u0027attachments\u0027, \u0027AttachmentsPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027attachments insert\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\nEND"
.\tools\schema\snapshots\schema.json:28237:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_attachments_au_audit\u0060 AFTER UPDATE ON \u0060attachments\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027UPDATE\u0027, \u0027attachments\u0027, \u0027AttachmentsPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027attachments update\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\n\nEND"
.\tools\schema\snapshots\schema.json:28244:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_buildings_ad_audit\u0060 AFTER DELETE ON \u0060buildings\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027DELETE\u0027, \u0027buildings\u0027, \u0027BuildingsPage\u0027, OLD.id, NULL,\n     NULL, NULL, CONCAT(\u0027buildings delete\u0027, CONCAT(\u0027; code=\u0027, COALESCE(OLD.code,\u0027\u0027)), CONCAT(\u0027; name=\u0027, COALESCE(OLD.name,\u0027\u0027))), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027warning\u0027);\nEND"
.\tools\schema\snapshots\schema.json:28251:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_buildings_ai_audit\u0060 AFTER INSERT ON \u0060buildings\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027INSERT\u0027, \u0027buildings\u0027, \u0027BuildingsPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027buildings insert\u0027, CONCAT(\u0027; code=\u0027, COALESCE(NEW.code,\u0027\u0027)), CONCAT(\u0027; name=\u0027, COALESCE(NEW.name,\u0027\u0027))), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\nEND"
.\tools\schema\snapshots\schema.json:28258:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_buildings_au_audit\u0060 AFTER UPDATE ON \u0060buildings\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027UPDATE\u0027, \u0027buildings\u0027, \u0027BuildingsPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027buildings update\u0027, CONCAT(\u0027; code: \u0027, COALESCE(OLD.code,\u0027\u0027), \u0027 \u2192 \u0027, COALESCE(NEW.code,\u0027\u0027)), CONCAT(\u0027; name: \u0027, COALESCE(OLD.name,\u0027\u0027), \u0027 \u2192 \u0027, COALESCE(NEW.name,\u0027\u0027))), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\n\n  IF COALESCE(OLD.code,\u0027\u0027) \u003C\u003E COALESCE(NEW.code,\u0027\u0027) THEN\n    INSERT INTO system_event_log\n      (user_id, event_type, table_name, related_module, record_id, field_name,\n       old_value, new_value, description, source_ip, device_info, session_id, severity)\n    VALUES\n      (NULL, \u0027UPDATE\u0027, \u0027buildings\u0027, \u0027BuildingsPage\u0027, NEW.id, \u0027code\u0027,\n       OLD.code, NEW.code, \u0027buildings update: code changed\u0027, \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\n  END IF;\n\n  IF COALESCE(OLD.name,\u0027\u0027) \u003C\u003E COALESCE(NEW.name,\u0027\u0027) THEN\n    INSERT INTO system_event_log\n      (user_id, event_type, table_name, related_module, record_id, field_name,\n       old_value, new_value, description, source_ip, device_info, session_id, severity)\n    VALUES\n      (NULL, \u0027UPDATE\u0027, \u0027buildings\u0027, \u0027BuildingsPage\u0027, NEW.id, \u0027name\u0027,\n       OLD.name, NEW.name, \u0027buildings update: name changed\u0027, \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\n  END IF;\nEND"
.\tools\schema\snapshots\schema.json:28265:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_calibrations_ad_audit\u0060 AFTER DELETE ON \u0060calibrations\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027DELETE\u0027, \u0027calibrations\u0027, \u0027CalibrationsPage\u0027, OLD.id, NULL,\n     NULL, NULL, CONCAT(\u0027calibrations delete\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027warning\u0027);\nEND"
.\tools\schema\snapshots\schema.json:28272:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_calibrations_ai_audit\u0060 AFTER INSERT ON \u0060calibrations\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027INSERT\u0027, \u0027calibrations\u0027, \u0027CalibrationsPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027calibrations insert\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\nEND"
.\tools\schema\snapshots\schema.json:28279:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_calibrations_au_audit\u0060 AFTER UPDATE ON \u0060calibrations\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027UPDATE\u0027, \u0027calibrations\u0027, \u0027CalibrationsPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027calibrations update\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\n\nEND"
.\tools\schema\snapshots\schema.json:28286:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_calibrations_delete\u0060 AFTER DELETE ON \u0060calibrations\u0060 FOR EACH ROW BEGIN\n    INSERT INTO calibration_audit_log (\n        calibration_id, user_id, action, old_value, source_ip\n    ) VALUES (\n        OLD.id, OLD.last_modified_by_id, \u0027DELETE\u0027, OLD.comment, OLD.source_ip\n    );\n\n    INSERT INTO system_event_log(user_id, event_type, table_name, related_module, record_id, description, source_ip, severity)\n    VALUES (OLD.last_modified_by_id, \u0027DELETE\u0027, \u0027calibrations\u0027, \u0027CalibrationModule\u0027, OLD.id,\n            CONCAT(\u0027Deleted calibration record ID=\u0027, OLD.id), \u0027system\u0027, \u0027critical\u0027);\nEND"
.\tools\schema\snapshots\schema.json:28293:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_calibrations_insert\u0060 AFTER INSERT ON \u0060calibrations\u0060 FOR EACH ROW BEGIN\n    INSERT INTO calibration_audit_log (\n        calibration_id, user_id, action, new_value, source_ip\n    ) VALUES (\n        NEW.id, NEW.last_modified_by_id, \u0027CREATE\u0027,\n        CONCAT(\u0027Created calibration for component \u0027, NEW.component_id), NEW.source_ip\n    );\n\n    INSERT INTO system_event_log(user_id, event_type, table_name, related_module, record_id, description, source_ip, severity)\n    VALUES (NEW.last_modified_by_id, \u0027CREATE\u0027, \u0027calibrations\u0027, \u0027CalibrationModule\u0027, NEW.id,\n            CONCAT(\u0027Created calibration record ID=\u0027, NEW.id), NEW.source_ip, \u0027audit\u0027);\nEND"
.\tools\schema\snapshots\schema.json:28300:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_calibrations_update\u0060 AFTER UPDATE ON \u0060calibrations\u0060 FOR EACH ROW BEGIN\n    INSERT INTO calibration_audit_log (\n        calibration_id, user_id, action, old_value, new_value, source_ip\n    ) VALUES (\n        NEW.id, NEW.last_modified_by_id, \u0027UPDATE\u0027, OLD.comment, NEW.comment, NEW.source_ip\n    );\n\n    INSERT INTO system_event_log(user_id, event_type, table_name, related_module, record_id, field_name, old_value, new_value, description, source_ip, severity)\n    VALUES (NEW.last_modified_by_id, \u0027UPDATE\u0027, \u0027calibrations\u0027, \u0027CalibrationModule\u0027, NEW.id,\n            \u0027comment\u0027, OLD.comment, NEW.comment, \u0027Updated calibration record\u0027, NEW.source_ip, \u0027audit\u0027);\nEND"
.\tools\schema\snapshots\schema.json:28307:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_calibration_audit_log_ad_audit\u0060 AFTER DELETE ON \u0060calibration_audit_log\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027DELETE\u0027, \u0027calibration_audit_log\u0027, \u0027CalibrationAuditLogPage\u0027, OLD.id, NULL,\n     NULL, NULL, CONCAT(\u0027calibration_audit_log delete\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027warning\u0027);\nEND"
.\tools\schema\snapshots\schema.json:28314:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_calibration_audit_log_ai_audit\u0060 AFTER INSERT ON \u0060calibration_audit_log\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027INSERT\u0027, \u0027calibration_audit_log\u0027, \u0027CalibrationAuditLogPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027calibration_audit_log insert\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\nEND"
.\tools\schema\snapshots\schema.json:28321:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_calibration_audit_log_au_audit\u0060 AFTER UPDATE ON \u0060calibration_audit_log\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027UPDATE\u0027, \u0027calibration_audit_log\u0027, \u0027CalibrationAuditLogPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027calibration_audit_log update\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\n\nEND"
.\tools\schema\snapshots\schema.json:28328:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_calibration_export_log_ad_audit\u0060 AFTER DELETE ON \u0060calibration_export_log\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027DELETE\u0027, \u0027calibration_export_log\u0027, \u0027CalibrationExportLogPage\u0027, OLD.id, NULL,\n     NULL, NULL, CONCAT(\u0027calibration_export_log delete\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027warning\u0027);\nEND"
.\tools\schema\snapshots\schema.json:28335:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_calibration_export_log_ai_audit\u0060 AFTER INSERT ON \u0060calibration_export_log\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027INSERT\u0027, \u0027calibration_export_log\u0027, \u0027CalibrationExportLogPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027calibration_export_log insert\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\nEND"
.\tools\schema\snapshots\schema.json:28342:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_calibration_export_log_au_audit\u0060 AFTER UPDATE ON \u0060calibration_export_log\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027UPDATE\u0027, \u0027calibration_export_log\u0027, \u0027CalibrationExportLogPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027calibration_export_log update\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\n\nEND"
.\tools\schema\snapshots\schema.json:28349:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_calibration_sensors_ad_audit\u0060 AFTER DELETE ON \u0060calibration_sensors\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027DELETE\u0027, \u0027calibration_sensors\u0027, \u0027CalibrationSensorsPage\u0027, OLD.id, NULL,\n     NULL, NULL, CONCAT(\u0027calibration_sensors delete\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027warning\u0027);\nEND"
.\tools\schema\snapshots\schema.json:28356:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_calibration_sensors_ai_audit\u0060 AFTER INSERT ON \u0060calibration_sensors\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027INSERT\u0027, \u0027calibration_sensors\u0027, \u0027CalibrationSensorsPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027calibration_sensors insert\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\nEND"
.\tools\schema\snapshots\schema.json:28363:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_calibration_sensors_au_audit\u0060 AFTER UPDATE ON \u0060calibration_sensors\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027UPDATE\u0027, \u0027calibration_sensors\u0027, \u0027CalibrationSensorsPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027calibration_sensors update\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\n\nEND"
.\tools\schema\snapshots\schema.json:28377:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_cal_sync2_u\u0060 BEFORE UPDATE ON \u0060calibrations\u0060 FOR EACH ROW BEGIN\n  IF (NEW.result \u003C=\u003E OLD.result) = 0 THEN\n    CALL ref_touch(\u0027calibration_result\u0027, NEW.result, NEW.result);\n    IF LAST_INSERT_ID() IS NOT NULL THEN SET NEW.result_id = LAST_INSERT_ID(); END IF;\n  END IF;\nEND"
.\tools\schema\snapshots\schema.json:28384:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_capa_actions_ad_audit\u0060 AFTER DELETE ON \u0060capa_actions\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027DELETE\u0027, \u0027capa_actions\u0027, \u0027CapaActionsPage\u0027, OLD.id, NULL,\n     NULL, NULL, CONCAT(\u0027capa_actions delete\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027warning\u0027);\nEND"
.\tools\schema\snapshots\schema.json:28391:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_capa_actions_ai_audit\u0060 AFTER INSERT ON \u0060capa_actions\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027INSERT\u0027, \u0027capa_actions\u0027, \u0027CapaActionsPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027capa_actions insert\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\nEND"
.\tools\schema\snapshots\schema.json:28398:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_capa_actions_au_audit\u0060 AFTER UPDATE ON \u0060capa_actions\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027UPDATE\u0027, \u0027capa_actions\u0027, \u0027CapaActionsPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027capa_actions update\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\n\nEND"
.\tools\schema\snapshots\schema.json:28405:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_capa_action_log_ad_audit\u0060 AFTER DELETE ON \u0060capa_action_log\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027DELETE\u0027, \u0027capa_action_log\u0027, \u0027CapaActionLogPage\u0027, OLD.id, NULL,\n     NULL, NULL, CONCAT(\u0027capa_action_log delete\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027warning\u0027);\nEND"
.\tools\schema\snapshots\schema.json:28412:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_capa_action_log_ai_audit\u0060 AFTER INSERT ON \u0060capa_action_log\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027INSERT\u0027, \u0027capa_action_log\u0027, \u0027CapaActionLogPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027capa_action_log insert\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\nEND"
.\tools\schema\snapshots\schema.json:28419:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_capa_action_log_au_audit\u0060 AFTER UPDATE ON \u0060capa_action_log\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027UPDATE\u0027, \u0027capa_action_log\u0027, \u0027CapaActionLogPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027capa_action_log update\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\n\nEND"
.\tools\schema\snapshots\schema.json:28426:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_capa_cases_ad_audit\u0060 AFTER DELETE ON \u0060capa_cases\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027DELETE\u0027, \u0027capa_cases\u0027, \u0027CapaCasesPage\u0027, OLD.id, NULL,\n     NULL, NULL, CONCAT(\u0027capa_cases delete\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027warning\u0027);\nEND"
.\tools\schema\snapshots\schema.json:28433:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_capa_cases_ai_audit\u0060 AFTER INSERT ON \u0060capa_cases\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027INSERT\u0027, \u0027capa_cases\u0027, \u0027CapaCasesPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027capa_cases insert\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\nEND"
.\tools\schema\snapshots\schema.json:28440:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_capa_cases_au_audit\u0060 AFTER UPDATE ON \u0060capa_cases\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027UPDATE\u0027, \u0027capa_cases\u0027, \u0027CapaCasesPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027capa_cases update\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\n\nEND"
.\tools\schema\snapshots\schema.json:28447:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_capa_status_history_ad_audit\u0060 AFTER DELETE ON \u0060capa_status_history\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027DELETE\u0027, \u0027capa_status_history\u0027, \u0027CapaStatusHistoryPage\u0027, OLD.id, NULL,\n     NULL, NULL, CONCAT(\u0027capa_status_history delete\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027warning\u0027);\nEND"
.\tools\schema\snapshots\schema.json:28454:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_capa_status_history_ai_audit\u0060 AFTER INSERT ON \u0060capa_status_history\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027INSERT\u0027, \u0027capa_status_history\u0027, \u0027CapaStatusHistoryPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027capa_status_history insert\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\nEND"
.\tools\schema\snapshots\schema.json:28461:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_capa_status_history_au_audit\u0060 AFTER UPDATE ON \u0060capa_status_history\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027UPDATE\u0027, \u0027capa_status_history\u0027, \u0027CapaStatusHistoryPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027capa_status_history update\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\n\nEND"
.\tools\schema\snapshots\schema.json:28475:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_capa_sync_u\u0060 BEFORE UPDATE ON \u0060capa_cases\u0060 FOR EACH ROW BEGIN\n  IF (NEW.status \u003C=\u003E OLD.status) = 0 THEN\n    CALL ref_touch(\u0027capa_status\u0027, NEW.status, NEW.status);\n    IF LAST_INSERT_ID() IS NOT NULL THEN SET NEW.status_id = LAST_INSERT_ID(); END IF;\n  END IF;\nEND"
.\tools\schema\snapshots\schema.json:28482:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_checklist_items_ad_audit\u0060 AFTER DELETE ON \u0060checklist_items\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027DELETE\u0027, \u0027checklist_items\u0027, \u0027ChecklistItemsPage\u0027, OLD.id, NULL,\n     NULL, NULL, CONCAT(\u0027checklist_items delete\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027warning\u0027);\nEND"
.\tools\schema\snapshots\schema.json:28489:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_checklist_items_ai_audit\u0060 AFTER INSERT ON \u0060checklist_items\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027INSERT\u0027, \u0027checklist_items\u0027, \u0027ChecklistItemsPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027checklist_items insert\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\nEND"
.\tools\schema\snapshots\schema.json:28496:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_checklist_items_au_audit\u0060 AFTER UPDATE ON \u0060checklist_items\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027UPDATE\u0027, \u0027checklist_items\u0027, \u0027ChecklistItemsPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027checklist_items update\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\n\nEND"
.\tools\schema\snapshots\schema.json:28503:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_checklist_templates_ad_audit\u0060 AFTER DELETE ON \u0060checklist_templates\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027DELETE\u0027, \u0027checklist_templates\u0027, \u0027ChecklistTemplatesPage\u0027, OLD.id, NULL,\n     NULL, NULL, CONCAT(\u0027checklist_templates delete\u0027, CONCAT(\u0027; code=\u0027, COALESCE(OLD.code,\u0027\u0027)), CONCAT(\u0027; name=\u0027, COALESCE(OLD.name,\u0027\u0027))), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027warning\u0027);\nEND"
.\tools\schema\snapshots\schema.json:28510:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_checklist_templates_ai_audit\u0060 AFTER INSERT ON \u0060checklist_templates\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027INSERT\u0027, \u0027checklist_templates\u0027, \u0027ChecklistTemplatesPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027checklist_templates insert\u0027, CONCAT(\u0027; code=\u0027, COALESCE(NEW.code,\u0027\u0027)), CONCAT(\u0027; name=\u0027, COALESCE(NEW.name,\u0027\u0027))), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\nEND"
.\tools\schema\snapshots\schema.json:28517:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_checklist_templates_au_audit\u0060 AFTER UPDATE ON \u0060checklist_templates\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027UPDATE\u0027, \u0027checklist_templates\u0027, \u0027ChecklistTemplatesPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027checklist_templates update\u0027, CONCAT(\u0027; code: \u0027, COALESCE(OLD.code,\u0027\u0027), \u0027 \u2192 \u0027, COALESCE(NEW.code,\u0027\u0027)), CONCAT(\u0027; name: \u0027, COALESCE(OLD.name,\u0027\u0027), \u0027 \u2192 \u0027, COALESCE(NEW.name,\u0027\u0027))), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\n\n  IF COALESCE(OLD.code,\u0027\u0027) \u003C\u003E COALESCE(NEW.code,\u0027\u0027) THEN\n    INSERT INTO system_event_log\n      (user_id, event_type, table_name, related_module, record_id, field_name,\n       old_value, new_value, description, source_ip, device_info, session_id, severity)\n    VALUES\n      (NULL, \u0027UPDATE\u0027, \u0027checklist_templates\u0027, \u0027ChecklistTemplatesPage\u0027, NEW.id, \u0027code\u0027,\n       OLD.code, NEW.code, \u0027checklist_templates update: code changed\u0027, \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\n  END IF;\n\n  IF COALESCE(OLD.name,\u0027\u0027) \u003C\u003E COALESCE(NEW.name,\u0027\u0027) THEN\n    INSERT INTO system_event_log\n      (user_id, event_type, table_name, related_module, record_id, field_name,\n       old_value, new_value, description, source_ip, device_info, session_id, severity)\n    VALUES\n      (NULL, \u0027UPDATE\u0027, \u0027checklist_templates\u0027, \u0027ChecklistTemplatesPage\u0027, NEW.id, \u0027name\u0027,\n       OLD.name, NEW.name, \u0027checklist_templates update: name changed\u0027, \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\n  END IF;\nEND"
.\tools\schema\snapshots\schema.json:28524:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_comments_ad_audit\u0060 AFTER DELETE ON \u0060comments\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027DELETE\u0027, \u0027comments\u0027, \u0027CommentsPage\u0027, OLD.id, NULL,\n     NULL, NULL, CONCAT(\u0027comments delete\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027warning\u0027);\nEND"
.\tools\schema\snapshots\schema.json:28531:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_comments_ai_audit\u0060 AFTER INSERT ON \u0060comments\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027INSERT\u0027, \u0027comments\u0027, \u0027CommentsPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027comments insert\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\nEND"
.\tools\schema\snapshots\schema.json:28538:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_comments_au_audit\u0060 AFTER UPDATE ON \u0060comments\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027UPDATE\u0027, \u0027comments\u0027, \u0027CommentsPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027comments update\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\n\nEND"
.\tools\schema\snapshots\schema.json:28545:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_component_devices_ad_audit\u0060 AFTER DELETE ON \u0060component_devices\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027DELETE\u0027, \u0027component_devices\u0027, \u0027ComponentDevicesPage\u0027, OLD.id, NULL,\n     NULL, NULL, CONCAT(\u0027component_devices delete\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027warning\u0027);\nEND"
.\tools\schema\snapshots\schema.json:28552:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_component_devices_ai_audit\u0060 AFTER INSERT ON \u0060component_devices\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027INSERT\u0027, \u0027component_devices\u0027, \u0027ComponentDevicesPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027component_devices insert\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\nEND"
.\tools\schema\snapshots\schema.json:28559:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_component_devices_au_audit\u0060 AFTER UPDATE ON \u0060component_devices\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027UPDATE\u0027, \u0027component_devices\u0027, \u0027ComponentDevicesPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027component_devices update\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\n\nEND"
.\tools\schema\snapshots\schema.json:28566:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_component_models_ad_audit\u0060 AFTER DELETE ON \u0060component_models\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027DELETE\u0027, \u0027component_models\u0027, \u0027ComponentModelsPage\u0027, OLD.id, NULL,\n     NULL, NULL, CONCAT(\u0027component_models delete\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027warning\u0027);\nEND"
.\tools\schema\snapshots\schema.json:28573:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_component_models_ai_audit\u0060 AFTER INSERT ON \u0060component_models\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027INSERT\u0027, \u0027component_models\u0027, \u0027ComponentModelsPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027component_models insert\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\nEND"
.\tools\schema\snapshots\schema.json:28580:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_component_models_au_audit\u0060 AFTER UPDATE ON \u0060component_models\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027UPDATE\u0027, \u0027component_models\u0027, \u0027ComponentModelsPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027component_models update\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\n\nEND"
.\tools\schema\snapshots\schema.json:28587:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_component_parts_ad_audit\u0060 AFTER DELETE ON \u0060component_parts\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027DELETE\u0027, \u0027component_parts\u0027, \u0027ComponentPartsPage\u0027, OLD.id, NULL,\n     NULL, NULL, CONCAT(\u0027component_parts delete\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027warning\u0027);\nEND"
.\tools\schema\snapshots\schema.json:28594:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_component_parts_ai_audit\u0060 AFTER INSERT ON \u0060component_parts\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027INSERT\u0027, \u0027component_parts\u0027, \u0027ComponentPartsPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027component_parts insert\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\nEND"
.\tools\schema\snapshots\schema.json:28601:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_component_parts_au_audit\u0060 AFTER UPDATE ON \u0060component_parts\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027UPDATE\u0027, \u0027component_parts\u0027, \u0027ComponentPartsPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027component_parts update\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\n\nEND"
.\tools\schema\snapshots\schema.json:28608:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_component_qualifications_ad_audit\u0060 AFTER DELETE ON \u0060component_qualifications\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027DELETE\u0027, \u0027component_qualifications\u0027, \u0027ComponentQualificationsPage\u0027, OLD.id, NULL,\n     NULL, NULL, CONCAT(\u0027component_qualifications delete\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027warning\u0027);\nEND"
.\tools\schema\snapshots\schema.json:28615:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_component_qualifications_ai_audit\u0060 AFTER INSERT ON \u0060component_qualifications\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027INSERT\u0027, \u0027component_qualifications\u0027, \u0027ComponentQualificationsPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027component_qualifications insert\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\nEND"
.\tools\schema\snapshots\schema.json:28622:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_component_qualifications_au_audit\u0060 AFTER UPDATE ON \u0060component_qualifications\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027UPDATE\u0027, \u0027component_qualifications\u0027, \u0027ComponentQualificationsPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027component_qualifications update\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\n\nEND"
.\tools\schema\snapshots\schema.json:28629:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_component_types_ad_audit\u0060 AFTER DELETE ON \u0060component_types\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027DELETE\u0027, \u0027component_types\u0027, \u0027ComponentTypesPage\u0027, OLD.id, NULL,\n     NULL, NULL, CONCAT(\u0027component_types delete\u0027, CONCAT(\u0027; code=\u0027, COALESCE(OLD.code,\u0027\u0027)), CONCAT(\u0027; name=\u0027, COALESCE(OLD.name,\u0027\u0027))), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027warning\u0027);\nEND"
.\tools\schema\snapshots\schema.json:28636:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_component_types_ai_audit\u0060 AFTER INSERT ON \u0060component_types\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027INSERT\u0027, \u0027component_types\u0027, \u0027ComponentTypesPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027component_types insert\u0027, CONCAT(\u0027; code=\u0027, COALESCE(NEW.code,\u0027\u0027)), CONCAT(\u0027; name=\u0027, COALESCE(NEW.name,\u0027\u0027))), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\nEND"
.\tools\schema\snapshots\schema.json:28643:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_component_types_au_audit\u0060 AFTER UPDATE ON \u0060component_types\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027UPDATE\u0027, \u0027component_types\u0027, \u0027ComponentTypesPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027component_types update\u0027, CONCAT(\u0027; code: \u0027, COALESCE(OLD.code,\u0027\u0027), \u0027 \u2192 \u0027, COALESCE(NEW.code,\u0027\u0027)), CONCAT(\u0027; name: \u0027, COALESCE(OLD.name,\u0027\u0027), \u0027 \u2192 \u0027, COALESCE(NEW.name,\u0027\u0027))), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\n\n  IF COALESCE(OLD.code,\u0027\u0027) \u003C\u003E COALESCE(NEW.code,\u0027\u0027) THEN\n    INSERT INTO system_event_log\n      (user_id, event_type, table_name, related_module, record_id, field_name,\n       old_value, new_value, description, source_ip, device_info, session_id, severity)\n    VALUES\n      (NULL, \u0027UPDATE\u0027, \u0027component_types\u0027, \u0027ComponentTypesPage\u0027, NEW.id, \u0027code\u0027,\n       OLD.code, NEW.code, \u0027component_types update: code changed\u0027, \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\n  END IF;\n\n  IF COALESCE(OLD.name,\u0027\u0027) \u003C\u003E COALESCE(NEW.name,\u0027\u0027) THEN\n    INSERT INTO system_event_log\n      (user_id, event_type, table_name, related_module, record_id, field_name,\n       old_value, new_value, description, source_ip, device_info, session_id, severity)\n    VALUES\n      (NULL, \u0027UPDATE\u0027, \u0027component_types\u0027, \u0027ComponentTypesPage\u0027, NEW.id, \u0027name\u0027,\n       OLD.name, NEW.name, \u0027component_types update: name changed\u0027, \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\n  END IF;\nEND"
.\tools\schema\snapshots\schema.json:28650:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_config_change_log_ad_audit\u0060 AFTER DELETE ON \u0060config_change_log\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027DELETE\u0027, \u0027config_change_log\u0027, \u0027ConfigChangeLogPage\u0027, OLD.id, NULL,\n     NULL, NULL, CONCAT(\u0027config_change_log delete\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027warning\u0027);\nEND"
.\tools\schema\snapshots\schema.json:28657:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_config_change_log_ai_audit\u0060 AFTER INSERT ON \u0060config_change_log\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027INSERT\u0027, \u0027config_change_log\u0027, \u0027ConfigChangeLogPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027config_change_log insert\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\nEND"
.\tools\schema\snapshots\schema.json:28664:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_config_change_log_au_audit\u0060 AFTER UPDATE ON \u0060config_change_log\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027UPDATE\u0027, \u0027config_change_log\u0027, \u0027ConfigChangeLogPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027config_change_log update\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\n\nEND"
.\tools\schema\snapshots\schema.json:28671:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_contractor_interventions_ad_audit\u0060 AFTER DELETE ON \u0060contractor_interventions\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027DELETE\u0027, \u0027contractor_interventions\u0027, \u0027ContractorInterventionsPage\u0027, OLD.id, NULL,\n     NULL, NULL, CONCAT(\u0027contractor_interventions delete\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027warning\u0027);\nEND"
.\tools\schema\snapshots\schema.json:28678:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_contractor_interventions_ai_audit\u0060 AFTER INSERT ON \u0060contractor_interventions\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027INSERT\u0027, \u0027contractor_interventions\u0027, \u0027ContractorInterventionsPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027contractor_interventions insert\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\nEND"
.\tools\schema\snapshots\schema.json:28685:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_contractor_interventions_au_audit\u0060 AFTER UPDATE ON \u0060contractor_interventions\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027UPDATE\u0027, \u0027contractor_interventions\u0027, \u0027ContractorInterventionsPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027contractor_interventions update\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\n\nEND"
.\tools\schema\snapshots\schema.json:28692:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_contractor_intervention_audit_ad_audit\u0060 AFTER DELETE ON \u0060contractor_intervention_audit\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027DELETE\u0027, \u0027contractor_intervention_audit\u0027, \u0027ContractorInterventionAuditPage\u0027, OLD.id, NULL,\n     NULL, NULL, CONCAT(\u0027contractor_intervention_audit delete\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027warning\u0027);\nEND"
.\tools\schema\snapshots\schema.json:28699:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_contractor_intervention_audit_ai_audit\u0060 AFTER INSERT ON \u0060contractor_intervention_audit\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027INSERT\u0027, \u0027contractor_intervention_audit\u0027, \u0027ContractorInterventionAuditPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027contractor_intervention_audit insert\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\nEND"
.\tools\schema\snapshots\schema.json:28706:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_contractor_intervention_audit_au_audit\u0060 AFTER UPDATE ON \u0060contractor_intervention_audit\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027UPDATE\u0027, \u0027contractor_intervention_audit\u0027, \u0027ContractorInterventionAuditPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027contractor_intervention_audit update\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\n\nEND"
.\tools\schema\snapshots\schema.json:28720:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_cs_sync_u\u0060 BEFORE UPDATE ON \u0060calibration_sensors\u0060 FOR EACH ROW BEGIN\n  IF (NEW.sensor_type \u003C=\u003E OLD.sensor_type) = 0 THEN\n    CALL ref_touch(\u0027sensor_type\u0027, NEW.sensor_type, NEW.sensor_type);\n    IF LAST_INSERT_ID() IS NOT NULL THEN SET NEW.sensor_type_id = LAST_INSERT_ID(); END IF;\n  END IF;\nEND"
.\tools\schema\snapshots\schema.json:28727:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_dashboards_ad_audit\u0060 AFTER DELETE ON \u0060dashboards\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027DELETE\u0027, \u0027dashboards\u0027, \u0027DashboardsPage\u0027, OLD.id, NULL,\n     NULL, NULL, CONCAT(\u0027dashboards delete\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027warning\u0027);\nEND"
.\tools\schema\snapshots\schema.json:28734:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_dashboards_ai_audit\u0060 AFTER INSERT ON \u0060dashboards\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027INSERT\u0027, \u0027dashboards\u0027, \u0027DashboardsPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027dashboards insert\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\nEND"
.\tools\schema\snapshots\schema.json:28741:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_dashboards_au_audit\u0060 AFTER UPDATE ON \u0060dashboards\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027UPDATE\u0027, \u0027dashboards\u0027, \u0027DashboardsPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027dashboards update\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\n\nEND"
.\tools\schema\snapshots\schema.json:28748:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_delegated_permissions_ad_audit\u0060 AFTER DELETE ON \u0060delegated_permissions\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027DELETE\u0027, \u0027delegated_permissions\u0027, \u0027DelegatedPermissionsPage\u0027, OLD.id, NULL,\n     NULL, NULL, CONCAT(\u0027delegated_permissions delete\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027warning\u0027);\nEND"
.\tools\schema\snapshots\schema.json:28755:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_delegated_permissions_ai_audit\u0060 AFTER INSERT ON \u0060delegated_permissions\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027INSERT\u0027, \u0027delegated_permissions\u0027, \u0027DelegatedPermissionsPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027delegated_permissions insert\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\nEND"
.\tools\schema\snapshots\schema.json:28762:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_delegated_permissions_au_audit\u0060 AFTER UPDATE ON \u0060delegated_permissions\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027UPDATE\u0027, \u0027delegated_permissions\u0027, \u0027DelegatedPermissionsPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027delegated_permissions update\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\n\nEND"
.\tools\schema\snapshots\schema.json:28769:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_delete_log_ad_audit\u0060 AFTER DELETE ON \u0060delete_log\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027DELETE\u0027, \u0027delete_log\u0027, \u0027DeleteLogPage\u0027, OLD.id, NULL,\n     NULL, NULL, CONCAT(\u0027delete_log delete\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027warning\u0027);\nEND"
.\tools\schema\snapshots\schema.json:28776:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_delete_log_ai_audit\u0060 AFTER INSERT ON \u0060delete_log\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027INSERT\u0027, \u0027delete_log\u0027, \u0027DeleteLogPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027delete_log insert\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\nEND"
.\tools\schema\snapshots\schema.json:28783:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_delete_log_au_audit\u0060 AFTER UPDATE ON \u0060delete_log\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027UPDATE\u0027, \u0027delete_log\u0027, \u0027DeleteLogPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027delete_log update\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\n\nEND"
.\tools\schema\snapshots\schema.json:28790:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_departments_ad_audit\u0060 AFTER DELETE ON \u0060departments\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027DELETE\u0027, \u0027departments\u0027, \u0027DepartmentsPage\u0027, OLD.id, NULL,\n     NULL, NULL, CONCAT(\u0027departments delete\u0027, CONCAT(\u0027; code=\u0027, COALESCE(OLD.code,\u0027\u0027)), CONCAT(\u0027; name=\u0027, COALESCE(OLD.name,\u0027\u0027))), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027warning\u0027);\nEND"
.\tools\schema\snapshots\schema.json:28797:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_departments_ai_audit\u0060 AFTER INSERT ON \u0060departments\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027INSERT\u0027, \u0027departments\u0027, \u0027DepartmentsPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027departments insert\u0027, CONCAT(\u0027; code=\u0027, COALESCE(NEW.code,\u0027\u0027)), CONCAT(\u0027; name=\u0027, COALESCE(NEW.name,\u0027\u0027))), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\nEND"
.\tools\schema\snapshots\schema.json:28804:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_departments_au_audit\u0060 AFTER UPDATE ON \u0060departments\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027UPDATE\u0027, \u0027departments\u0027, \u0027DepartmentsPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027departments update\u0027, CONCAT(\u0027; code: \u0027, COALESCE(OLD.code,\u0027\u0027), \u0027 \u2192 \u0027, COALESCE(NEW.code,\u0027\u0027)), CONCAT(\u0027; name: \u0027, COALESCE(OLD.name,\u0027\u0027), \u0027 \u2192 \u0027, COALESCE(NEW.name,\u0027\u0027))), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\n\n  IF COALESCE(OLD.code,\u0027\u0027) \u003C\u003E COALESCE(NEW.code,\u0027\u0027) THEN\n    INSERT INTO system_event_log\n      (user_id, event_type, table_name, related_module, record_id, field_name,\n       old_value, new_value, description, source_ip, device_info, session_id, severity)\n    VALUES\n      (NULL, \u0027UPDATE\u0027, \u0027departments\u0027, \u0027DepartmentsPage\u0027, NEW.id, \u0027code\u0027,\n       OLD.code, NEW.code, \u0027departments update: code changed\u0027, \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\n  END IF;\n\n  IF COALESCE(OLD.name,\u0027\u0027) \u003C\u003E COALESCE(NEW.name,\u0027\u0027) THEN\n    INSERT INTO system_event_log\n      (user_id, event_type, table_name, related_module, record_id, field_name,\n       old_value, new_value, description, source_ip, device_info, session_id, severity)\n    VALUES\n      (NULL, \u0027UPDATE\u0027, \u0027departments\u0027, \u0027DepartmentsPage\u0027, NEW.id, \u0027name\u0027,\n       OLD.name, NEW.name, \u0027departments update: name changed\u0027, \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\n  END IF;\nEND"
.\tools\schema\snapshots\schema.json:28811:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_deviations_ad_audit\u0060 AFTER DELETE ON \u0060deviations\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027DELETE\u0027, \u0027deviations\u0027, \u0027DeviationsPage\u0027, OLD.id, NULL,\n     NULL, NULL, CONCAT(\u0027deviations delete\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027warning\u0027);\nEND"
.\tools\schema\snapshots\schema.json:28818:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_deviations_ai_audit\u0060 AFTER INSERT ON \u0060deviations\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027INSERT\u0027, \u0027deviations\u0027, \u0027DeviationsPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027deviations insert\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\nEND"
.\tools\schema\snapshots\schema.json:28825:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_deviations_au_audit\u0060 AFTER UPDATE ON \u0060deviations\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027UPDATE\u0027, \u0027deviations\u0027, \u0027DeviationsPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027deviations update\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\n\nEND"
.\tools\schema\snapshots\schema.json:28832:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_deviation_audit_ad_audit\u0060 AFTER DELETE ON \u0060deviation_audit\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027DELETE\u0027, \u0027deviation_audit\u0027, \u0027DeviationAuditPage\u0027, OLD.id, NULL,\n     NULL, NULL, CONCAT(\u0027deviation_audit delete\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027warning\u0027);\nEND"
.\tools\schema\snapshots\schema.json:28839:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_deviation_audit_ai_audit\u0060 AFTER INSERT ON \u0060deviation_audit\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027INSERT\u0027, \u0027deviation_audit\u0027, \u0027DeviationAuditPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027deviation_audit insert\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\nEND"
.\tools\schema\snapshots\schema.json:28846:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_deviation_audit_au_audit\u0060 AFTER UPDATE ON \u0060deviation_audit\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027UPDATE\u0027, \u0027deviation_audit\u0027, \u0027DeviationAuditPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027deviation_audit update\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\n\nEND"
.\tools\schema\snapshots\schema.json:28853:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_digital_signatures_ad_audit\u0060 AFTER DELETE ON \u0060digital_signatures\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027DELETE\u0027, \u0027digital_signatures\u0027, \u0027DigitalSignaturesPage\u0027, OLD.id, NULL,\n     NULL, NULL, CONCAT(\u0027digital_signatures delete\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027warning\u0027);\nEND"
.\tools\schema\snapshots\schema.json:28860:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_digital_signatures_ai_audit\u0060 AFTER INSERT ON \u0060digital_signatures\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027INSERT\u0027, \u0027digital_signatures\u0027, \u0027DigitalSignaturesPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027digital_signatures insert\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\nEND"
.\tools\schema\snapshots\schema.json:28867:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_digital_signatures_au_audit\u0060 AFTER UPDATE ON \u0060digital_signatures\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027UPDATE\u0027, \u0027digital_signatures\u0027, \u0027DigitalSignaturesPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027digital_signatures update\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\n\nEND"
.\tools\schema\snapshots\schema.json:28874:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_document_versions_ad_audit\u0060 AFTER DELETE ON \u0060document_versions\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027DELETE\u0027, \u0027document_versions\u0027, \u0027DocumentVersionsPage\u0027, OLD.id, NULL,\n     NULL, NULL, CONCAT(\u0027document_versions delete\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027warning\u0027);\nEND"
.\tools\schema\snapshots\schema.json:28881:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_document_versions_ai_audit\u0060 AFTER INSERT ON \u0060document_versions\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027INSERT\u0027, \u0027document_versions\u0027, \u0027DocumentVersionsPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027document_versions insert\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\nEND"
.\tools\schema\snapshots\schema.json:28888:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_document_versions_au_audit\u0060 AFTER UPDATE ON \u0060document_versions\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027UPDATE\u0027, \u0027document_versions\u0027, \u0027DocumentVersionsPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027document_versions update\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\n\nEND"
.\tools\schema\snapshots\schema.json:28895:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_entity_audit_log_ad_audit\u0060 AFTER DELETE ON \u0060entity_audit_log\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027DELETE\u0027, \u0027entity_audit_log\u0027, \u0027EntityAuditLogPage\u0027, OLD.id, NULL,\n     NULL, NULL, CONCAT(\u0027entity_audit_log delete\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027warning\u0027);\nEND"
.\tools\schema\snapshots\schema.json:28902:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_entity_audit_log_ai_audit\u0060 AFTER INSERT ON \u0060entity_audit_log\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027INSERT\u0027, \u0027entity_audit_log\u0027, \u0027EntityAuditLogPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027entity_audit_log insert\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\nEND"
.\tools\schema\snapshots\schema.json:28909:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_entity_audit_log_au_audit\u0060 AFTER UPDATE ON \u0060entity_audit_log\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027UPDATE\u0027, \u0027entity_audit_log\u0027, \u0027EntityAuditLogPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027entity_audit_log update\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\n\nEND"
.\tools\schema\snapshots\schema.json:28916:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_entity_tags_ad_audit\u0060 AFTER DELETE ON \u0060entity_tags\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027DELETE\u0027, \u0027entity_tags\u0027, \u0027EntityTagsPage\u0027, OLD.id, NULL,\n     NULL, NULL, CONCAT(\u0027entity_tags delete\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027warning\u0027);\nEND"
.\tools\schema\snapshots\schema.json:28923:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_entity_tags_ai_audit\u0060 AFTER INSERT ON \u0060entity_tags\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027INSERT\u0027, \u0027entity_tags\u0027, \u0027EntityTagsPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027entity_tags insert\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\nEND"
.\tools\schema\snapshots\schema.json:28930:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_entity_tags_au_audit\u0060 AFTER UPDATE ON \u0060entity_tags\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027UPDATE\u0027, \u0027entity_tags\u0027, \u0027EntityTagsPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027entity_tags update\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\n\nEND"
.\tools\schema\snapshots\schema.json:28937:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_export_print_log_ad_audit\u0060 AFTER DELETE ON \u0060export_print_log\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027DELETE\u0027, \u0027export_print_log\u0027, \u0027ExportPrintLogPage\u0027, OLD.id, NULL,\n     NULL, NULL, CONCAT(\u0027export_print_log delete\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027warning\u0027);\nEND"
.\tools\schema\snapshots\schema.json:28944:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_export_print_log_ai_audit\u0060 AFTER INSERT ON \u0060export_print_log\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027INSERT\u0027, \u0027export_print_log\u0027, \u0027ExportPrintLogPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027export_print_log insert\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\nEND"
.\tools\schema\snapshots\schema.json:28951:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_export_print_log_au_audit\u0060 AFTER UPDATE ON \u0060export_print_log\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027UPDATE\u0027, \u0027export_print_log\u0027, \u0027ExportPrintLogPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027export_print_log update\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\n\nEND"
.\tools\schema\snapshots\schema.json:28958:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_external_contractors_ad_audit\u0060 AFTER DELETE ON \u0060external_contractors\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027DELETE\u0027, \u0027external_contractors\u0027, \u0027ExternalContractorsPage\u0027, OLD.id, NULL,\n     NULL, NULL, CONCAT(\u0027external_contractors delete\u0027, CONCAT(\u0027; name=\u0027, COALESCE(OLD.name,\u0027\u0027))), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027warning\u0027);\nEND"
.\tools\schema\snapshots\schema.json:28965:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_external_contractors_ai_audit\u0060 AFTER INSERT ON \u0060external_contractors\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027INSERT\u0027, \u0027external_contractors\u0027, \u0027ExternalContractorsPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027external_contractors insert\u0027, CONCAT(\u0027; name=\u0027, COALESCE(NEW.name,\u0027\u0027))), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\nEND"
.\tools\schema\snapshots\schema.json:28972:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_external_contractors_au_audit\u0060 AFTER UPDATE ON \u0060external_contractors\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027UPDATE\u0027, \u0027external_contractors\u0027, \u0027ExternalContractorsPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027external_contractors update\u0027, CONCAT(\u0027; name: \u0027, COALESCE(OLD.name,\u0027\u0027), \u0027 \u2192 \u0027, COALESCE(NEW.name,\u0027\u0027))), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\n\n  IF COALESCE(OLD.name,\u0027\u0027) \u003C\u003E COALESCE(NEW.name,\u0027\u0027) THEN\n    INSERT INTO system_event_log\n      (user_id, event_type, table_name, related_module, record_id, field_name,\n       old_value, new_value, description, source_ip, device_info, session_id, severity)\n    VALUES\n      (NULL, \u0027UPDATE\u0027, \u0027external_contractors\u0027, \u0027ExternalContractorsPage\u0027, NEW.id, \u0027name\u0027,\n       OLD.name, NEW.name, \u0027external_contractors update: name changed\u0027, \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\n  END IF;\nEND"
.\tools\schema\snapshots\schema.json:28979:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_failure_modes_ad_audit\u0060 AFTER DELETE ON \u0060failure_modes\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027DELETE\u0027, \u0027failure_modes\u0027, \u0027FailureModesPage\u0027, OLD.id, NULL,\n     NULL, NULL, CONCAT(\u0027failure_modes delete\u0027, CONCAT(\u0027; code=\u0027, COALESCE(OLD.code,\u0027\u0027))), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027warning\u0027);\nEND"
.\tools\schema\snapshots\schema.json:28986:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_failure_modes_ai_audit\u0060 AFTER INSERT ON \u0060failure_modes\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027INSERT\u0027, \u0027failure_modes\u0027, \u0027FailureModesPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027failure_modes insert\u0027, CONCAT(\u0027; code=\u0027, COALESCE(NEW.code,\u0027\u0027))), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\nEND"
.\tools\schema\snapshots\schema.json:28993:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_failure_modes_au_audit\u0060 AFTER UPDATE ON \u0060failure_modes\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027UPDATE\u0027, \u0027failure_modes\u0027, \u0027FailureModesPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027failure_modes update\u0027, CONCAT(\u0027; code: \u0027, COALESCE(OLD.code,\u0027\u0027), \u0027 \u2192 \u0027, COALESCE(NEW.code,\u0027\u0027))), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\n\n  IF COALESCE(OLD.code,\u0027\u0027) \u003C\u003E COALESCE(NEW.code,\u0027\u0027) THEN\n    INSERT INTO system_event_log\n      (user_id, event_type, table_name, related_module, record_id, field_name,\n       old_value, new_value, description, source_ip, device_info, session_id, severity)\n    VALUES\n      (NULL, \u0027UPDATE\u0027, \u0027failure_modes\u0027, \u0027FailureModesPage\u0027, NEW.id, \u0027code\u0027,\n       OLD.code, NEW.code, \u0027failure_modes update: code changed\u0027, \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\n  END IF;\nEND"
.\tools\schema\snapshots\schema.json:29000:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_forensic_user_change_log_ad_audit\u0060 AFTER DELETE ON \u0060forensic_user_change_log\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027DELETE\u0027, \u0027forensic_user_change_log\u0027, \u0027ForensicUserChangeLogPage\u0027, OLD.id, NULL,\n     NULL, NULL, CONCAT(\u0027forensic_user_change_log delete\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027warning\u0027);\nEND"
.\tools\schema\snapshots\schema.json:29007:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_forensic_user_change_log_ai_audit\u0060 AFTER INSERT ON \u0060forensic_user_change_log\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027INSERT\u0027, \u0027forensic_user_change_log\u0027, \u0027ForensicUserChangeLogPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027forensic_user_change_log insert\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\nEND"
.\tools\schema\snapshots\schema.json:29014:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_forensic_user_change_log_au_audit\u0060 AFTER UPDATE ON \u0060forensic_user_change_log\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027UPDATE\u0027, \u0027forensic_user_change_log\u0027, \u0027ForensicUserChangeLogPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027forensic_user_change_log update\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\n\nEND"
.\tools\schema\snapshots\schema.json:29021:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_incident_log_ad_audit\u0060 AFTER DELETE ON \u0060incident_log\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027DELETE\u0027, \u0027incident_log\u0027, \u0027IncidentLogPage\u0027, OLD.id, NULL,\n     NULL, NULL, CONCAT(\u0027incident_log delete\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027warning\u0027);\nEND"
.\tools\schema\snapshots\schema.json:29028:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_incident_log_ai_audit\u0060 AFTER INSERT ON \u0060incident_log\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027INSERT\u0027, \u0027incident_log\u0027, \u0027IncidentLogPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027incident_log insert\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\nEND"
.\tools\schema\snapshots\schema.json:29035:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_incident_log_au_audit\u0060 AFTER UPDATE ON \u0060incident_log\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027UPDATE\u0027, \u0027incident_log\u0027, \u0027IncidentLogPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027incident_log update\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\n\nEND"
.\tools\schema\snapshots\schema.json:29049:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_inc_sync_u\u0060 BEFORE UPDATE ON \u0060incident_log\u0060 FOR EACH ROW BEGIN\n  IF (NEW.severity \u003C=\u003E OLD.severity) = 0 THEN\n    CALL ref_touch(\u0027severity\u0027, NEW.severity, NEW.severity);\n    IF LAST_INSERT_ID() IS NOT NULL THEN SET NEW.severity_id = LAST_INSERT_ID(); END IF;\n  END IF;\nEND"
.\tools\schema\snapshots\schema.json:29056:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_inspections_ad_audit\u0060 AFTER DELETE ON \u0060inspections\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027DELETE\u0027, \u0027inspections\u0027, \u0027InspectionsPage\u0027, OLD.id, NULL,\n     NULL, NULL, CONCAT(\u0027inspections delete\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027warning\u0027);\nEND"
.\tools\schema\snapshots\schema.json:29063:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_inspections_ai_audit\u0060 AFTER INSERT ON \u0060inspections\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027INSERT\u0027, \u0027inspections\u0027, \u0027InspectionsPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027inspections insert\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\nEND"
.\tools\schema\snapshots\schema.json:29070:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_inspections_au_audit\u0060 AFTER UPDATE ON \u0060inspections\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027UPDATE\u0027, \u0027inspections\u0027, \u0027InspectionsPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027inspections update\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\n\nEND"
.\tools\schema\snapshots\schema.json:29084:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_insp_sync_u\u0060 BEFORE UPDATE ON \u0060inspections\u0060 FOR EACH ROW BEGIN\n  IF (NEW.type \u003C=\u003E OLD.type) = 0 THEN\n    CALL ref_touch(\u0027inspection_type\u0027, NEW.type, NEW.type);\n    IF LAST_INSERT_ID() IS NOT NULL THEN SET NEW.type_id = LAST_INSERT_ID(); END IF;\n  END IF;\n  IF (NEW.result \u003C=\u003E OLD.result) = 0 THEN\n    CALL ref_touch(\u0027inspection_result\u0027, NEW.result, NEW.result);\n    IF LAST_INSERT_ID() IS NOT NULL THEN SET NEW.result_id = LAST_INSERT_ID(); END IF;\n  END IF;\nEND"
.\tools\schema\snapshots\schema.json:29091:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_integration_log_ad_audit\u0060 AFTER DELETE ON \u0060integration_log\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027DELETE\u0027, \u0027integration_log\u0027, \u0027IntegrationLogPage\u0027, OLD.id, NULL,\n     NULL, NULL, CONCAT(\u0027integration_log delete\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027warning\u0027);\nEND"
.\tools\schema\snapshots\schema.json:29098:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_integration_log_ai_audit\u0060 AFTER INSERT ON \u0060integration_log\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027INSERT\u0027, \u0027integration_log\u0027, \u0027IntegrationLogPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027integration_log insert\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\nEND"
.\tools\schema\snapshots\schema.json:29105:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_integration_log_au_audit\u0060 AFTER UPDATE ON \u0060integration_log\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027UPDATE\u0027, \u0027integration_log\u0027, \u0027IntegrationLogPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027integration_log update\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\n\nEND"
.\tools\schema\snapshots\schema.json:29112:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_inventory_transactions_ad_audit\u0060 AFTER DELETE ON \u0060inventory_transactions\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027DELETE\u0027, \u0027inventory_transactions\u0027, \u0027InventoryTransactionsPage\u0027, OLD.id, NULL,\n     NULL, NULL, CONCAT(\u0027inventory_transactions delete\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027warning\u0027);\nEND"
.\tools\schema\snapshots\schema.json:29119:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_inventory_transactions_ai_audit\u0060 AFTER INSERT ON \u0060inventory_transactions\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027INSERT\u0027, \u0027inventory_transactions\u0027, \u0027InventoryTransactionsPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027inventory_transactions insert\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\nEND"
.\tools\schema\snapshots\schema.json:29126:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_inventory_transactions_au_audit\u0060 AFTER UPDATE ON \u0060inventory_transactions\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027UPDATE\u0027, \u0027inventory_transactions\u0027, \u0027InventoryTransactionsPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027inventory_transactions update\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\n\nEND"
.\tools\schema\snapshots\schema.json:29133:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_iot_anomaly_log_ad_audit\u0060 AFTER DELETE ON \u0060iot_anomaly_log\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027DELETE\u0027, \u0027iot_anomaly_log\u0027, \u0027IotAnomalyLogPage\u0027, OLD.id, NULL,\n     NULL, NULL, CONCAT(\u0027iot_anomaly_log delete\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027warning\u0027);\nEND"
.\tools\schema\snapshots\schema.json:29140:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_iot_anomaly_log_ai_audit\u0060 AFTER INSERT ON \u0060iot_anomaly_log\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027INSERT\u0027, \u0027iot_anomaly_log\u0027, \u0027IotAnomalyLogPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027iot_anomaly_log insert\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\nEND"
.\tools\schema\snapshots\schema.json:29147:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_iot_anomaly_log_au_audit\u0060 AFTER UPDATE ON \u0060iot_anomaly_log\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027UPDATE\u0027, \u0027iot_anomaly_log\u0027, \u0027IotAnomalyLogPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027iot_anomaly_log update\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\n\nEND"
.\tools\schema\snapshots\schema.json:29154:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_iot_devices_ad_audit\u0060 AFTER DELETE ON \u0060iot_devices\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027DELETE\u0027, \u0027iot_devices\u0027, \u0027IotDevicesPage\u0027, OLD.id, NULL,\n     NULL, NULL, CONCAT(\u0027iot_devices delete\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027warning\u0027);\nEND"
.\tools\schema\snapshots\schema.json:29161:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_iot_devices_ai_audit\u0060 AFTER INSERT ON \u0060iot_devices\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027INSERT\u0027, \u0027iot_devices\u0027, \u0027IotDevicesPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027iot_devices insert\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\nEND"
.\tools\schema\snapshots\schema.json:29168:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_iot_devices_au_audit\u0060 AFTER UPDATE ON \u0060iot_devices\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027UPDATE\u0027, \u0027iot_devices\u0027, \u0027IotDevicesPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027iot_devices update\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\n\nEND"
.\tools\schema\snapshots\schema.json:29175:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_iot_event_audit_ad_audit\u0060 AFTER DELETE ON \u0060iot_event_audit\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027DELETE\u0027, \u0027iot_event_audit\u0027, \u0027IotEventAuditPage\u0027, OLD.id, NULL,\n     NULL, NULL, CONCAT(\u0027iot_event_audit delete\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027warning\u0027);\nEND"
.\tools\schema\snapshots\schema.json:29182:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_iot_event_audit_ai_audit\u0060 AFTER INSERT ON \u0060iot_event_audit\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027INSERT\u0027, \u0027iot_event_audit\u0027, \u0027IotEventAuditPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027iot_event_audit insert\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\nEND"
.\tools\schema\snapshots\schema.json:29189:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_iot_event_audit_au_audit\u0060 AFTER UPDATE ON \u0060iot_event_audit\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027UPDATE\u0027, \u0027iot_event_audit\u0027, \u0027IotEventAuditPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027iot_event_audit update\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\n\nEND"
.\tools\schema\snapshots\schema.json:29196:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_iot_gateways_ad_audit\u0060 AFTER DELETE ON \u0060iot_gateways\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027DELETE\u0027, \u0027iot_gateways\u0027, \u0027IotGatewaysPage\u0027, OLD.id, NULL,\n     NULL, NULL, CONCAT(\u0027iot_gateways delete\u0027, CONCAT(\u0027; code=\u0027, COALESCE(OLD.code,\u0027\u0027)), CONCAT(\u0027; name=\u0027, COALESCE(OLD.name,\u0027\u0027))), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027warning\u0027);\nEND"
.\tools\schema\snapshots\schema.json:29203:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_iot_gateways_ai_audit\u0060 AFTER INSERT ON \u0060iot_gateways\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027INSERT\u0027, \u0027iot_gateways\u0027, \u0027IotGatewaysPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027iot_gateways insert\u0027, CONCAT(\u0027; code=\u0027, COALESCE(NEW.code,\u0027\u0027)), CONCAT(\u0027; name=\u0027, COALESCE(NEW.name,\u0027\u0027))), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\nEND"
.\tools\schema\snapshots\schema.json:29210:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_iot_gateways_au_audit\u0060 AFTER UPDATE ON \u0060iot_gateways\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027UPDATE\u0027, \u0027iot_gateways\u0027, \u0027IotGatewaysPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027iot_gateways update\u0027, CONCAT(\u0027; code: \u0027, COALESCE(OLD.code,\u0027\u0027), \u0027 \u2192 \u0027, COALESCE(NEW.code,\u0027\u0027)), CONCAT(\u0027; name: \u0027, COALESCE(OLD.name,\u0027\u0027), \u0027 \u2192 \u0027, COALESCE(NEW.name,\u0027\u0027))), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\n\n  IF COALESCE(OLD.code,\u0027\u0027) \u003C\u003E COALESCE(NEW.code,\u0027\u0027) THEN\n    INSERT INTO system_event_log\n      (user_id, event_type, table_name, related_module, record_id, field_name,\n       old_value, new_value, description, source_ip, device_info, session_id, severity)\n    VALUES\n      (NULL, \u0027UPDATE\u0027, \u0027iot_gateways\u0027, \u0027IotGatewaysPage\u0027, NEW.id, \u0027code\u0027,\n       OLD.code, NEW.code, \u0027iot_gateways update: code changed\u0027, \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\n  END IF;\n\n  IF COALESCE(OLD.name,\u0027\u0027) \u003C\u003E COALESCE(NEW.name,\u0027\u0027) THEN\n    INSERT INTO system_event_log\n      (user_id, event_type, table_name, related_module, record_id, field_name,\n       old_value, new_value, description, source_ip, device_info, session_id, severity)\n    VALUES\n      (NULL, \u0027UPDATE\u0027, \u0027iot_gateways\u0027, \u0027IotGatewaysPage\u0027, NEW.id, \u0027name\u0027,\n       OLD.name, NEW.name, \u0027iot_gateways update: name changed\u0027, \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\n  END IF;\nEND"
.\tools\schema\snapshots\schema.json:29217:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_iot_sensor_data_ad_audit\u0060 AFTER DELETE ON \u0060iot_sensor_data\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027DELETE\u0027, \u0027iot_sensor_data\u0027, \u0027IotSensorDataPage\u0027, OLD.id, NULL,\n     NULL, NULL, CONCAT(\u0027iot_sensor_data delete\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027warning\u0027);\nEND"
.\tools\schema\snapshots\schema.json:29224:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_iot_sensor_data_ai_audit\u0060 AFTER INSERT ON \u0060iot_sensor_data\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027INSERT\u0027, \u0027iot_sensor_data\u0027, \u0027IotSensorDataPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027iot_sensor_data insert\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\nEND"
.\tools\schema\snapshots\schema.json:29231:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_iot_sensor_data_au_audit\u0060 AFTER UPDATE ON \u0060iot_sensor_data\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027UPDATE\u0027, \u0027iot_sensor_data\u0027, \u0027IotSensorDataPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027iot_sensor_data update\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\n\nEND"
.\tools\schema\snapshots\schema.json:29238:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_irregularities_log_ad_audit\u0060 AFTER DELETE ON \u0060irregularities_log\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027DELETE\u0027, \u0027irregularities_log\u0027, \u0027IrregularitiesLogPage\u0027, OLD.id, NULL,\n     NULL, NULL, CONCAT(\u0027irregularities_log delete\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027warning\u0027);\nEND"
.\tools\schema\snapshots\schema.json:29245:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_irregularities_log_ai_audit\u0060 AFTER INSERT ON \u0060irregularities_log\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027INSERT\u0027, \u0027irregularities_log\u0027, \u0027IrregularitiesLogPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027irregularities_log insert\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\nEND"
.\tools\schema\snapshots\schema.json:29252:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_irregularities_log_au_audit\u0060 AFTER UPDATE ON \u0060irregularities_log\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027UPDATE\u0027, \u0027irregularities_log\u0027, \u0027IrregularitiesLogPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027irregularities_log update\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\n\nEND"
.\tools\schema\snapshots\schema.json:29259:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_job_titles_ad_audit\u0060 AFTER DELETE ON \u0060job_titles\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027DELETE\u0027, \u0027job_titles\u0027, \u0027JobTitlesPage\u0027, OLD.id, NULL,\n     NULL, NULL, CONCAT(\u0027job_titles delete\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027warning\u0027);\nEND"
.\tools\schema\snapshots\schema.json:29266:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_job_titles_ai_audit\u0060 AFTER INSERT ON \u0060job_titles\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027INSERT\u0027, \u0027job_titles\u0027, \u0027JobTitlesPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027job_titles insert\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\nEND"
.\tools\schema\snapshots\schema.json:29273:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_job_titles_au_audit\u0060 AFTER UPDATE ON \u0060job_titles\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027UPDATE\u0027, \u0027job_titles\u0027, \u0027JobTitlesPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027job_titles update\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\n\nEND"
.\tools\schema\snapshots\schema.json:29280:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_locations_ad_audit\u0060 AFTER DELETE ON \u0060locations\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027DELETE\u0027, \u0027locations\u0027, \u0027LocationsPage\u0027, OLD.id, NULL,\n     NULL, NULL, CONCAT(\u0027locations delete\u0027, CONCAT(\u0027; code=\u0027, COALESCE(OLD.code,\u0027\u0027)), CONCAT(\u0027; name=\u0027, COALESCE(OLD.name,\u0027\u0027))), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027warning\u0027);\nEND"
.\tools\schema\snapshots\schema.json:29287:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_locations_ai_audit\u0060 AFTER INSERT ON \u0060locations\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027INSERT\u0027, \u0027locations\u0027, \u0027LocationsPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027locations insert\u0027, CONCAT(\u0027; code=\u0027, COALESCE(NEW.code,\u0027\u0027)), CONCAT(\u0027; name=\u0027, COALESCE(NEW.name,\u0027\u0027))), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\nEND"
.\tools\schema\snapshots\schema.json:29294:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_locations_au_audit\u0060 AFTER UPDATE ON \u0060locations\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027UPDATE\u0027, \u0027locations\u0027, \u0027LocationsPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027locations update\u0027, CONCAT(\u0027; code: \u0027, COALESCE(OLD.code,\u0027\u0027), \u0027 \u2192 \u0027, COALESCE(NEW.code,\u0027\u0027)), CONCAT(\u0027; name: \u0027, COALESCE(OLD.name,\u0027\u0027), \u0027 \u2192 \u0027, COALESCE(NEW.name,\u0027\u0027))), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\n\n  IF COALESCE(OLD.code,\u0027\u0027) \u003C\u003E COALESCE(NEW.code,\u0027\u0027) THEN\n    INSERT INTO system_event_log\n      (user_id, event_type, table_name, related_module, record_id, field_name,\n       old_value, new_value, description, source_ip, device_info, session_id, severity)\n    VALUES\n      (NULL, \u0027UPDATE\u0027, \u0027locations\u0027, \u0027LocationsPage\u0027, NEW.id, \u0027code\u0027,\n       OLD.code, NEW.code, \u0027locations update: code changed\u0027, \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\n  END IF;\n\n  IF COALESCE(OLD.name,\u0027\u0027) \u003C\u003E COALESCE(NEW.name,\u0027\u0027) THEN\n    INSERT INTO system_event_log\n      (user_id, event_type, table_name, related_module, record_id, field_name,\n       old_value, new_value, description, source_ip, device_info, session_id, severity)\n    VALUES\n      (NULL, \u0027UPDATE\u0027, \u0027locations\u0027, \u0027LocationsPage\u0027, NEW.id, \u0027name\u0027,\n       OLD.name, NEW.name, \u0027locations update: name changed\u0027, \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\n  END IF;\nEND"
.\tools\schema\snapshots\schema.json:29301:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_lookup_domain_ad_audit\u0060 AFTER DELETE ON \u0060lookup_domain\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027DELETE\u0027, \u0027lookup_domain\u0027, \u0027LookupDomainPage\u0027, OLD.id, NULL,\n     NULL, NULL, CONCAT(\u0027lookup_domain delete\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027warning\u0027);\nEND"
.\tools\schema\snapshots\schema.json:29308:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_lookup_domain_ai_audit\u0060 AFTER INSERT ON \u0060lookup_domain\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027INSERT\u0027, \u0027lookup_domain\u0027, \u0027LookupDomainPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027lookup_domain insert\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\nEND"
.\tools\schema\snapshots\schema.json:29315:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_lookup_domain_au_audit\u0060 AFTER UPDATE ON \u0060lookup_domain\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027UPDATE\u0027, \u0027lookup_domain\u0027, \u0027LookupDomainPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027lookup_domain update\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\n\nEND"
.\tools\schema\snapshots\schema.json:29322:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_lookup_value_ad_audit\u0060 AFTER DELETE ON \u0060lookup_value\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027DELETE\u0027, \u0027lookup_value\u0027, \u0027LookupValuePage\u0027, OLD.id, NULL,\n     NULL, NULL, CONCAT(\u0027lookup_value delete\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027warning\u0027);\nEND"
.\tools\schema\snapshots\schema.json:29329:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_lookup_value_ai_audit\u0060 AFTER INSERT ON \u0060lookup_value\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027INSERT\u0027, \u0027lookup_value\u0027, \u0027LookupValuePage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027lookup_value insert\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\nEND"
.\tools\schema\snapshots\schema.json:29336:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_lookup_value_au_audit\u0060 AFTER UPDATE ON \u0060lookup_value\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027UPDATE\u0027, \u0027lookup_value\u0027, \u0027LookupValuePage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027lookup_value update\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\n\nEND"
.\tools\schema\snapshots\schema.json:29343:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_machines_ad_audit\u0060 AFTER DELETE ON \u0060machines\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027DELETE\u0027, \u0027machines\u0027, \u0027MachinesPage\u0027, OLD.id, NULL,\n     NULL, NULL, CONCAT(\u0027machines delete\u0027, CONCAT(\u0027; code=\u0027, COALESCE(OLD.code,\u0027\u0027)), CONCAT(\u0027; name=\u0027, COALESCE(OLD.name,\u0027\u0027))), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027warning\u0027);\nEND"
.\tools\schema\snapshots\schema.json:29350:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_machines_ai\u0060 AFTER INSERT ON \u0060machines\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id,\n     field_name, old_value, new_value, description, source_ip,\n     device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027MCH_CREATE_DBTRG\u0027, \u0027machines\u0027, \u0027MachineModule\u0027, NEW.id,\n     NULL, NULL, NULL,\n     CONCAT(\u0027Machine created (db trigger). code=\u0027, COALESCE(NEW.code,\u0027\u0027)),\n     \u0027db-trigger\u0027, \u0027server\u0027, \u0027\u0027, \u0027audit\u0027);\nEND"
.\tools\schema\snapshots\schema.json:29357:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_machines_ai_audit\u0060 AFTER INSERT ON \u0060machines\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027INSERT\u0027, \u0027machines\u0027, \u0027MachinesPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027machines insert\u0027, CONCAT(\u0027; code=\u0027, COALESCE(NEW.code,\u0027\u0027)), CONCAT(\u0027; name=\u0027, COALESCE(NEW.name,\u0027\u0027))), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\nEND"
.\tools\schema\snapshots\schema.json:29364:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_machines_au\u0060 AFTER UPDATE ON \u0060machines\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id,\n     field_name, old_value, new_value, description, source_ip,\n     device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027MCH_UPDATE_DBTRG\u0027, \u0027machines\u0027, \u0027MachineModule\u0027, NEW.id,\n     NULL, NULL, NULL,\n     CONCAT(\u0027Machine updated (db trigger). code=\u0027, COALESCE(NEW.code,\u0027\u0027)),\n     \u0027db-trigger\u0027, \u0027server\u0027, \u0027\u0027, \u0027audit\u0027);\nEND"
.\tools\schema\snapshots\schema.json:29371:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_machines_au_audit\u0060 AFTER UPDATE ON \u0060machines\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027UPDATE\u0027, \u0027machines\u0027, \u0027MachinesPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027machines update\u0027, CONCAT(\u0027; code: \u0027, COALESCE(OLD.code,\u0027\u0027), \u0027 \u2192 \u0027, COALESCE(NEW.code,\u0027\u0027)), CONCAT(\u0027; name: \u0027, COALESCE(OLD.name,\u0027\u0027), \u0027 \u2192 \u0027, COALESCE(NEW.name,\u0027\u0027))), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\n\n  IF COALESCE(OLD.code,\u0027\u0027) \u003C\u003E COALESCE(NEW.code,\u0027\u0027) THEN\n    INSERT INTO system_event_log\n      (user_id, event_type, table_name, related_module, record_id, field_name,\n       old_value, new_value, description, source_ip, device_info, session_id, severity)\n    VALUES\n      (NULL, \u0027UPDATE\u0027, \u0027machines\u0027, \u0027MachinesPage\u0027, NEW.id, \u0027code\u0027,\n       OLD.code, NEW.code, \u0027machines update: code changed\u0027, \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\n  END IF;\n\n  IF COALESCE(OLD.name,\u0027\u0027) \u003C\u003E COALESCE(NEW.name,\u0027\u0027) THEN\n    INSERT INTO system_event_log\n      (user_id, event_type, table_name, related_module, record_id, field_name,\n       old_value, new_value, description, source_ip, device_info, session_id, severity)\n    VALUES\n      (NULL, \u0027UPDATE\u0027, \u0027machines\u0027, \u0027MachinesPage\u0027, NEW.id, \u0027name\u0027,\n       OLD.name, NEW.name, \u0027machines update: name changed\u0027, \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\n  END IF;\nEND"
.\tools\schema\snapshots\schema.json:29385:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_machines_bu\u0060 BEFORE UPDATE ON \u0060machines\u0060 FOR EACH ROW BEGIN\n  SET NEW.status = fn_normalize_machine_status(NEW.status);\n  SET NEW.last_modified = NOW();\nEND"
.\tools\schema\snapshots\schema.json:29392:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_machine_components_ad_audit\u0060 AFTER DELETE ON \u0060machine_components\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027DELETE\u0027, \u0027machine_components\u0027, \u0027MachineComponentsPage\u0027, OLD.id, NULL,\n     NULL, NULL, CONCAT(\u0027machine_components delete\u0027, CONCAT(\u0027; code=\u0027, COALESCE(OLD.code,\u0027\u0027)), CONCAT(\u0027; name=\u0027, COALESCE(OLD.name,\u0027\u0027))), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027warning\u0027);\nEND"
.\tools\schema\snapshots\schema.json:29399:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_machine_components_ai_audit\u0060 AFTER INSERT ON \u0060machine_components\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027INSERT\u0027, \u0027machine_components\u0027, \u0027MachineComponentsPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027machine_components insert\u0027, CONCAT(\u0027; code=\u0027, COALESCE(NEW.code,\u0027\u0027)), CONCAT(\u0027; name=\u0027, COALESCE(NEW.name,\u0027\u0027))), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\nEND"
.\tools\schema\snapshots\schema.json:29406:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_machine_components_au_audit\u0060 AFTER UPDATE ON \u0060machine_components\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027UPDATE\u0027, \u0027machine_components\u0027, \u0027MachineComponentsPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027machine_components update\u0027, CONCAT(\u0027; code: \u0027, COALESCE(OLD.code,\u0027\u0027), \u0027 \u2192 \u0027, COALESCE(NEW.code,\u0027\u0027)), CONCAT(\u0027; name: \u0027, COALESCE(OLD.name,\u0027\u0027), \u0027 \u2192 \u0027, COALESCE(NEW.name,\u0027\u0027))), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\n\n  IF COALESCE(OLD.code,\u0027\u0027) \u003C\u003E COALESCE(NEW.code,\u0027\u0027) THEN\n    INSERT INTO system_event_log\n      (user_id, event_type, table_name, related_module, record_id, field_name,\n       old_value, new_value, description, source_ip, device_info, session_id, severity)\n    VALUES\n      (NULL, \u0027UPDATE\u0027, \u0027machine_components\u0027, \u0027MachineComponentsPage\u0027, NEW.id, \u0027code\u0027,\n       OLD.code, NEW.code, \u0027machine_components update: code changed\u0027, \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\n  END IF;\n\n  IF COALESCE(OLD.name,\u0027\u0027) \u003C\u003E COALESCE(NEW.name,\u0027\u0027) THEN\n    INSERT INTO system_event_log\n      (user_id, event_type, table_name, related_module, record_id, field_name,\n       old_value, new_value, description, source_ip, device_info, session_id, severity)\n    VALUES\n      (NULL, \u0027UPDATE\u0027, \u0027machine_components\u0027, \u0027MachineComponentsPage\u0027, NEW.id, \u0027name\u0027,\n       OLD.name, NEW.name, \u0027machine_components update: name changed\u0027, \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\n  END IF;\nEND"
.\tools\schema\snapshots\schema.json:29413:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_machine_lifecycle_event_ad_audit\u0060 AFTER DELETE ON \u0060machine_lifecycle_event\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027DELETE\u0027, \u0027machine_lifecycle_event\u0027, \u0027MachineLifecycleEventPage\u0027, OLD.id, NULL,\n     NULL, NULL, CONCAT(\u0027machine_lifecycle_event delete\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027warning\u0027);\nEND"
.\tools\schema\snapshots\schema.json:29420:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_machine_lifecycle_event_ai_audit\u0060 AFTER INSERT ON \u0060machine_lifecycle_event\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027INSERT\u0027, \u0027machine_lifecycle_event\u0027, \u0027MachineLifecycleEventPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027machine_lifecycle_event insert\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\nEND"
.\tools\schema\snapshots\schema.json:29427:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_machine_lifecycle_event_au_audit\u0060 AFTER UPDATE ON \u0060machine_lifecycle_event\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027UPDATE\u0027, \u0027machine_lifecycle_event\u0027, \u0027MachineLifecycleEventPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027machine_lifecycle_event update\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\n\nEND"
.\tools\schema\snapshots\schema.json:29434:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_machine_models_ad_audit\u0060 AFTER DELETE ON \u0060machine_models\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027DELETE\u0027, \u0027machine_models\u0027, \u0027MachineModelsPage\u0027, OLD.id, NULL,\n     NULL, NULL, CONCAT(\u0027machine_models delete\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027warning\u0027);\nEND"
.\tools\schema\snapshots\schema.json:29441:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_machine_models_ai_audit\u0060 AFTER INSERT ON \u0060machine_models\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027INSERT\u0027, \u0027machine_models\u0027, \u0027MachineModelsPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027machine_models insert\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\nEND"
.\tools\schema\snapshots\schema.json:29448:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_machine_models_au_audit\u0060 AFTER UPDATE ON \u0060machine_models\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027UPDATE\u0027, \u0027machine_models\u0027, \u0027MachineModelsPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027machine_models update\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\n\nEND"
.\tools\schema\snapshots\schema.json:29455:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_machine_types_ad_audit\u0060 AFTER DELETE ON \u0060machine_types\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027DELETE\u0027, \u0027machine_types\u0027, \u0027MachineTypesPage\u0027, OLD.id, NULL,\n     NULL, NULL, CONCAT(\u0027machine_types delete\u0027, CONCAT(\u0027; code=\u0027, COALESCE(OLD.code,\u0027\u0027)), CONCAT(\u0027; name=\u0027, COALESCE(OLD.name,\u0027\u0027))), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027warning\u0027);\nEND"
.\tools\schema\snapshots\schema.json:29462:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_machine_types_ai_audit\u0060 AFTER INSERT ON \u0060machine_types\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027INSERT\u0027, \u0027machine_types\u0027, \u0027MachineTypesPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027machine_types insert\u0027, CONCAT(\u0027; code=\u0027, COALESCE(NEW.code,\u0027\u0027)), CONCAT(\u0027; name=\u0027, COALESCE(NEW.name,\u0027\u0027))), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\nEND"
.\tools\schema\snapshots\schema.json:29469:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_machine_types_au_audit\u0060 AFTER UPDATE ON \u0060machine_types\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027UPDATE\u0027, \u0027machine_types\u0027, \u0027MachineTypesPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027machine_types update\u0027, CONCAT(\u0027; code: \u0027, COALESCE(OLD.code,\u0027\u0027), \u0027 \u2192 \u0027, COALESCE(NEW.code,\u0027\u0027)), CONCAT(\u0027; name: \u0027, COALESCE(OLD.name,\u0027\u0027), \u0027 \u2192 \u0027, COALESCE(NEW.name,\u0027\u0027))), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\n\n  IF COALESCE(OLD.code,\u0027\u0027) \u003C\u003E COALESCE(NEW.code,\u0027\u0027) THEN\n    INSERT INTO system_event_log\n      (user_id, event_type, table_name, related_module, record_id, field_name,\n       old_value, new_value, description, source_ip, device_info, session_id, severity)\n    VALUES\n      (NULL, \u0027UPDATE\u0027, \u0027machine_types\u0027, \u0027MachineTypesPage\u0027, NEW.id, \u0027code\u0027,\n       OLD.code, NEW.code, \u0027machine_types update: code changed\u0027, \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\n  END IF;\n\n  IF COALESCE(OLD.name,\u0027\u0027) \u003C\u003E COALESCE(NEW.name,\u0027\u0027) THEN\n    INSERT INTO system_event_log\n      (user_id, event_type, table_name, related_module, record_id, field_name,\n       old_value, new_value, description, source_ip, device_info, session_id, severity)\n    VALUES\n      (NULL, \u0027UPDATE\u0027, \u0027machine_types\u0027, \u0027MachineTypesPage\u0027, NEW.id, \u0027name\u0027,\n       OLD.name, NEW.name, \u0027machine_types update: name changed\u0027, \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\n  END IF;\nEND"
.\tools\schema\snapshots\schema.json:29476:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_manufacturers_ad_audit\u0060 AFTER DELETE ON \u0060manufacturers\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027DELETE\u0027, \u0027manufacturers\u0027, \u0027ManufacturersPage\u0027, OLD.id, NULL,\n     NULL, NULL, CONCAT(\u0027manufacturers delete\u0027, CONCAT(\u0027; name=\u0027, COALESCE(OLD.name,\u0027\u0027))), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027warning\u0027);\nEND"
.\tools\schema\snapshots\schema.json:29483:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_manufacturers_ai_audit\u0060 AFTER INSERT ON \u0060manufacturers\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027INSERT\u0027, \u0027manufacturers\u0027, \u0027ManufacturersPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027manufacturers insert\u0027, CONCAT(\u0027; name=\u0027, COALESCE(NEW.name,\u0027\u0027))), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\nEND"
.\tools\schema\snapshots\schema.json:29490:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_manufacturers_au_audit\u0060 AFTER UPDATE ON \u0060manufacturers\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027UPDATE\u0027, \u0027manufacturers\u0027, \u0027ManufacturersPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027manufacturers update\u0027, CONCAT(\u0027; name: \u0027, COALESCE(OLD.name,\u0027\u0027), \u0027 \u2192 \u0027, COALESCE(NEW.name,\u0027\u0027))), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\n\n  IF COALESCE(OLD.name,\u0027\u0027) \u003C\u003E COALESCE(NEW.name,\u0027\u0027) THEN\n    INSERT INTO system_event_log\n      (user_id, event_type, table_name, related_module, record_id, field_name,\n       old_value, new_value, description, source_ip, device_info, session_id, severity)\n    VALUES\n      (NULL, \u0027UPDATE\u0027, \u0027manufacturers\u0027, \u0027ManufacturersPage\u0027, NEW.id, \u0027name\u0027,\n       OLD.name, NEW.name, \u0027manufacturers update: name changed\u0027, \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\n  END IF;\nEND"
.\tools\schema\snapshots\schema.json:29497:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_measurement_units_ad_audit\u0060 AFTER DELETE ON \u0060measurement_units\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027DELETE\u0027, \u0027measurement_units\u0027, \u0027MeasurementUnitsPage\u0027, OLD.id, NULL,\n     NULL, NULL, CONCAT(\u0027measurement_units delete\u0027, CONCAT(\u0027; code=\u0027, COALESCE(OLD.code,\u0027\u0027)), CONCAT(\u0027; name=\u0027, COALESCE(OLD.name,\u0027\u0027))), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027warning\u0027);\nEND"
.\tools\schema\snapshots\schema.json:29504:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_measurement_units_ai_audit\u0060 AFTER INSERT ON \u0060measurement_units\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027INSERT\u0027, \u0027measurement_units\u0027, \u0027MeasurementUnitsPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027measurement_units insert\u0027, CONCAT(\u0027; code=\u0027, COALESCE(NEW.code,\u0027\u0027)), CONCAT(\u0027; name=\u0027, COALESCE(NEW.name,\u0027\u0027))), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\nEND"
.\tools\schema\snapshots\schema.json:29511:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_measurement_units_au_audit\u0060 AFTER UPDATE ON \u0060measurement_units\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027UPDATE\u0027, \u0027measurement_units\u0027, \u0027MeasurementUnitsPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027measurement_units update\u0027, CONCAT(\u0027; code: \u0027, COALESCE(OLD.code,\u0027\u0027), \u0027 \u2192 \u0027, COALESCE(NEW.code,\u0027\u0027)), CONCAT(\u0027; name: \u0027, COALESCE(OLD.name,\u0027\u0027), \u0027 \u2192 \u0027, COALESCE(NEW.name,\u0027\u0027))), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\n\n  IF COALESCE(OLD.code,\u0027\u0027) \u003C\u003E COALESCE(NEW.code,\u0027\u0027) THEN\n    INSERT INTO system_event_log\n      (user_id, event_type, table_name, related_module, record_id, field_name,\n       old_value, new_value, description, source_ip, device_info, session_id, severity)\n    VALUES\n      (NULL, \u0027UPDATE\u0027, \u0027measurement_units\u0027, \u0027MeasurementUnitsPage\u0027, NEW.id, \u0027code\u0027,\n       OLD.code, NEW.code, \u0027measurement_units update: code changed\u0027, \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\n  END IF;\n\n  IF COALESCE(OLD.name,\u0027\u0027) \u003C\u003E COALESCE(NEW.name,\u0027\u0027) THEN\n    INSERT INTO system_event_log\n      (user_id, event_type, table_name, related_module, record_id, field_name,\n       old_value, new_value, description, source_ip, device_info, session_id, severity)\n    VALUES\n      (NULL, \u0027UPDATE\u0027, \u0027measurement_units\u0027, \u0027MeasurementUnitsPage\u0027, NEW.id, \u0027name\u0027,\n       OLD.name, NEW.name, \u0027measurement_units update: name changed\u0027, \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\n  END IF;\nEND"
.\tools\schema\snapshots\schema.json:29525:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_mle_sync_u\u0060 BEFORE UPDATE ON \u0060machine_lifecycle_event\u0060 FOR EACH ROW BEGIN\n  IF (NEW.event_type \u003C=\u003E OLD.event_type) = 0 THEN\n    CALL ref_touch(\u0027lifecycle_phase\u0027, NEW.event_type, NEW.event_type);\n    IF LAST_INSERT_ID() IS NOT NULL THEN SET NEW.event_type_id = LAST_INSERT_ID(); END IF;\n  END IF;\nEND"
.\tools\schema\snapshots\schema.json:29532:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_mobile_device_log_ad_audit\u0060 AFTER DELETE ON \u0060mobile_device_log\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027DELETE\u0027, \u0027mobile_device_log\u0027, \u0027MobileDeviceLogPage\u0027, OLD.id, NULL,\n     NULL, NULL, CONCAT(\u0027mobile_device_log delete\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027warning\u0027);\nEND"
.\tools\schema\snapshots\schema.json:29539:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_mobile_device_log_ai_audit\u0060 AFTER INSERT ON \u0060mobile_device_log\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027INSERT\u0027, \u0027mobile_device_log\u0027, \u0027MobileDeviceLogPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027mobile_device_log insert\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\nEND"
.\tools\schema\snapshots\schema.json:29546:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_mobile_device_log_au_audit\u0060 AFTER UPDATE ON \u0060mobile_device_log\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027UPDATE\u0027, \u0027mobile_device_log\u0027, \u0027MobileDeviceLogPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027mobile_device_log update\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\n\nEND"
.\tools\schema\snapshots\schema.json:29560:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_m_sync_u\u0060 BEFORE UPDATE ON \u0060machines\u0060 FOR EACH ROW BEGIN\n  IF (NEW.status \u003C=\u003E OLD.status) = 0 THEN\n    CALL ref_touch(\u0027asset_status\u0027, NEW.status, NEW.status);\n    IF LAST_INSERT_ID() IS NOT NULL THEN SET NEW.status_id = LAST_INSERT_ID(); END IF;\n  END IF;\n  IF (NEW.lifecycle_phase \u003C=\u003E OLD.lifecycle_phase) = 0 THEN\n    CALL ref_touch(\u0027lifecycle_phase\u0027, NEW.lifecycle_phase, NEW.lifecycle_phase);\n    IF LAST_INSERT_ID() IS NOT NULL THEN SET NEW.lifecycle_phase_id = LAST_INSERT_ID(); END IF;\n  END IF;\nEND"
.\tools\schema\snapshots\schema.json:29567:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_notification_queue_ad_audit\u0060 AFTER DELETE ON \u0060notification_queue\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027DELETE\u0027, \u0027notification_queue\u0027, \u0027NotificationQueuePage\u0027, OLD.id, NULL,\n     NULL, NULL, CONCAT(\u0027notification_queue delete\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027warning\u0027);\nEND"
.\tools\schema\snapshots\schema.json:29574:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_notification_queue_ai_audit\u0060 AFTER INSERT ON \u0060notification_queue\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027INSERT\u0027, \u0027notification_queue\u0027, \u0027NotificationQueuePage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027notification_queue insert\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\nEND"
.\tools\schema\snapshots\schema.json:29581:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_notification_queue_au_audit\u0060 AFTER UPDATE ON \u0060notification_queue\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027UPDATE\u0027, \u0027notification_queue\u0027, \u0027NotificationQueuePage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027notification_queue update\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\n\nEND"
.\tools\schema\snapshots\schema.json:29588:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_notification_templates_ad_audit\u0060 AFTER DELETE ON \u0060notification_templates\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027DELETE\u0027, \u0027notification_templates\u0027, \u0027NotificationTemplatesPage\u0027, OLD.id, NULL,\n     NULL, NULL, CONCAT(\u0027notification_templates delete\u0027, CONCAT(\u0027; code=\u0027, COALESCE(OLD.code,\u0027\u0027)), CONCAT(\u0027; name=\u0027, COALESCE(OLD.name,\u0027\u0027))), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027warning\u0027);\nEND"
.\tools\schema\snapshots\schema.json:29595:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_notification_templates_ai_audit\u0060 AFTER INSERT ON \u0060notification_templates\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027INSERT\u0027, \u0027notification_templates\u0027, \u0027NotificationTemplatesPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027notification_templates insert\u0027, CONCAT(\u0027; code=\u0027, COALESCE(NEW.code,\u0027\u0027)), CONCAT(\u0027; name=\u0027, COALESCE(NEW.name,\u0027\u0027))), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\nEND"
.\tools\schema\snapshots\schema.json:29602:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_notification_templates_au_audit\u0060 AFTER UPDATE ON \u0060notification_templates\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027UPDATE\u0027, \u0027notification_templates\u0027, \u0027NotificationTemplatesPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027notification_templates update\u0027, CONCAT(\u0027; code: \u0027, COALESCE(OLD.code,\u0027\u0027), \u0027 \u2192 \u0027, COALESCE(NEW.code,\u0027\u0027)), CONCAT(\u0027; name: \u0027, COALESCE(OLD.name,\u0027\u0027), \u0027 \u2192 \u0027, COALESCE(NEW.name,\u0027\u0027))), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\n\n  IF COALESCE(OLD.code,\u0027\u0027) \u003C\u003E COALESCE(NEW.code,\u0027\u0027) THEN\n    INSERT INTO system_event_log\n      (user_id, event_type, table_name, related_module, record_id, field_name,\n       old_value, new_value, description, source_ip, device_info, session_id, severity)\n    VALUES\n      (NULL, \u0027UPDATE\u0027, \u0027notification_templates\u0027, \u0027NotificationTemplatesPage\u0027, NEW.id, \u0027code\u0027,\n       OLD.code, NEW.code, \u0027notification_templates update: code changed\u0027, \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\n  END IF;\n\n  IF COALESCE(OLD.name,\u0027\u0027) \u003C\u003E COALESCE(NEW.name,\u0027\u0027) THEN\n    INSERT INTO system_event_log\n      (user_id, event_type, table_name, related_module, record_id, field_name,\n       old_value, new_value, description, source_ip, device_info, session_id, severity)\n    VALUES\n      (NULL, \u0027UPDATE\u0027, \u0027notification_templates\u0027, \u0027NotificationTemplatesPage\u0027, NEW.id, \u0027name\u0027,\n       OLD.name, NEW.name, \u0027notification_templates update: name changed\u0027, \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\n  END IF;\nEND"
.\tools\schema\snapshots\schema.json:29609:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_parts_ad_audit\u0060 AFTER DELETE ON \u0060parts\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027DELETE\u0027, \u0027parts\u0027, \u0027PartsPage\u0027, OLD.id, NULL,\n     NULL, NULL, CONCAT(\u0027parts delete\u0027, CONCAT(\u0027; code=\u0027, COALESCE(OLD.code,\u0027\u0027)), CONCAT(\u0027; name=\u0027, COALESCE(OLD.name,\u0027\u0027))), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027warning\u0027);\nEND"
.\tools\schema\snapshots\schema.json:29616:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_parts_ai_audit\u0060 AFTER INSERT ON \u0060parts\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027INSERT\u0027, \u0027parts\u0027, \u0027PartsPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027parts insert\u0027, CONCAT(\u0027; code=\u0027, COALESCE(NEW.code,\u0027\u0027)), CONCAT(\u0027; name=\u0027, COALESCE(NEW.name,\u0027\u0027))), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\nEND"
.\tools\schema\snapshots\schema.json:29623:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_parts_au_audit\u0060 AFTER UPDATE ON \u0060parts\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027UPDATE\u0027, \u0027parts\u0027, \u0027PartsPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027parts update\u0027, CONCAT(\u0027; code: \u0027, COALESCE(OLD.code,\u0027\u0027), \u0027 \u2192 \u0027, COALESCE(NEW.code,\u0027\u0027)), CONCAT(\u0027; name: \u0027, COALESCE(OLD.name,\u0027\u0027), \u0027 \u2192 \u0027, COALESCE(NEW.name,\u0027\u0027))), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\n\n  IF COALESCE(OLD.code,\u0027\u0027) \u003C\u003E COALESCE(NEW.code,\u0027\u0027) THEN\n    INSERT INTO system_event_log\n      (user_id, event_type, table_name, related_module, record_id, field_name,\n       old_value, new_value, description, source_ip, device_info, session_id, severity)\n    VALUES\n      (NULL, \u0027UPDATE\u0027, \u0027parts\u0027, \u0027PartsPage\u0027, NEW.id, \u0027code\u0027,\n       OLD.code, NEW.code, \u0027parts update: code changed\u0027, \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\n  END IF;\n\n  IF COALESCE(OLD.name,\u0027\u0027) \u003C\u003E COALESCE(NEW.name,\u0027\u0027) THEN\n    INSERT INTO system_event_log\n      (user_id, event_type, table_name, related_module, record_id, field_name,\n       old_value, new_value, description, source_ip, device_info, session_id, severity)\n    VALUES\n      (NULL, \u0027UPDATE\u0027, \u0027parts\u0027, \u0027PartsPage\u0027, NEW.id, \u0027name\u0027,\n       OLD.name, NEW.name, \u0027parts update: name changed\u0027, \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\n  END IF;\nEND"
.\tools\schema\snapshots\schema.json:29630:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_part_bom_ad_audit\u0060 AFTER DELETE ON \u0060part_bom\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027DELETE\u0027, \u0027part_bom\u0027, \u0027PartBomPage\u0027, OLD.id, NULL,\n     NULL, NULL, CONCAT(\u0027part_bom delete\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027warning\u0027);\nEND"
.\tools\schema\snapshots\schema.json:29637:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_part_bom_ai_audit\u0060 AFTER INSERT ON \u0060part_bom\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027INSERT\u0027, \u0027part_bom\u0027, \u0027PartBomPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027part_bom insert\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\nEND"
.\tools\schema\snapshots\schema.json:29644:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_part_bom_au_audit\u0060 AFTER UPDATE ON \u0060part_bom\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027UPDATE\u0027, \u0027part_bom\u0027, \u0027PartBomPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027part_bom update\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\n\nEND"
.\tools\schema\snapshots\schema.json:29651:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_part_supplier_prices_ad_audit\u0060 AFTER DELETE ON \u0060part_supplier_prices\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027DELETE\u0027, \u0027part_supplier_prices\u0027, \u0027PartSupplierPricesPage\u0027, OLD.id, NULL,\n     NULL, NULL, CONCAT(\u0027part_supplier_prices delete\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027warning\u0027);\nEND"
.\tools\schema\snapshots\schema.json:29658:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_part_supplier_prices_ai_audit\u0060 AFTER INSERT ON \u0060part_supplier_prices\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027INSERT\u0027, \u0027part_supplier_prices\u0027, \u0027PartSupplierPricesPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027part_supplier_prices insert\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\nEND"
.\tools\schema\snapshots\schema.json:29665:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_part_supplier_prices_au_audit\u0060 AFTER UPDATE ON \u0060part_supplier_prices\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027UPDATE\u0027, \u0027part_supplier_prices\u0027, \u0027PartSupplierPricesPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027part_supplier_prices update\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\n\nEND"
.\tools\schema\snapshots\schema.json:29672:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_permissions_ad_audit\u0060 AFTER DELETE ON \u0060permissions\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027DELETE\u0027, \u0027permissions\u0027, \u0027PermissionsPage\u0027, OLD.id, NULL,\n     NULL, NULL, CONCAT(\u0027permissions delete\u0027, CONCAT(\u0027; code=\u0027, COALESCE(OLD.code,\u0027\u0027))), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027warning\u0027);\nEND"
.\tools\schema\snapshots\schema.json:29679:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_permissions_ai_audit\u0060 AFTER INSERT ON \u0060permissions\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027INSERT\u0027, \u0027permissions\u0027, \u0027PermissionsPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027permissions insert\u0027, CONCAT(\u0027; code=\u0027, COALESCE(NEW.code,\u0027\u0027))), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\nEND"
.\tools\schema\snapshots\schema.json:29686:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_permissions_au_audit\u0060 AFTER UPDATE ON \u0060permissions\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027UPDATE\u0027, \u0027permissions\u0027, \u0027PermissionsPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027permissions update\u0027, CONCAT(\u0027; code: \u0027, COALESCE(OLD.code,\u0027\u0027), \u0027 \u2192 \u0027, COALESCE(NEW.code,\u0027\u0027))), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\n\n  IF COALESCE(OLD.code,\u0027\u0027) \u003C\u003E COALESCE(NEW.code,\u0027\u0027) THEN\n    INSERT INTO system_event_log\n      (user_id, event_type, table_name, related_module, record_id, field_name,\n       old_value, new_value, description, source_ip, device_info, session_id, severity)\n    VALUES\n      (NULL, \u0027UPDATE\u0027, \u0027permissions\u0027, \u0027PermissionsPage\u0027, NEW.id, \u0027code\u0027,\n       OLD.code, NEW.code, \u0027permissions update: code changed\u0027, \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\n  END IF;\nEND"
.\tools\schema\snapshots\schema.json:29693:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_permission_change_log_ad_audit\u0060 AFTER DELETE ON \u0060permission_change_log\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027DELETE\u0027, \u0027permission_change_log\u0027, \u0027PermissionChangeLogPage\u0027, OLD.id, NULL,\n     NULL, NULL, CONCAT(\u0027permission_change_log delete\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027warning\u0027);\nEND"
.\tools\schema\snapshots\schema.json:29700:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_permission_change_log_ai_audit\u0060 AFTER INSERT ON \u0060permission_change_log\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027INSERT\u0027, \u0027permission_change_log\u0027, \u0027PermissionChangeLogPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027permission_change_log insert\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\nEND"
.\tools\schema\snapshots\schema.json:29707:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_permission_change_log_au_audit\u0060 AFTER UPDATE ON \u0060permission_change_log\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027UPDATE\u0027, \u0027permission_change_log\u0027, \u0027PermissionChangeLogPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027permission_change_log update\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\n\nEND"
.\tools\schema\snapshots\schema.json:29714:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_permission_requests_ad_audit\u0060 AFTER DELETE ON \u0060permission_requests\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027DELETE\u0027, \u0027permission_requests\u0027, \u0027PermissionRequestsPage\u0027, OLD.id, NULL,\n     NULL, NULL, CONCAT(\u0027permission_requests delete\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027warning\u0027);\nEND"
.\tools\schema\snapshots\schema.json:29721:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_permission_requests_ai_audit\u0060 AFTER INSERT ON \u0060permission_requests\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027INSERT\u0027, \u0027permission_requests\u0027, \u0027PermissionRequestsPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027permission_requests insert\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\nEND"
.\tools\schema\snapshots\schema.json:29728:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_permission_requests_au_audit\u0060 AFTER UPDATE ON \u0060permission_requests\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027UPDATE\u0027, \u0027permission_requests\u0027, \u0027PermissionRequestsPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027permission_requests update\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\n\nEND"
.\tools\schema\snapshots\schema.json:29735:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_photos_ad_audit\u0060 AFTER DELETE ON \u0060photos\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027DELETE\u0027, \u0027photos\u0027, \u0027PhotosPage\u0027, OLD.id, NULL,\n     NULL, NULL, CONCAT(\u0027photos delete\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027warning\u0027);\nEND"
.\tools\schema\snapshots\schema.json:29742:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_photos_ai_audit\u0060 AFTER INSERT ON \u0060photos\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027INSERT\u0027, \u0027photos\u0027, \u0027PhotosPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027photos insert\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\nEND"
.\tools\schema\snapshots\schema.json:29749:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_photos_au_audit\u0060 AFTER UPDATE ON \u0060photos\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027UPDATE\u0027, \u0027photos\u0027, \u0027PhotosPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027photos update\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\n\nEND"
.\tools\schema\snapshots\schema.json:29756:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_ppm_plans_ad_audit\u0060 AFTER DELETE ON \u0060ppm_plans\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027DELETE\u0027, \u0027ppm_plans\u0027, \u0027PpmPlansPage\u0027, OLD.id, NULL,\n     NULL, NULL, CONCAT(\u0027ppm_plans delete\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027warning\u0027);\nEND"
.\tools\schema\snapshots\schema.json:29763:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_ppm_plans_ai_audit\u0060 AFTER INSERT ON \u0060ppm_plans\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027INSERT\u0027, \u0027ppm_plans\u0027, \u0027PpmPlansPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027ppm_plans insert\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\nEND"
.\tools\schema\snapshots\schema.json:29770:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_ppm_plans_au_audit\u0060 AFTER UPDATE ON \u0060ppm_plans\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027UPDATE\u0027, \u0027ppm_plans\u0027, \u0027PpmPlansPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027ppm_plans update\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\n\nEND"
.\tools\schema\snapshots\schema.json:29777:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_preventive_maintenance_plans_ad_audit\u0060 AFTER DELETE ON \u0060preventive_maintenance_plans\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027DELETE\u0027, \u0027preventive_maintenance_plans\u0027, \u0027PreventiveMaintenancePlansPage\u0027, OLD.id, NULL,\n     NULL, NULL, CONCAT(\u0027preventive_maintenance_plans delete\u0027, CONCAT(\u0027; code=\u0027, COALESCE(OLD.code,\u0027\u0027)), CONCAT(\u0027; name=\u0027, COALESCE(OLD.name,\u0027\u0027))), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027warning\u0027);\nEND"
.\tools\schema\snapshots\schema.json:29784:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_preventive_maintenance_plans_ai_audit\u0060 AFTER INSERT ON \u0060preventive_maintenance_plans\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027INSERT\u0027, \u0027preventive_maintenance_plans\u0027, \u0027PreventiveMaintenancePlansPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027preventive_maintenance_plans insert\u0027, CONCAT(\u0027; code=\u0027, COALESCE(NEW.code,\u0027\u0027)), CONCAT(\u0027; name=\u0027, COALESCE(NEW.name,\u0027\u0027))), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\nEND"
.\tools\schema\snapshots\schema.json:29791:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_preventive_maintenance_plans_au_audit\u0060 AFTER UPDATE ON \u0060preventive_maintenance_plans\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027UPDATE\u0027, \u0027preventive_maintenance_plans\u0027, \u0027PreventiveMaintenancePlansPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027preventive_maintenance_plans update\u0027, CONCAT(\u0027; code: \u0027, COALESCE(OLD.code,\u0027\u0027), \u0027 \u2192 \u0027, COALESCE(NEW.code,\u0027\u0027)), CONCAT(\u0027; name: \u0027, COALESCE(OLD.name,\u0027\u0027), \u0027 \u2192 \u0027, COALESCE(NEW.name,\u0027\u0027))), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\n\n  IF COALESCE(OLD.code,\u0027\u0027) \u003C\u003E COALESCE(NEW.code,\u0027\u0027) THEN\n    INSERT INTO system_event_log\n      (user_id, event_type, table_name, related_module, record_id, field_name,\n       old_value, new_value, description, source_ip, device_info, session_id, severity)\n    VALUES\n      (NULL, \u0027UPDATE\u0027, \u0027preventive_maintenance_plans\u0027, \u0027PreventiveMaintenancePlansPage\u0027, NEW.id, \u0027code\u0027,\n       OLD.code, NEW.code, \u0027preventive_maintenance_plans update: code changed\u0027, \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\n  END IF;\n\n  IF COALESCE(OLD.name,\u0027\u0027) \u003C\u003E COALESCE(NEW.name,\u0027\u0027) THEN\n    INSERT INTO system_event_log\n      (user_id, event_type, table_name, related_module, record_id, field_name,\n       old_value, new_value, description, source_ip, device_info, session_id, severity)\n    VALUES\n      (NULL, \u0027UPDATE\u0027, \u0027preventive_maintenance_plans\u0027, \u0027PreventiveMaintenancePlansPage\u0027, NEW.id, \u0027name\u0027,\n       OLD.name, NEW.name, \u0027preventive_maintenance_plans update: name changed\u0027, \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\n  END IF;\nEND"
.\tools\schema\snapshots\schema.json:29805:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_qe_sync_u\u0060 BEFORE UPDATE ON \u0060quality_events\u0060 FOR EACH ROW BEGIN\n  IF (NEW.event_type \u003C=\u003E OLD.event_type) = 0 THEN\n    CALL ref_touch(\u0027quality_event_type\u0027, NEW.event_type, NEW.event_type);\n    IF LAST_INSERT_ID() IS NOT NULL THEN SET NEW.type_id = LAST_INSERT_ID(); END IF;\n  END IF;\n  IF (NEW.status \u003C=\u003E OLD.status) = 0 THEN\n    CALL ref_touch(\u0027quality_status\u0027, NEW.status, NEW.status);\n    IF LAST_INSERT_ID() IS NOT NULL THEN SET NEW.status_id = LAST_INSERT_ID(); END IF;\n  END IF;\nEND"
.\tools\schema\snapshots\schema.json:29812:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_quality_events_ad_audit\u0060 AFTER DELETE ON \u0060quality_events\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027DELETE\u0027, \u0027quality_events\u0027, \u0027QualityEventsPage\u0027, OLD.id, NULL,\n     NULL, NULL, CONCAT(\u0027quality_events delete\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027warning\u0027);\nEND"
.\tools\schema\snapshots\schema.json:29819:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_quality_events_ai_audit\u0060 AFTER INSERT ON \u0060quality_events\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027INSERT\u0027, \u0027quality_events\u0027, \u0027QualityEventsPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027quality_events insert\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\nEND"
.\tools\schema\snapshots\schema.json:29826:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_quality_events_au_audit\u0060 AFTER UPDATE ON \u0060quality_events\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027UPDATE\u0027, \u0027quality_events\u0027, \u0027QualityEventsPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027quality_events update\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\n\nEND"
.\tools\schema\snapshots\schema.json:29833:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_report_schedule_ad_audit\u0060 AFTER DELETE ON \u0060report_schedule\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027DELETE\u0027, \u0027report_schedule\u0027, \u0027ReportSchedulePage\u0027, OLD.id, NULL,\n     NULL, NULL, CONCAT(\u0027report_schedule delete\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027warning\u0027);\nEND"
.\tools\schema\snapshots\schema.json:29840:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_report_schedule_ai_audit\u0060 AFTER INSERT ON \u0060report_schedule\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027INSERT\u0027, \u0027report_schedule\u0027, \u0027ReportSchedulePage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027report_schedule insert\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\nEND"
.\tools\schema\snapshots\schema.json:29847:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_report_schedule_au_audit\u0060 AFTER UPDATE ON \u0060report_schedule\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027UPDATE\u0027, \u0027report_schedule\u0027, \u0027ReportSchedulePage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027report_schedule update\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\n\nEND"
.\tools\schema\snapshots\schema.json:29854:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_requalification_schedule_ad_audit\u0060 AFTER DELETE ON \u0060requalification_schedule\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027DELETE\u0027, \u0027requalification_schedule\u0027, \u0027RequalificationSchedulePage\u0027, OLD.id, NULL,\n     NULL, NULL, CONCAT(\u0027requalification_schedule delete\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027warning\u0027);\nEND"
.\tools\schema\snapshots\schema.json:29861:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_requalification_schedule_ai_audit\u0060 AFTER INSERT ON \u0060requalification_schedule\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027INSERT\u0027, \u0027requalification_schedule\u0027, \u0027RequalificationSchedulePage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027requalification_schedule insert\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\nEND"
.\tools\schema\snapshots\schema.json:29868:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_requalification_schedule_au_audit\u0060 AFTER UPDATE ON \u0060requalification_schedule\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027UPDATE\u0027, \u0027requalification_schedule\u0027, \u0027RequalificationSchedulePage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027requalification_schedule update\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\n\nEND"
.\tools\schema\snapshots\schema.json:29875:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_roles_ad_audit\u0060 AFTER DELETE ON \u0060roles\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027DELETE\u0027, \u0027roles\u0027, \u0027RolesPage\u0027, OLD.id, NULL,\n     NULL, NULL, CONCAT(\u0027roles delete\u0027, CONCAT(\u0027; name=\u0027, COALESCE(OLD.name,\u0027\u0027))), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027warning\u0027);\nEND"
.\tools\schema\snapshots\schema.json:29882:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_roles_ai_audit\u0060 AFTER INSERT ON \u0060roles\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027INSERT\u0027, \u0027roles\u0027, \u0027RolesPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027roles insert\u0027, CONCAT(\u0027; name=\u0027, COALESCE(NEW.name,\u0027\u0027))), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\nEND"
.\tools\schema\snapshots\schema.json:29889:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_roles_au_audit\u0060 AFTER UPDATE ON \u0060roles\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027UPDATE\u0027, \u0027roles\u0027, \u0027RolesPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027roles update\u0027, CONCAT(\u0027; name: \u0027, COALESCE(OLD.name,\u0027\u0027), \u0027 \u2192 \u0027, COALESCE(NEW.name,\u0027\u0027))), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\n\n  IF COALESCE(OLD.name,\u0027\u0027) \u003C\u003E COALESCE(NEW.name,\u0027\u0027) THEN\n    INSERT INTO system_event_log\n      (user_id, event_type, table_name, related_module, record_id, field_name,\n       old_value, new_value, description, source_ip, device_info, session_id, severity)\n    VALUES\n      (NULL, \u0027UPDATE\u0027, \u0027roles\u0027, \u0027RolesPage\u0027, NEW.id, \u0027name\u0027,\n       OLD.name, NEW.name, \u0027roles update: name changed\u0027, \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\n  END IF;\nEND"
.\tools\schema\snapshots\schema.json:29896:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_role_audit_ad_audit\u0060 AFTER DELETE ON \u0060role_audit\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027DELETE\u0027, \u0027role_audit\u0027, \u0027RoleAuditPage\u0027, OLD.id, NULL,\n     NULL, NULL, CONCAT(\u0027role_audit delete\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027warning\u0027);\nEND"
.\tools\schema\snapshots\schema.json:29903:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_role_audit_ai_audit\u0060 AFTER INSERT ON \u0060role_audit\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027INSERT\u0027, \u0027role_audit\u0027, \u0027RoleAuditPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027role_audit insert\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\nEND"
.\tools\schema\snapshots\schema.json:29910:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_role_audit_au_audit\u0060 AFTER UPDATE ON \u0060role_audit\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027UPDATE\u0027, \u0027role_audit\u0027, \u0027RoleAuditPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027role_audit update\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\n\nEND"
.\tools\schema\snapshots\schema.json:29917:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_role_permissions_ad_audit\u0060 AFTER DELETE ON \u0060role_permissions\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027DELETE\u0027, \u0027role_permissions\u0027, \u0027RolePermissionsPage\u0027, OLD.role_id, NULL,\n     NULL, NULL, CONCAT(\u0027role_permissions delete\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027warning\u0027);\nEND"
.\tools\schema\snapshots\schema.json:29924:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_role_permissions_ai_audit\u0060 AFTER INSERT ON \u0060role_permissions\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027INSERT\u0027, \u0027role_permissions\u0027, \u0027RolePermissionsPage\u0027, NEW.role_id, NULL,\n     NULL, NULL, CONCAT(\u0027role_permissions insert\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\nEND"
.\tools\schema\snapshots\schema.json:29931:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_role_permissions_au_audit\u0060 AFTER UPDATE ON \u0060role_permissions\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027UPDATE\u0027, \u0027role_permissions\u0027, \u0027RolePermissionsPage\u0027, NEW.role_id, NULL,\n     NULL, NULL, CONCAT(\u0027role_permissions update\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\n\nEND"
.\tools\schema\snapshots\schema.json:29938:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_rooms_ad_audit\u0060 AFTER DELETE ON \u0060rooms\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027DELETE\u0027, \u0027rooms\u0027, \u0027RoomsPage\u0027, OLD.id, NULL,\n     NULL, NULL, CONCAT(\u0027rooms delete\u0027, CONCAT(\u0027; code=\u0027, COALESCE(OLD.code,\u0027\u0027)), CONCAT(\u0027; name=\u0027, COALESCE(OLD.name,\u0027\u0027))), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027warning\u0027);\nEND"
.\tools\schema\snapshots\schema.json:29945:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_rooms_ai_audit\u0060 AFTER INSERT ON \u0060rooms\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027INSERT\u0027, \u0027rooms\u0027, \u0027RoomsPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027rooms insert\u0027, CONCAT(\u0027; code=\u0027, COALESCE(NEW.code,\u0027\u0027)), CONCAT(\u0027; name=\u0027, COALESCE(NEW.name,\u0027\u0027))), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\nEND"
.\tools\schema\snapshots\schema.json:29952:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_rooms_au_audit\u0060 AFTER UPDATE ON \u0060rooms\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027UPDATE\u0027, \u0027rooms\u0027, \u0027RoomsPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027rooms update\u0027, CONCAT(\u0027; code: \u0027, COALESCE(OLD.code,\u0027\u0027), \u0027 \u2192 \u0027, COALESCE(NEW.code,\u0027\u0027)), CONCAT(\u0027; name: \u0027, COALESCE(OLD.name,\u0027\u0027), \u0027 \u2192 \u0027, COALESCE(NEW.name,\u0027\u0027))), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\n\n  IF COALESCE(OLD.code,\u0027\u0027) \u003C\u003E COALESCE(NEW.code,\u0027\u0027) THEN\n    INSERT INTO system_event_log\n      (user_id, event_type, table_name, related_module, record_id, field_name,\n       old_value, new_value, description, source_ip, device_info, session_id, severity)\n    VALUES\n      (NULL, \u0027UPDATE\u0027, \u0027rooms\u0027, \u0027RoomsPage\u0027, NEW.id, \u0027code\u0027,\n       OLD.code, NEW.code, \u0027rooms update: code changed\u0027, \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\n  END IF;\n\n  IF COALESCE(OLD.name,\u0027\u0027) \u003C\u003E COALESCE(NEW.name,\u0027\u0027) THEN\n    INSERT INTO system_event_log\n      (user_id, event_type, table_name, related_module, record_id, field_name,\n       old_value, new_value, description, source_ip, device_info, session_id, severity)\n    VALUES\n      (NULL, \u0027UPDATE\u0027, \u0027rooms\u0027, \u0027RoomsPage\u0027, NEW.id, \u0027name\u0027,\n       OLD.name, NEW.name, \u0027rooms update: name changed\u0027, \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\n  END IF;\nEND"
.\tools\schema\snapshots\schema.json:29959:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_scheduled_jobs_ad_audit\u0060 AFTER DELETE ON \u0060scheduled_jobs\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027DELETE\u0027, \u0027scheduled_jobs\u0027, \u0027ScheduledJobsPage\u0027, OLD.id, NULL,\n     NULL, NULL, CONCAT(\u0027scheduled_jobs delete\u0027, CONCAT(\u0027; name=\u0027, COALESCE(OLD.name,\u0027\u0027))), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027warning\u0027);\nEND"
.\tools\schema\snapshots\schema.json:29966:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_scheduled_jobs_ai_audit\u0060 AFTER INSERT ON \u0060scheduled_jobs\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027INSERT\u0027, \u0027scheduled_jobs\u0027, \u0027ScheduledJobsPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027scheduled_jobs insert\u0027, CONCAT(\u0027; name=\u0027, COALESCE(NEW.name,\u0027\u0027))), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\nEND"
.\tools\schema\snapshots\schema.json:29973:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_scheduled_jobs_au_audit\u0060 AFTER UPDATE ON \u0060scheduled_jobs\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027UPDATE\u0027, \u0027scheduled_jobs\u0027, \u0027ScheduledJobsPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027scheduled_jobs update\u0027, CONCAT(\u0027; name: \u0027, COALESCE(OLD.name,\u0027\u0027), \u0027 \u2192 \u0027, COALESCE(NEW.name,\u0027\u0027))), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\n\n  IF COALESCE(OLD.name,\u0027\u0027) \u003C\u003E COALESCE(NEW.name,\u0027\u0027) THEN\n    INSERT INTO system_event_log\n      (user_id, event_type, table_name, related_module, record_id, field_name,\n       old_value, new_value, description, source_ip, device_info, session_id, severity)\n    VALUES\n      (NULL, \u0027UPDATE\u0027, \u0027scheduled_jobs\u0027, \u0027ScheduledJobsPage\u0027, NEW.id, \u0027name\u0027,\n       OLD.name, NEW.name, \u0027scheduled_jobs update: name changed\u0027, \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\n  END IF;\nEND"
.\tools\schema\snapshots\schema.json:29980:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_scheduled_jobs_delete\u0060 AFTER DELETE ON \u0060scheduled_jobs\u0060 FOR EACH ROW BEGIN\n    INSERT INTO scheduled_job_audit_log (\n        scheduled_job_id, user_id, action, old_value, source_ip, device_info, session_id, note\n    ) VALUES (\n        OLD.id, OLD.last_modified_by, \u0027DELETE\u0027,\n        OLD.comment, OLD.ip_address, OLD.device_info, OLD.session_id, OLD.comment\n    );\nEND"
.\tools\schema\snapshots\schema.json:29987:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_scheduled_jobs_insert\u0060 AFTER INSERT ON \u0060scheduled_jobs\u0060 FOR EACH ROW BEGIN\n    INSERT INTO scheduled_job_audit_log (\n        scheduled_job_id, user_id, action, new_value, source_ip, device_info, session_id, digital_signature, note\n    ) VALUES (\n        NEW.id, NEW.created_by, \u0027CREATE\u0027,\n        CONCAT(\u0027Created job: \u0027, NEW.name, \u0027 [\u0027, NEW.job_type, \u0027]\u0027),\n        NEW.ip_address, NEW.device_info, NEW.session_id, NEW.digital_signature, NEW.comment\n    );\nEND"
.\tools\schema\snapshots\schema.json:29994:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_scheduled_jobs_update\u0060 AFTER UPDATE ON \u0060scheduled_jobs\u0060 FOR EACH ROW BEGIN\n    INSERT INTO scheduled_job_audit_log (\n        scheduled_job_id, user_id, action, old_value, new_value, source_ip, device_info, session_id, digital_signature, note\n    ) VALUES (\n        NEW.id, NEW.last_modified_by, \u0027UPDATE\u0027,\n        OLD.comment, NEW.comment,\n        NEW.ip_address, NEW.device_info, NEW.session_id, NEW.digital_signature, NEW.comment\n    );\nEND"
.\tools\schema\snapshots\schema.json:30001:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_scheduled_job_audit_log_ad_audit\u0060 AFTER DELETE ON \u0060scheduled_job_audit_log\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027DELETE\u0027, \u0027scheduled_job_audit_log\u0027, \u0027ScheduledJobAuditLogPage\u0027, OLD.id, NULL,\n     NULL, NULL, CONCAT(\u0027scheduled_job_audit_log delete\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027warning\u0027);\nEND"
.\tools\schema\snapshots\schema.json:30008:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_scheduled_job_audit_log_ai_audit\u0060 AFTER INSERT ON \u0060scheduled_job_audit_log\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027INSERT\u0027, \u0027scheduled_job_audit_log\u0027, \u0027ScheduledJobAuditLogPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027scheduled_job_audit_log insert\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\nEND"
.\tools\schema\snapshots\schema.json:30015:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_scheduled_job_audit_log_au_audit\u0060 AFTER UPDATE ON \u0060scheduled_job_audit_log\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027UPDATE\u0027, \u0027scheduled_job_audit_log\u0027, \u0027ScheduledJobAuditLogPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027scheduled_job_audit_log update\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\n\nEND"
.\tools\schema\snapshots\schema.json:30022:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_schema_migration_log_ad_audit\u0060 AFTER DELETE ON \u0060schema_migration_log\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027DELETE\u0027, \u0027schema_migration_log\u0027, \u0027SchemaMigrationLogPage\u0027, OLD.id, NULL,\n     NULL, NULL, CONCAT(\u0027schema_migration_log delete\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027warning\u0027);\nEND"
.\tools\schema\snapshots\schema.json:30029:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_schema_migration_log_ai_audit\u0060 AFTER INSERT ON \u0060schema_migration_log\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027INSERT\u0027, \u0027schema_migration_log\u0027, \u0027SchemaMigrationLogPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027schema_migration_log insert\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\nEND"
.\tools\schema\snapshots\schema.json:30036:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_schema_migration_log_au_audit\u0060 AFTER UPDATE ON \u0060schema_migration_log\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027UPDATE\u0027, \u0027schema_migration_log\u0027, \u0027SchemaMigrationLogPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027schema_migration_log update\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\n\nEND"
.\tools\schema\snapshots\schema.json:30043:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_sdl_sync\u0060 BEFORE INSERT ON \u0060sensor_data_logs\u0060 FOR EACH ROW BEGIN\n  CALL ref_touch(\u0027sensor_type\u0027, NEW.sensor_type, NEW.sensor_type);\n  IF LAST_INSERT_ID() IS NOT NULL THEN SET NEW.sensor_type_id = LAST_INSERT_ID(); END IF;\n\n  \n  IF NEW.unit IS NOT NULL THEN\n    INSERT INTO units(code,name,quantity) VALUES (NEW.unit, NEW.unit, NULL)\n    ON DUPLICATE KEY UPDATE id=LAST_INSERT_ID(id), name=VALUES(name);\n    SET NEW.unit_id = LAST_INSERT_ID();\n  END IF;\nEND"
.\tools\schema\snapshots\schema.json:30050:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_sdl_sync_u\u0060 BEFORE UPDATE ON \u0060sensor_data_logs\u0060 FOR EACH ROW BEGIN\n  IF (NEW.sensor_type \u003C=\u003E OLD.sensor_type) = 0 THEN\n    CALL ref_touch(\u0027sensor_type\u0027, NEW.sensor_type, NEW.sensor_type);\n    IF LAST_INSERT_ID() IS NOT NULL THEN SET NEW.sensor_type_id = LAST_INSERT_ID(); END IF;\n  END IF;\n\n  IF (NEW.unit \u003C=\u003E OLD.unit) = 0 AND NEW.unit IS NOT NULL THEN\n    INSERT INTO units(code,name) VALUES (NEW.unit, NEW.unit)\n    ON DUPLICATE KEY UPDATE id=LAST_INSERT_ID(id), name=VALUES(name);\n    SET NEW.unit_id = LAST_INSERT_ID();\n  END IF;\nEND"
.\tools\schema\snapshots\schema.json:30057:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_sensitive_access_fk_guard\u0060 BEFORE INSERT ON \u0060sensitive_data_access_log\u0060 FOR EACH ROW BEGIN\n  IF NEW.user_id IS NOT NULL THEN\n    IF (SELECT COUNT(*) FROM users WHERE id = NEW.user_id) = 0 THEN\n      SET NEW.user_id = NULL;\n    END IF;\n  END IF;\n  IF NEW.approved_by IS NOT NULL THEN\n    IF (SELECT COUNT(*) FROM users WHERE id = NEW.approved_by) = 0 THEN\n      SET NEW.approved_by = NULL;\n    END IF;\n  END IF;\nEND"
.\tools\schema\snapshots\schema.json:30064:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_sensitive_data_access_log_ad_audit\u0060 AFTER DELETE ON \u0060sensitive_data_access_log\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027DELETE\u0027, \u0027sensitive_data_access_log\u0027, \u0027SensitiveDataAccessLogPage\u0027, OLD.id, NULL,\n     NULL, NULL, CONCAT(\u0027sensitive_data_access_log delete\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027warning\u0027);\nEND"
.\tools\schema\snapshots\schema.json:30071:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_sensitive_data_access_log_ai_audit\u0060 AFTER INSERT ON \u0060sensitive_data_access_log\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027INSERT\u0027, \u0027sensitive_data_access_log\u0027, \u0027SensitiveDataAccessLogPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027sensitive_data_access_log insert\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\nEND"
.\tools\schema\snapshots\schema.json:30078:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_sensitive_data_access_log_au_audit\u0060 AFTER UPDATE ON \u0060sensitive_data_access_log\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027UPDATE\u0027, \u0027sensitive_data_access_log\u0027, \u0027SensitiveDataAccessLogPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027sensitive_data_access_log update\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\n\nEND"
.\tools\schema\snapshots\schema.json:30085:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_sensor_data_logs_ad_audit\u0060 AFTER DELETE ON \u0060sensor_data_logs\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027DELETE\u0027, \u0027sensor_data_logs\u0027, \u0027SensorDataLogsPage\u0027, OLD.id, NULL,\n     NULL, NULL, CONCAT(\u0027sensor_data_logs delete\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027warning\u0027);\nEND"
.\tools\schema\snapshots\schema.json:30092:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_sensor_data_logs_ai_audit\u0060 AFTER INSERT ON \u0060sensor_data_logs\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027INSERT\u0027, \u0027sensor_data_logs\u0027, \u0027SensorDataLogsPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027sensor_data_logs insert\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\nEND"
.\tools\schema\snapshots\schema.json:30099:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_sensor_data_logs_au_audit\u0060 AFTER UPDATE ON \u0060sensor_data_logs\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027UPDATE\u0027, \u0027sensor_data_logs\u0027, \u0027SensorDataLogsPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027sensor_data_logs update\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\n\nEND"
.\tools\schema\snapshots\schema.json:30106:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_sensor_models_ad_audit\u0060 AFTER DELETE ON \u0060sensor_models\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027DELETE\u0027, \u0027sensor_models\u0027, \u0027SensorModelsPage\u0027, OLD.id, NULL,\n     NULL, NULL, CONCAT(\u0027sensor_models delete\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027warning\u0027);\nEND"
.\tools\schema\snapshots\schema.json:30113:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_sensor_models_ai_audit\u0060 AFTER INSERT ON \u0060sensor_models\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027INSERT\u0027, \u0027sensor_models\u0027, \u0027SensorModelsPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027sensor_models insert\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\nEND"
.\tools\schema\snapshots\schema.json:30120:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_sensor_models_au_audit\u0060 AFTER UPDATE ON \u0060sensor_models\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027UPDATE\u0027, \u0027sensor_models\u0027, \u0027SensorModelsPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027sensor_models update\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\n\nEND"
.\tools\schema\snapshots\schema.json:30127:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_sensor_types_ad_audit\u0060 AFTER DELETE ON \u0060sensor_types\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027DELETE\u0027, \u0027sensor_types\u0027, \u0027SensorTypesPage\u0027, OLD.id, NULL,\n     NULL, NULL, CONCAT(\u0027sensor_types delete\u0027, CONCAT(\u0027; code=\u0027, COALESCE(OLD.code,\u0027\u0027)), CONCAT(\u0027; name=\u0027, COALESCE(OLD.name,\u0027\u0027))), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027warning\u0027);\nEND"
.\tools\schema\snapshots\schema.json:30134:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_sensor_types_ai_audit\u0060 AFTER INSERT ON \u0060sensor_types\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027INSERT\u0027, \u0027sensor_types\u0027, \u0027SensorTypesPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027sensor_types insert\u0027, CONCAT(\u0027; code=\u0027, COALESCE(NEW.code,\u0027\u0027)), CONCAT(\u0027; name=\u0027, COALESCE(NEW.name,\u0027\u0027))), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\nEND"
.\tools\schema\snapshots\schema.json:30141:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_sensor_types_au_audit\u0060 AFTER UPDATE ON \u0060sensor_types\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027UPDATE\u0027, \u0027sensor_types\u0027, \u0027SensorTypesPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027sensor_types update\u0027, CONCAT(\u0027; code: \u0027, COALESCE(OLD.code,\u0027\u0027), \u0027 \u2192 \u0027, COALESCE(NEW.code,\u0027\u0027)), CONCAT(\u0027; name: \u0027, COALESCE(OLD.name,\u0027\u0027), \u0027 \u2192 \u0027, COALESCE(NEW.name,\u0027\u0027))), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\n\n  IF COALESCE(OLD.code,\u0027\u0027) \u003C\u003E COALESCE(NEW.code,\u0027\u0027) THEN\n    INSERT INTO system_event_log\n      (user_id, event_type, table_name, related_module, record_id, field_name,\n       old_value, new_value, description, source_ip, device_info, session_id, severity)\n    VALUES\n      (NULL, \u0027UPDATE\u0027, \u0027sensor_types\u0027, \u0027SensorTypesPage\u0027, NEW.id, \u0027code\u0027,\n       OLD.code, NEW.code, \u0027sensor_types update: code changed\u0027, \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\n  END IF;\n\n  IF COALESCE(OLD.name,\u0027\u0027) \u003C\u003E COALESCE(NEW.name,\u0027\u0027) THEN\n    INSERT INTO system_event_log\n      (user_id, event_type, table_name, related_module, record_id, field_name,\n       old_value, new_value, description, source_ip, device_info, session_id, severity)\n    VALUES\n      (NULL, \u0027UPDATE\u0027, \u0027sensor_types\u0027, \u0027SensorTypesPage\u0027, NEW.id, \u0027name\u0027,\n       OLD.name, NEW.name, \u0027sensor_types update: name changed\u0027, \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\n  END IF;\nEND"
.\tools\schema\snapshots\schema.json:30148:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_session_log_ad_audit\u0060 AFTER DELETE ON \u0060session_log\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027DELETE\u0027, \u0027session_log\u0027, \u0027SessionLogPage\u0027, OLD.id, NULL,\n     NULL, NULL, CONCAT(\u0027session_log delete\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027warning\u0027);\nEND"
.\tools\schema\snapshots\schema.json:30155:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_session_log_ai_audit\u0060 AFTER INSERT ON \u0060session_log\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027INSERT\u0027, \u0027session_log\u0027, \u0027SessionLogPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027session_log insert\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\nEND"
.\tools\schema\snapshots\schema.json:30162:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_session_log_au_audit\u0060 AFTER UPDATE ON \u0060session_log\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027UPDATE\u0027, \u0027session_log\u0027, \u0027SessionLogPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027session_log update\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\n\nEND"
.\tools\schema\snapshots\schema.json:30169:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_sites_ad_audit\u0060 AFTER DELETE ON \u0060sites\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027DELETE\u0027, \u0027sites\u0027, \u0027SitesPage\u0027, OLD.id, NULL,\n     NULL, NULL, CONCAT(\u0027sites delete\u0027, CONCAT(\u0027; code=\u0027, COALESCE(OLD.code,\u0027\u0027)), CONCAT(\u0027; name=\u0027, COALESCE(OLD.name,\u0027\u0027))), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027warning\u0027);\nEND"
.\tools\schema\snapshots\schema.json:30176:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_sites_ai_audit\u0060 AFTER INSERT ON \u0060sites\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027INSERT\u0027, \u0027sites\u0027, \u0027SitesPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027sites insert\u0027, CONCAT(\u0027; code=\u0027, COALESCE(NEW.code,\u0027\u0027)), CONCAT(\u0027; name=\u0027, COALESCE(NEW.name,\u0027\u0027))), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\nEND"
.\tools\schema\snapshots\schema.json:30183:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_sites_au_audit\u0060 AFTER UPDATE ON \u0060sites\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027UPDATE\u0027, \u0027sites\u0027, \u0027SitesPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027sites update\u0027, CONCAT(\u0027; code: \u0027, COALESCE(OLD.code,\u0027\u0027), \u0027 \u2192 \u0027, COALESCE(NEW.code,\u0027\u0027)), CONCAT(\u0027; name: \u0027, COALESCE(OLD.name,\u0027\u0027), \u0027 \u2192 \u0027, COALESCE(NEW.name,\u0027\u0027))), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\n\n  IF COALESCE(OLD.code,\u0027\u0027) \u003C\u003E COALESCE(NEW.code,\u0027\u0027) THEN\n    INSERT INTO system_event_log\n      (user_id, event_type, table_name, related_module, record_id, field_name,\n       old_value, new_value, description, source_ip, device_info, session_id, severity)\n    VALUES\n      (NULL, \u0027UPDATE\u0027, \u0027sites\u0027, \u0027SitesPage\u0027, NEW.id, \u0027code\u0027,\n       OLD.code, NEW.code, \u0027sites update: code changed\u0027, \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\n  END IF;\n\n  IF COALESCE(OLD.name,\u0027\u0027) \u003C\u003E COALESCE(NEW.name,\u0027\u0027) THEN\n    INSERT INTO system_event_log\n      (user_id, event_type, table_name, related_module, record_id, field_name,\n       old_value, new_value, description, source_ip, device_info, session_id, severity)\n    VALUES\n      (NULL, \u0027UPDATE\u0027, \u0027sites\u0027, \u0027SitesPage\u0027, NEW.id, \u0027name\u0027,\n       OLD.name, NEW.name, \u0027sites update: name changed\u0027, \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\n  END IF;\nEND"
.\tools\schema\snapshots\schema.json:30190:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_sop_documents_ad_audit\u0060 AFTER DELETE ON \u0060sop_documents\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027DELETE\u0027, \u0027sop_documents\u0027, \u0027SopDocumentsPage\u0027, OLD.id, NULL,\n     NULL, NULL, CONCAT(\u0027sop_documents delete\u0027, CONCAT(\u0027; code=\u0027, COALESCE(OLD.code,\u0027\u0027)), CONCAT(\u0027; name=\u0027, COALESCE(OLD.name,\u0027\u0027))), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027warning\u0027);\nEND"
.\tools\schema\snapshots\schema.json:30197:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_sop_documents_ai_audit\u0060 AFTER INSERT ON \u0060sop_documents\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027INSERT\u0027, \u0027sop_documents\u0027, \u0027SopDocumentsPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027sop_documents insert\u0027, CONCAT(\u0027; code=\u0027, COALESCE(NEW.code,\u0027\u0027)), CONCAT(\u0027; name=\u0027, COALESCE(NEW.name,\u0027\u0027))), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\nEND"
.\tools\schema\snapshots\schema.json:30204:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_sop_documents_au_audit\u0060 AFTER UPDATE ON \u0060sop_documents\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027UPDATE\u0027, \u0027sop_documents\u0027, \u0027SopDocumentsPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027sop_documents update\u0027, CONCAT(\u0027; code: \u0027, COALESCE(OLD.code,\u0027\u0027), \u0027 \u2192 \u0027, COALESCE(NEW.code,\u0027\u0027)), CONCAT(\u0027; name: \u0027, COALESCE(OLD.name,\u0027\u0027), \u0027 \u2192 \u0027, COALESCE(NEW.name,\u0027\u0027))), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\n\n  IF COALESCE(OLD.code,\u0027\u0027) \u003C\u003E COALESCE(NEW.code,\u0027\u0027) THEN\n    INSERT INTO system_event_log\n      (user_id, event_type, table_name, related_module, record_id, field_name,\n       old_value, new_value, description, source_ip, device_info, session_id, severity)\n    VALUES\n      (NULL, \u0027UPDATE\u0027, \u0027sop_documents\u0027, \u0027SopDocumentsPage\u0027, NEW.id, \u0027code\u0027,\n       OLD.code, NEW.code, \u0027sop_documents update: code changed\u0027, \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\n  END IF;\n\n  IF COALESCE(OLD.name,\u0027\u0027) \u003C\u003E COALESCE(NEW.name,\u0027\u0027) THEN\n    INSERT INTO system_event_log\n      (user_id, event_type, table_name, related_module, record_id, field_name,\n       old_value, new_value, description, source_ip, device_info, session_id, severity)\n    VALUES\n      (NULL, \u0027UPDATE\u0027, \u0027sop_documents\u0027, \u0027SopDocumentsPage\u0027, NEW.id, \u0027name\u0027,\n       OLD.name, NEW.name, \u0027sop_documents update: name changed\u0027, \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\n  END IF;\nEND"
.\tools\schema\snapshots\schema.json:30211:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_sop_document_log_ad_audit\u0060 AFTER DELETE ON \u0060sop_document_log\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027DELETE\u0027, \u0027sop_document_log\u0027, \u0027SopDocumentLogPage\u0027, OLD.id, NULL,\n     NULL, NULL, CONCAT(\u0027sop_document_log delete\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027warning\u0027);\nEND"
.\tools\schema\snapshots\schema.json:30218:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_sop_document_log_ai_audit\u0060 AFTER INSERT ON \u0060sop_document_log\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027INSERT\u0027, \u0027sop_document_log\u0027, \u0027SopDocumentLogPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027sop_document_log insert\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\nEND"
.\tools\schema\snapshots\schema.json:30225:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_sop_document_log_au_audit\u0060 AFTER UPDATE ON \u0060sop_document_log\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027UPDATE\u0027, \u0027sop_document_log\u0027, \u0027SopDocumentLogPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027sop_document_log update\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\n\nEND"
.\tools\schema\snapshots\schema.json:30232:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_stock_levels_ad_audit\u0060 AFTER DELETE ON \u0060stock_levels\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027DELETE\u0027, \u0027stock_levels\u0027, \u0027StockLevelsPage\u0027, OLD.id, NULL,\n     NULL, NULL, CONCAT(\u0027stock_levels delete\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027warning\u0027);\nEND"
.\tools\schema\snapshots\schema.json:30239:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_stock_levels_ai_audit\u0060 AFTER INSERT ON \u0060stock_levels\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027INSERT\u0027, \u0027stock_levels\u0027, \u0027StockLevelsPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027stock_levels insert\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\nEND"
.\tools\schema\snapshots\schema.json:30246:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_stock_levels_au_audit\u0060 AFTER UPDATE ON \u0060stock_levels\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027UPDATE\u0027, \u0027stock_levels\u0027, \u0027StockLevelsPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027stock_levels update\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\n\nEND"
.\tools\schema\snapshots\schema.json:30253:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_suppliers_ad_audit\u0060 AFTER DELETE ON \u0060suppliers\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027DELETE\u0027, \u0027suppliers\u0027, \u0027SuppliersPage\u0027, OLD.id, NULL,\n     NULL, NULL, CONCAT(\u0027suppliers delete\u0027, CONCAT(\u0027; code=\u0027, COALESCE(OLD.code,\u0027\u0027)), CONCAT(\u0027; name=\u0027, COALESCE(OLD.name,\u0027\u0027))), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027warning\u0027);\nEND"
.\tools\schema\snapshots\schema.json:30260:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_suppliers_ai_audit\u0060 AFTER INSERT ON \u0060suppliers\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027INSERT\u0027, \u0027suppliers\u0027, \u0027SuppliersPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027suppliers insert\u0027, CONCAT(\u0027; code=\u0027, COALESCE(NEW.code,\u0027\u0027)), CONCAT(\u0027; name=\u0027, COALESCE(NEW.name,\u0027\u0027))), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\nEND"
.\tools\schema\snapshots\schema.json:30267:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_suppliers_au_audit\u0060 AFTER UPDATE ON \u0060suppliers\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027UPDATE\u0027, \u0027suppliers\u0027, \u0027SuppliersPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027suppliers update\u0027, CONCAT(\u0027; code: \u0027, COALESCE(OLD.code,\u0027\u0027), \u0027 \u2192 \u0027, COALESCE(NEW.code,\u0027\u0027)), CONCAT(\u0027; name: \u0027, COALESCE(OLD.name,\u0027\u0027), \u0027 \u2192 \u0027, COALESCE(NEW.name,\u0027\u0027))), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\n\n  IF COALESCE(OLD.code,\u0027\u0027) \u003C\u003E COALESCE(NEW.code,\u0027\u0027) THEN\n    INSERT INTO system_event_log\n      (user_id, event_type, table_name, related_module, record_id, field_name,\n       old_value, new_value, description, source_ip, device_info, session_id, severity)\n    VALUES\n      (NULL, \u0027UPDATE\u0027, \u0027suppliers\u0027, \u0027SuppliersPage\u0027, NEW.id, \u0027code\u0027,\n       OLD.code, NEW.code, \u0027suppliers update: code changed\u0027, \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\n  END IF;\n\n  IF COALESCE(OLD.name,\u0027\u0027) \u003C\u003E COALESCE(NEW.name,\u0027\u0027) THEN\n    INSERT INTO system_event_log\n      (user_id, event_type, table_name, related_module, record_id, field_name,\n       old_value, new_value, description, source_ip, device_info, session_id, severity)\n    VALUES\n      (NULL, \u0027UPDATE\u0027, \u0027suppliers\u0027, \u0027SuppliersPage\u0027, NEW.id, \u0027name\u0027,\n       OLD.name, NEW.name, \u0027suppliers update: name changed\u0027, \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\n  END IF;\nEND"
.\tools\schema\snapshots\schema.json:30274:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_supplier_risk_audit_ad_audit\u0060 AFTER DELETE ON \u0060supplier_risk_audit\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027DELETE\u0027, \u0027supplier_risk_audit\u0027, \u0027SupplierRiskAuditPage\u0027, OLD.id, NULL,\n     NULL, NULL, CONCAT(\u0027supplier_risk_audit delete\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027warning\u0027);\nEND"
.\tools\schema\snapshots\schema.json:30281:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_supplier_risk_audit_ai_audit\u0060 AFTER INSERT ON \u0060supplier_risk_audit\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027INSERT\u0027, \u0027supplier_risk_audit\u0027, \u0027SupplierRiskAuditPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027supplier_risk_audit insert\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\nEND"
.\tools\schema\snapshots\schema.json:30288:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_supplier_risk_audit_au_audit\u0060 AFTER UPDATE ON \u0060supplier_risk_audit\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027UPDATE\u0027, \u0027supplier_risk_audit\u0027, \u0027SupplierRiskAuditPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027supplier_risk_audit update\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\n\nEND"
.\tools\schema\snapshots\schema.json:30302:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_sup_sync_u\u0060 BEFORE UPDATE ON \u0060suppliers\u0060 FOR EACH ROW BEGIN\n  IF (NEW.status \u003C=\u003E OLD.status) = 0 THEN\n    CALL ref_touch(\u0027supplier_status\u0027, NEW.status, NEW.status);\n    IF LAST_INSERT_ID() IS NOT NULL THEN SET NEW.status_id = LAST_INSERT_ID(); END IF;\n  END IF;\n  IF (NEW.type \u003C=\u003E OLD.type) = 0 THEN\n    CALL ref_touch(\u0027supplier_type\u0027, NEW.type, NEW.type);\n    IF LAST_INSERT_ID() IS NOT NULL THEN SET NEW.type_id = LAST_INSERT_ID(); END IF;\n  END IF;\nEND"
.\tools\schema\snapshots\schema.json:30316:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_system_event_log_bu\u0060 BEFORE UPDATE ON \u0060system_event_log\u0060 FOR EACH ROW BEGIN\n  \n  IF (NEW.event_time \u003C=\u003E OLD.event_time) = 0 THEN\n    SET NEW.\u0060timestamp\u0060 = NEW.event_time;\n  END IF;\n\n  \n  IF ((NEW.event_type \u003C=\u003E OLD.event_type) = 0) OR ((NEW.\u0060action\u0060 \u003C=\u003E OLD.\u0060action\u0060) = 0) THEN\n    IF (NEW.event_type \u003C=\u003E OLD.event_type) = 0 THEN\n      SET NEW.\u0060action\u0060 = NEW.event_type;\n    ELSEIF (NEW.\u0060action\u0060 \u003C=\u003E OLD.\u0060action\u0060) = 0 THEN\n      SET NEW.event_type = NEW.\u0060action\u0060;\n    END IF;\n  END IF;\n\n  \n  IF ((NEW.description \u003C=\u003E OLD.description) = 0) OR ((NEW.\u0060details\u0060 \u003C=\u003E OLD.\u0060details\u0060) = 0) THEN\n    IF (NEW.description \u003C=\u003E OLD.description) = 0 THEN\n      SET NEW.\u0060details\u0060 = NEW.description;\n    ELSEIF (NEW.\u0060details\u0060 \u003C=\u003E OLD.\u0060details\u0060) = 0 THEN\n      SET NEW.description = NEW.\u0060details\u0060;\n    END IF;\n  END IF;\nEND"
.\tools\schema\snapshots\schema.json:30323:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_system_event_log_fk_guard\u0060 BEFORE INSERT ON \u0060system_event_log\u0060 FOR EACH ROW BEGIN\n  IF NEW.user_id IS NOT NULL THEN\n    IF (SELECT COUNT(*) FROM users WHERE id = NEW.user_id) = 0 THEN\n      SET NEW.user_id = NULL;\n    END IF;\n  END IF;\nEND"
.\tools\schema\snapshots\schema.json:30330:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_system_parameters_ad_audit\u0060 AFTER DELETE ON \u0060system_parameters\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027DELETE\u0027, \u0027system_parameters\u0027, \u0027SystemParametersPage\u0027, OLD.id, NULL,\n     NULL, NULL, CONCAT(\u0027system_parameters delete\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027warning\u0027);\nEND"
.\tools\schema\snapshots\schema.json:30337:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_system_parameters_ai_audit\u0060 AFTER INSERT ON \u0060system_parameters\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027INSERT\u0027, \u0027system_parameters\u0027, \u0027SystemParametersPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027system_parameters insert\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\nEND"
.\tools\schema\snapshots\schema.json:30344:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_system_parameters_au_audit\u0060 AFTER UPDATE ON \u0060system_parameters\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027UPDATE\u0027, \u0027system_parameters\u0027, \u0027SystemParametersPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027system_parameters update\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\n\nEND"
.\tools\schema\snapshots\schema.json:30351:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_tags_ad_audit\u0060 AFTER DELETE ON \u0060tags\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027DELETE\u0027, \u0027tags\u0027, \u0027TagsPage\u0027, OLD.id, NULL,\n     NULL, NULL, CONCAT(\u0027tags delete\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027warning\u0027);\nEND"
.\tools\schema\snapshots\schema.json:30358:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_tags_ai_audit\u0060 AFTER INSERT ON \u0060tags\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027INSERT\u0027, \u0027tags\u0027, \u0027TagsPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027tags insert\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\nEND"
.\tools\schema\snapshots\schema.json:30365:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_tags_au_audit\u0060 AFTER UPDATE ON \u0060tags\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027UPDATE\u0027, \u0027tags\u0027, \u0027TagsPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027tags update\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\n\nEND"
.\tools\schema\snapshots\schema.json:30372:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_tenants_ad_audit\u0060 AFTER DELETE ON \u0060tenants\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027DELETE\u0027, \u0027tenants\u0027, \u0027TenantsPage\u0027, OLD.id, NULL,\n     NULL, NULL, CONCAT(\u0027tenants delete\u0027, CONCAT(\u0027; code=\u0027, COALESCE(OLD.code,\u0027\u0027)), CONCAT(\u0027; name=\u0027, COALESCE(OLD.name,\u0027\u0027))), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027warning\u0027);\nEND"
.\tools\schema\snapshots\schema.json:30379:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_tenants_ai_audit\u0060 AFTER INSERT ON \u0060tenants\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027INSERT\u0027, \u0027tenants\u0027, \u0027TenantsPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027tenants insert\u0027, CONCAT(\u0027; code=\u0027, COALESCE(NEW.code,\u0027\u0027)), CONCAT(\u0027; name=\u0027, COALESCE(NEW.name,\u0027\u0027))), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\nEND"
.\tools\schema\snapshots\schema.json:30386:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_tenants_au_audit\u0060 AFTER UPDATE ON \u0060tenants\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027UPDATE\u0027, \u0027tenants\u0027, \u0027TenantsPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027tenants update\u0027, CONCAT(\u0027; code: \u0027, COALESCE(OLD.code,\u0027\u0027), \u0027 \u2192 \u0027, COALESCE(NEW.code,\u0027\u0027)), CONCAT(\u0027; name: \u0027, COALESCE(OLD.name,\u0027\u0027), \u0027 \u2192 \u0027, COALESCE(NEW.name,\u0027\u0027))), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\n\n  IF COALESCE(OLD.code,\u0027\u0027) \u003C\u003E COALESCE(NEW.code,\u0027\u0027) THEN\n    INSERT INTO system_event_log\n      (user_id, event_type, table_name, related_module, record_id, field_name,\n       old_value, new_value, description, source_ip, device_info, session_id, severity)\n    VALUES\n      (NULL, \u0027UPDATE\u0027, \u0027tenants\u0027, \u0027TenantsPage\u0027, NEW.id, \u0027code\u0027,\n       OLD.code, NEW.code, \u0027tenants update: code changed\u0027, \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\n  END IF;\n\n  IF COALESCE(OLD.name,\u0027\u0027) \u003C\u003E COALESCE(NEW.name,\u0027\u0027) THEN\n    INSERT INTO system_event_log\n      (user_id, event_type, table_name, related_module, record_id, field_name,\n       old_value, new_value, description, source_ip, device_info, session_id, severity)\n    VALUES\n      (NULL, \u0027UPDATE\u0027, \u0027tenants\u0027, \u0027TenantsPage\u0027, NEW.id, \u0027name\u0027,\n       OLD.name, NEW.name, \u0027tenants update: name changed\u0027, \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\n  END IF;\nEND"
.\tools\schema\snapshots\schema.json:30393:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_users_ad_audit\u0060 AFTER DELETE ON \u0060users\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027DELETE\u0027, \u0027users\u0027, \u0027UsersPage\u0027, OLD.id, NULL,\n     NULL, NULL, CONCAT(\u0027users delete\u0027, CONCAT(\u0027; username=\u0027, COALESCE(OLD.username,\u0027\u0027))), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027warning\u0027);\nEND"
.\tools\schema\snapshots\schema.json:30400:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_users_ai_audit\u0060 AFTER INSERT ON \u0060users\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027INSERT\u0027, \u0027users\u0027, \u0027UsersPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027users insert\u0027, CONCAT(\u0027; username=\u0027, COALESCE(NEW.username,\u0027\u0027))), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\nEND"
.\tools\schema\snapshots\schema.json:30407:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_users_au_audit\u0060 AFTER UPDATE ON \u0060users\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027UPDATE\u0027, \u0027users\u0027, \u0027UsersPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027users update\u0027, CONCAT(\u0027; username: \u0027, COALESCE(OLD.username,\u0027\u0027), \u0027 \u2192 \u0027, COALESCE(NEW.username,\u0027\u0027))), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\n\nEND"
.\tools\schema\snapshots\schema.json:30414:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_user_audit_ad_audit\u0060 AFTER DELETE ON \u0060user_audit\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027DELETE\u0027, \u0027user_audit\u0027, \u0027UserAuditPage\u0027, OLD.id, NULL,\n     NULL, NULL, CONCAT(\u0027user_audit delete\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027warning\u0027);\nEND"
.\tools\schema\snapshots\schema.json:30421:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_user_audit_ai_audit\u0060 AFTER INSERT ON \u0060user_audit\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027INSERT\u0027, \u0027user_audit\u0027, \u0027UserAuditPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027user_audit insert\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\nEND"
.\tools\schema\snapshots\schema.json:30428:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_user_audit_au_audit\u0060 AFTER UPDATE ON \u0060user_audit\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027UPDATE\u0027, \u0027user_audit\u0027, \u0027UserAuditPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027user_audit update\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\n\nEND"
.\tools\schema\snapshots\schema.json:30435:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_user_esignatures_ad_audit\u0060 AFTER DELETE ON \u0060user_esignatures\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027DELETE\u0027, \u0027user_esignatures\u0027, \u0027UserEsignaturesPage\u0027, OLD.id, NULL,\n     NULL, NULL, CONCAT(\u0027user_esignatures delete\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027warning\u0027);\nEND"
.\tools\schema\snapshots\schema.json:30442:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_user_esignatures_ai_audit\u0060 AFTER INSERT ON \u0060user_esignatures\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027INSERT\u0027, \u0027user_esignatures\u0027, \u0027UserEsignaturesPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027user_esignatures insert\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\nEND"
.\tools\schema\snapshots\schema.json:30449:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_user_esignatures_au_audit\u0060 AFTER UPDATE ON \u0060user_esignatures\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027UPDATE\u0027, \u0027user_esignatures\u0027, \u0027UserEsignaturesPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027user_esignatures update\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\n\nEND"
.\tools\schema\snapshots\schema.json:30456:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_user_login_audit_ad_audit\u0060 AFTER DELETE ON \u0060user_login_audit\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027DELETE\u0027, \u0027user_login_audit\u0027, \u0027UserLoginAuditPage\u0027, OLD.id, NULL,\n     NULL, NULL, CONCAT(\u0027user_login_audit delete\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027warning\u0027);\nEND"
.\tools\schema\snapshots\schema.json:30463:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_user_login_audit_ai_audit\u0060 AFTER INSERT ON \u0060user_login_audit\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027INSERT\u0027, \u0027user_login_audit\u0027, \u0027UserLoginAuditPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027user_login_audit insert\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\nEND"
.\tools\schema\snapshots\schema.json:30470:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_user_login_audit_au_audit\u0060 AFTER UPDATE ON \u0060user_login_audit\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027UPDATE\u0027, \u0027user_login_audit\u0027, \u0027UserLoginAuditPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027user_login_audit update\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\n\nEND"
.\tools\schema\snapshots\schema.json:30477:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_user_permissions_ad_audit\u0060 AFTER DELETE ON \u0060user_permissions\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027DELETE\u0027, \u0027user_permissions\u0027, \u0027UserPermissionsPage\u0027, OLD.user_id, NULL,\n     NULL, NULL, CONCAT(\u0027user_permissions delete\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027warning\u0027);\nEND"
.\tools\schema\snapshots\schema.json:30484:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_user_permissions_ai_audit\u0060 AFTER INSERT ON \u0060user_permissions\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027INSERT\u0027, \u0027user_permissions\u0027, \u0027UserPermissionsPage\u0027, NEW.user_id, NULL,\n     NULL, NULL, CONCAT(\u0027user_permissions insert\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\nEND"
.\tools\schema\snapshots\schema.json:30491:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_user_permissions_au_audit\u0060 AFTER UPDATE ON \u0060user_permissions\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027UPDATE\u0027, \u0027user_permissions\u0027, \u0027UserPermissionsPage\u0027, NEW.user_id, NULL,\n     NULL, NULL, CONCAT(\u0027user_permissions update\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\n\nEND"
.\tools\schema\snapshots\schema.json:30498:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_user_roles_ad_audit\u0060 AFTER DELETE ON \u0060user_roles\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027DELETE\u0027, \u0027user_roles\u0027, \u0027UserRolesPage\u0027, OLD.user_id, NULL,\n     NULL, NULL, CONCAT(\u0027user_roles delete\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027warning\u0027);\nEND"
.\tools\schema\snapshots\schema.json:30505:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_user_roles_ai_audit\u0060 AFTER INSERT ON \u0060user_roles\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027INSERT\u0027, \u0027user_roles\u0027, \u0027UserRolesPage\u0027, NEW.user_id, NULL,\n     NULL, NULL, CONCAT(\u0027user_roles insert\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\nEND"
.\tools\schema\snapshots\schema.json:30512:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_user_roles_au_audit\u0060 AFTER UPDATE ON \u0060user_roles\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027UPDATE\u0027, \u0027user_roles\u0027, \u0027UserRolesPage\u0027, NEW.user_id, NULL,\n     NULL, NULL, CONCAT(\u0027user_roles update\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\n\nEND"
.\tools\schema\snapshots\schema.json:30519:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_user_subscriptions_ad_audit\u0060 AFTER DELETE ON \u0060user_subscriptions\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027DELETE\u0027, \u0027user_subscriptions\u0027, \u0027UserSubscriptionsPage\u0027, OLD.id, NULL,\n     NULL, NULL, CONCAT(\u0027user_subscriptions delete\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027warning\u0027);\nEND"
.\tools\schema\snapshots\schema.json:30526:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_user_subscriptions_ai_audit\u0060 AFTER INSERT ON \u0060user_subscriptions\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027INSERT\u0027, \u0027user_subscriptions\u0027, \u0027UserSubscriptionsPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027user_subscriptions insert\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\nEND"
.\tools\schema\snapshots\schema.json:30533:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_user_subscriptions_au_audit\u0060 AFTER UPDATE ON \u0060user_subscriptions\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027UPDATE\u0027, \u0027user_subscriptions\u0027, \u0027UserSubscriptionsPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027user_subscriptions update\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\n\nEND"
.\tools\schema\snapshots\schema.json:30540:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_user_training_ad_audit\u0060 AFTER DELETE ON \u0060user_training\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027DELETE\u0027, \u0027user_training\u0027, \u0027UserTrainingPage\u0027, OLD.id, NULL,\n     NULL, NULL, CONCAT(\u0027user_training delete\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027warning\u0027);\nEND"
.\tools\schema\snapshots\schema.json:30547:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_user_training_ai_audit\u0060 AFTER INSERT ON \u0060user_training\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027INSERT\u0027, \u0027user_training\u0027, \u0027UserTrainingPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027user_training insert\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\nEND"
.\tools\schema\snapshots\schema.json:30554:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_user_training_au_audit\u0060 AFTER UPDATE ON \u0060user_training\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027UPDATE\u0027, \u0027user_training\u0027, \u0027UserTrainingPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027user_training update\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\n\nEND"
.\tools\schema\snapshots\schema.json:30561:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_validations_ad_audit\u0060 AFTER DELETE ON \u0060validations\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027DELETE\u0027, \u0027validations\u0027, \u0027ValidationsPage\u0027, OLD.id, NULL,\n     NULL, NULL, CONCAT(\u0027validations delete\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027warning\u0027);\nEND"
.\tools\schema\snapshots\schema.json:30568:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_validations_ai_audit\u0060 AFTER INSERT ON \u0060validations\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027INSERT\u0027, \u0027validations\u0027, \u0027ValidationsPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027validations insert\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\nEND"
.\tools\schema\snapshots\schema.json:30575:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_validations_au_audit\u0060 AFTER UPDATE ON \u0060validations\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027UPDATE\u0027, \u0027validations\u0027, \u0027ValidationsPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027validations update\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\n\nEND"
.\tools\schema\snapshots\schema.json:30582:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_warehouses_ad_audit\u0060 AFTER DELETE ON \u0060warehouses\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027DELETE\u0027, \u0027warehouses\u0027, \u0027WarehousesPage\u0027, OLD.id, NULL,\n     NULL, NULL, CONCAT(\u0027warehouses delete\u0027, CONCAT(\u0027; name=\u0027, COALESCE(OLD.name,\u0027\u0027))), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027warning\u0027);\nEND"
.\tools\schema\snapshots\schema.json:30589:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_warehouses_ai_audit\u0060 AFTER INSERT ON \u0060warehouses\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027INSERT\u0027, \u0027warehouses\u0027, \u0027WarehousesPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027warehouses insert\u0027, CONCAT(\u0027; name=\u0027, COALESCE(NEW.name,\u0027\u0027))), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\nEND"
.\tools\schema\snapshots\schema.json:30596:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_warehouses_au_audit\u0060 AFTER UPDATE ON \u0060warehouses\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027UPDATE\u0027, \u0027warehouses\u0027, \u0027WarehousesPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027warehouses update\u0027, CONCAT(\u0027; name: \u0027, COALESCE(OLD.name,\u0027\u0027), \u0027 \u2192 \u0027, COALESCE(NEW.name,\u0027\u0027))), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\n\n  IF COALESCE(OLD.name,\u0027\u0027) \u003C\u003E COALESCE(NEW.name,\u0027\u0027) THEN\n    INSERT INTO system_event_log\n      (user_id, event_type, table_name, related_module, record_id, field_name,\n       old_value, new_value, description, source_ip, device_info, session_id, severity)\n    VALUES\n      (NULL, \u0027UPDATE\u0027, \u0027warehouses\u0027, \u0027WarehousesPage\u0027, NEW.id, \u0027name\u0027,\n       OLD.name, NEW.name, \u0027warehouses update: name changed\u0027, \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\n  END IF;\nEND"
.\tools\schema\snapshots\schema.json:30603:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_work_orders_ad_audit\u0060 AFTER DELETE ON \u0060work_orders\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027DELETE\u0027, \u0027work_orders\u0027, \u0027WorkOrdersPage\u0027, OLD.id, NULL,\n     NULL, NULL, CONCAT(\u0027work_orders delete\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027warning\u0027);\nEND"
.\tools\schema\snapshots\schema.json:30610:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_work_orders_ai_audit\u0060 AFTER INSERT ON \u0060work_orders\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027INSERT\u0027, \u0027work_orders\u0027, \u0027WorkOrdersPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027work_orders insert\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\nEND"
.\tools\schema\snapshots\schema.json:30617:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_work_orders_au_audit\u0060 AFTER UPDATE ON \u0060work_orders\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027UPDATE\u0027, \u0027work_orders\u0027, \u0027WorkOrdersPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027work_orders update\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\n\nEND"
.\tools\schema\snapshots\schema.json:30624:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_work_order_audit_ad_audit\u0060 AFTER DELETE ON \u0060work_order_audit\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027DELETE\u0027, \u0027work_order_audit\u0027, \u0027WorkOrderAuditPage\u0027, OLD.id, NULL,\n     NULL, NULL, CONCAT(\u0027work_order_audit delete\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027warning\u0027);\nEND"
.\tools\schema\snapshots\schema.json:30631:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_work_order_audit_ai_audit\u0060 AFTER INSERT ON \u0060work_order_audit\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027INSERT\u0027, \u0027work_order_audit\u0027, \u0027WorkOrderAuditPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027work_order_audit insert\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\nEND"
.\tools\schema\snapshots\schema.json:30638:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_work_order_audit_au_audit\u0060 AFTER UPDATE ON \u0060work_order_audit\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027UPDATE\u0027, \u0027work_order_audit\u0027, \u0027WorkOrderAuditPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027work_order_audit update\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\n\nEND"
.\tools\schema\snapshots\schema.json:30645:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_work_order_checklist_item_ad_audit\u0060 AFTER DELETE ON \u0060work_order_checklist_item\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027DELETE\u0027, \u0027work_order_checklist_item\u0027, \u0027WorkOrderChecklistItemPage\u0027, OLD.id, NULL,\n     NULL, NULL, CONCAT(\u0027work_order_checklist_item delete\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027warning\u0027);\nEND"
.\tools\schema\snapshots\schema.json:30652:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_work_order_checklist_item_ai_audit\u0060 AFTER INSERT ON \u0060work_order_checklist_item\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027INSERT\u0027, \u0027work_order_checklist_item\u0027, \u0027WorkOrderChecklistItemPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027work_order_checklist_item insert\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\nEND"
.\tools\schema\snapshots\schema.json:30659:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_work_order_checklist_item_au_audit\u0060 AFTER UPDATE ON \u0060work_order_checklist_item\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027UPDATE\u0027, \u0027work_order_checklist_item\u0027, \u0027WorkOrderChecklistItemPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027work_order_checklist_item update\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\n\nEND"
.\tools\schema\snapshots\schema.json:30666:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_work_order_comments_ad_audit\u0060 AFTER DELETE ON \u0060work_order_comments\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027DELETE\u0027, \u0027work_order_comments\u0027, \u0027WorkOrderCommentsPage\u0027, OLD.id, NULL,\n     NULL, NULL, CONCAT(\u0027work_order_comments delete\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027warning\u0027);\nEND"
.\tools\schema\snapshots\schema.json:30673:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_work_order_comments_ai_audit\u0060 AFTER INSERT ON \u0060work_order_comments\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027INSERT\u0027, \u0027work_order_comments\u0027, \u0027WorkOrderCommentsPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027work_order_comments insert\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\nEND"
.\tools\schema\snapshots\schema.json:30680:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_work_order_comments_au_audit\u0060 AFTER UPDATE ON \u0060work_order_comments\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027UPDATE\u0027, \u0027work_order_comments\u0027, \u0027WorkOrderCommentsPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027work_order_comments update\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\n\nEND"
.\tools\schema\snapshots\schema.json:30687:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_work_order_parts_ad_audit\u0060 AFTER DELETE ON \u0060work_order_parts\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027DELETE\u0027, \u0027work_order_parts\u0027, \u0027WorkOrderPartsPage\u0027, OLD.work_order_id, NULL,\n     NULL, NULL, CONCAT(\u0027work_order_parts delete\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027warning\u0027);\nEND"
.\tools\schema\snapshots\schema.json:30694:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_work_order_parts_ai_audit\u0060 AFTER INSERT ON \u0060work_order_parts\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027INSERT\u0027, \u0027work_order_parts\u0027, \u0027WorkOrderPartsPage\u0027, NEW.work_order_id, NULL,\n     NULL, NULL, CONCAT(\u0027work_order_parts insert\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\nEND"
.\tools\schema\snapshots\schema.json:30701:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_work_order_parts_au_audit\u0060 AFTER UPDATE ON \u0060work_order_parts\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027UPDATE\u0027, \u0027work_order_parts\u0027, \u0027WorkOrderPartsPage\u0027, NEW.work_order_id, NULL,\n     NULL, NULL, CONCAT(\u0027work_order_parts update\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\n\nEND"
.\tools\schema\snapshots\schema.json:30708:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_work_order_signatures_ad_audit\u0060 AFTER DELETE ON \u0060work_order_signatures\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027DELETE\u0027, \u0027work_order_signatures\u0027, \u0027WorkOrderSignaturesPage\u0027, OLD.id, NULL,\n     NULL, NULL, CONCAT(\u0027work_order_signatures delete\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027warning\u0027);\nEND"
.\tools\schema\snapshots\schema.json:30715:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_work_order_signatures_ai_audit\u0060 AFTER INSERT ON \u0060work_order_signatures\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027INSERT\u0027, \u0027work_order_signatures\u0027, \u0027WorkOrderSignaturesPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027work_order_signatures insert\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\nEND"
.\tools\schema\snapshots\schema.json:30722:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_work_order_signatures_au_audit\u0060 AFTER UPDATE ON \u0060work_order_signatures\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027UPDATE\u0027, \u0027work_order_signatures\u0027, \u0027WorkOrderSignaturesPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027work_order_signatures update\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\n\nEND"
.\tools\schema\snapshots\schema.json:30729:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_work_order_status_log_ad_audit\u0060 AFTER DELETE ON \u0060work_order_status_log\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027DELETE\u0027, \u0027work_order_status_log\u0027, \u0027WorkOrderStatusLogPage\u0027, OLD.id, NULL,\n     NULL, NULL, CONCAT(\u0027work_order_status_log delete\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027warning\u0027);\nEND"
.\tools\schema\snapshots\schema.json:30736:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_work_order_status_log_ai_audit\u0060 AFTER INSERT ON \u0060work_order_status_log\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027INSERT\u0027, \u0027work_order_status_log\u0027, \u0027WorkOrderStatusLogPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027work_order_status_log insert\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\nEND"
.\tools\schema\snapshots\schema.json:30743:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_work_order_status_log_au_audit\u0060 AFTER UPDATE ON \u0060work_order_status_log\u0060 FOR EACH ROW BEGIN\n  INSERT INTO system_event_log\n    (user_id, event_type, table_name, related_module, record_id, field_name,\n     old_value, new_value, description, source_ip, device_info, session_id, severity)\n  VALUES\n    (NULL, \u0027UPDATE\u0027, \u0027work_order_status_log\u0027, \u0027WorkOrderStatusLogPage\u0027, NEW.id, NULL,\n     NULL, NULL, CONCAT(\u0027work_order_status_log update\u0027), \u0027system\u0027, \u0027server\u0027, \u0027\u0027, \u0027info\u0027);\n\nEND"
.\tools\schema\snapshots\schema.json:30757:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 TRIGGER \u0060trg_wo_sync_u\u0060 BEFORE UPDATE ON \u0060work_orders\u0060 FOR EACH ROW BEGIN\n  IF (NEW.status \u003C=\u003E OLD.status) = 0 THEN\n    CALL ref_touch(\u0027work_order_status\u0027, NEW.status, NEW.status);\n    IF LAST_INSERT_ID() IS NOT NULL THEN SET NEW.status_id = LAST_INSERT_ID(); END IF;\n  END IF;\n  IF (NEW.type \u003C=\u003E OLD.type) = 0 THEN\n    CALL ref_touch(\u0027work_order_type\u0027, NEW.type, NEW.type);\n    IF LAST_INSERT_ID() IS NOT NULL THEN SET NEW.type_id = LAST_INSERT_ID(); END IF;\n  END IF;\n  IF (NEW.priority \u003C=\u003E OLD.priority) = 0 THEN\n    CALL ref_touch(\u0027priority\u0027, NEW.priority, NEW.priority);\n    IF LAST_INSERT_ID() IS NOT NULL THEN SET NEW.priority_id = LAST_INSERT_ID(); END IF;\n  END IF;\nEND"
.\tools\schema\snapshots\schema.json:30764:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 PROCEDURE \u0060add_column_if_missing\u0060(\r\n    IN p_table  VARCHAR(64),\r\n    IN p_column VARCHAR(64),\r\n    IN p_def    TEXT\r\n)\nBEGIN\r\n    IF NOT EXISTS (\r\n        SELECT 1 FROM INFORMATION_SCHEMA.COLUMNS\r\n         WHERE TABLE_SCHEMA = DATABASE()\r\n           AND TABLE_NAME   = p_table\r\n           AND COLUMN_NAME  = p_column\r\n    ) THEN\r\n        SET @ddl = CONCAT(\u0027ALTER TABLE \u0060\u0027, p_table, \u0027\u0060 ADD COLUMN \u0060\u0027, p_column, \u0027\u0060 \u0027, p_def);\r\n        PREPARE stmt FROM @ddl;\r\n        EXECUTE stmt;\r\n        DEALLOCATE PREPARE stmt;\r\n    END IF;\r\nEND"
.\tools\schema\snapshots\schema.json:30769:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 PROCEDURE \u0060add_fk_if_missing\u0060(IN p_tbl VARCHAR(64), IN p_fk VARCHAR(64), IN p_ddl TEXT)\nBEGIN\n  IF EXISTS (SELECT 1 FROM information_schema.tables\n              WHERE table_schema = DATABASE() AND table_name = p_tbl) THEN\n    IF NOT EXISTS (SELECT 1 FROM information_schema.table_constraints\n                    WHERE table_schema   = DATABASE()\n                      AND table_name     = p_tbl\n                      AND constraint_type = \u0027FOREIGN KEY\u0027\n                      AND constraint_name = p_fk) THEN\n      SET @sql := p_ddl; PREPARE ps FROM @sql; EXECUTE ps; DEALLOCATE PREPARE ps;\n    END IF;\n  END IF;\nEND"
.\tools\schema\snapshots\schema.json:30774:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 PROCEDURE \u0060add_index_if_missing\u0060(IN p_tbl VARCHAR(64), IN p_idx VARCHAR(64), IN p_ddl TEXT)\nBEGIN\n  IF EXISTS (SELECT 1 FROM information_schema.tables\n              WHERE table_schema = DATABASE() AND table_name = p_tbl) THEN\n    IF NOT EXISTS (SELECT 1 FROM information_schema.statistics\n                    WHERE table_schema = DATABASE()\n                      AND table_name   = p_tbl\n                      AND index_name   = p_idx) THEN\n      SET @sql := p_ddl; PREPARE ps FROM @sql; EXECUTE ps; DEALLOCATE PREPARE ps;\n    END IF;\n  END IF;\nEND"
.\tools\schema\snapshots\schema.json:30779:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 PROCEDURE \u0060backfill_catalog_ids\u0060()\nBEGIN\n  \n  UPDATE work_orders wo\n  JOIN ref_domain d ON d.code=\u0027work_order_status\u0027\n  JOIN ref_value rv ON rv.domain_id=d.id AND rv.code=wo.status\n  SET wo.status_id=rv.id\n  WHERE wo.status IS NOT NULL;\n\n  UPDATE work_orders wo\n  JOIN ref_domain d ON d.code=\u0027work_order_type\u0027\n  JOIN ref_value rv ON rv.domain_id=d.id AND rv.code=wo.type\n  SET wo.type_id=rv.id\n  WHERE wo.type IS NOT NULL;\n\n  UPDATE work_orders wo\n  JOIN ref_domain d ON d.code=\u0027priority\u0027\n  JOIN ref_value rv ON rv.domain_id=d.id AND rv.code=wo.priority\n  SET wo.priority_id=rv.id\n  WHERE wo.priority IS NOT NULL;\n\n  \n  UPDATE inspections i\n  JOIN ref_domain d1 ON d1.code=\u0027inspection_type\u0027\n  JOIN ref_value rv1 ON rv1.domain_id=d1.id AND rv1.code=i.type\n  SET i.type_id=rv1.id\n  WHERE i.type IS NOT NULL;\n\n  UPDATE inspections i\n  JOIN ref_domain d2 ON d2.code=\u0027inspection_result\u0027\n  JOIN ref_value rv2 ON rv2.domain_id=d2.id AND rv2.code=i.result\n  SET i.result_id=rv2.id\n  WHERE i.result IS NOT NULL;\n\n  \n  UPDATE calibrations c\n  JOIN ref_domain d ON d.code=\u0027calibration_result\u0027\n  JOIN ref_value rv ON rv.domain_id=d.id AND rv.code=c.result\n  SET c.result_id=rv.id\n  WHERE c.result IS NOT NULL;\n\n  \n  UPDATE quality_events q\n  JOIN ref_domain d ON d.code=\u0027quality_event_type\u0027\n  JOIN ref_value rv ON rv.domain_id=d.id AND rv.code=q.event_type\n  SET q.type_id=rv.id\n  WHERE q.event_type IS NOT NULL;\n\n  UPDATE quality_events q\n  JOIN ref_domain d ON d.code=\u0027quality_status\u0027\n  JOIN ref_value rv ON rv.domain_id=d.id AND rv.code=q.status\n  SET q.status_id=rv.id\n  WHERE q.status IS NOT NULL;\n\n  \n  UPDATE machines m\n  JOIN ref_domain d ON d.code=\u0027asset_status\u0027\n  JOIN ref_value rv ON rv.domain_id=d.id AND rv.code=m.status\n  SET m.status_id=rv.id\n  WHERE m.status IS NOT NULL;\n\n  UPDATE machines m\n  JOIN ref_domain d ON d.code=\u0027lifecycle_phase\u0027\n  JOIN ref_value rv ON rv.domain_id=d.id AND rv.code=m.lifecycle_phase\n  SET m.lifecycle_phase_id=rv.id\n  WHERE m.lifecycle_phase IS NOT NULL;\n\n  \n  UPDATE suppliers s\n  JOIN ref_domain d1 ON d1.code=\u0027supplier_status\u0027\n  JOIN ref_value rv1 ON rv1.domain_id=d1.id AND rv1.code=s.status\n  SET s.status_id=rv1.id\n  WHERE s.status IS NOT NULL;\n\n  UPDATE suppliers s\n  JOIN ref_domain d2 ON d2.code=\u0027supplier_type\u0027\n  JOIN ref_value rv2 ON rv2.domain_id=d2.id AND rv2.code=s.type\n  SET s.type_id=rv2.id\n  WHERE s.type IS NOT NULL;\nEND"
.\tools\schema\snapshots\schema.json:30789:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 PROCEDURE \u0060ensure_timestamps_all\u0060()\nBEGIN\n  DECLARE done INT DEFAULT 0;\n  DECLARE tbl VARCHAR(100);\n  DECLARE cur CURSOR FOR\n    SELECT TABLE_NAME\n      FROM INFORMATION_SCHEMA.TABLES\n     WHERE TABLE_SCHEMA = DATABASE()\n       AND TABLE_TYPE = \u0027BASE TABLE\u0027;\n  DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = 1;\n\n  OPEN cur;\n  read_loop: LOOP\n    FETCH cur INTO tbl;\n    IF done THEN\n      LEAVE read_loop;\n    END IF;\n\n    IF NOT EXISTS (\n      SELECT 1 FROM INFORMATION_SCHEMA.COLUMNS\n       WHERE TABLE_SCHEMA = DATABASE()\n         AND TABLE_NAME = tbl\n         AND COLUMN_NAME = \u0027created_at\u0027\n    ) THEN\n      SET @s = CONCAT(\u0027ALTER TABLE \u0027, tbl,\n                      \u0027 ADD COLUMN created_at DATETIME DEFAULT CURRENT_TIMESTAMP\u0027);\n      PREPARE stmt FROM @s; EXECUTE stmt; DEALLOCATE PREPARE stmt;\n    END IF;\n\n    IF NOT EXISTS (\n      SELECT 1 FROM INFORMATION_SCHEMA.COLUMNS\n       WHERE TABLE_SCHEMA = DATABASE()\n         AND TABLE_NAME = tbl\n         AND COLUMN_NAME = \u0027updated_at\u0027\n    ) THEN\n      SET @s = CONCAT(\u0027ALTER TABLE \u0027, tbl,\n                      \u0027 ADD COLUMN updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP\u0027);\n      PREPARE stmt FROM @s; EXECUTE stmt; DEALLOCATE PREPARE stmt;\n    END IF;\n\n  END LOOP;\n  CLOSE cur;\nEND"
.\tools\schema\snapshots\schema.json:30799:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 PROCEDURE \u0060migrate_enum_to_fk\u0060(\n    IN p_table        VARCHAR(64),\n    IN p_old_col      VARCHAR(64),\n    IN p_new_col      VARCHAR(64),\n    IN p_domain_code  VARCHAR(50),\n    IN p_default_code VARCHAR(100)\n)\nBEGIN\n  DECLARE v_domain_id  INT;\n  DECLARE v_fk_name    VARCHAR(128);\n\n  \n  SELECT id INTO v_domain_id\n    FROM lookup_domain\n   WHERE domain_code = p_domain_code;\n\n  \n  CALL add_column_if_missing(p_table, CONCAT(\u0027\u0060\u0027,p_new_col,\u0027\u0060\u0027),\u0027INT NULL\u0027);\n\n  \n  SET @sql := CONCAT(\n    \u0027UPDATE \u0027,p_table,\u0027 t \u0027,\n    \u0027JOIN lookup_value v \u0027,\n    \u0027  ON v.domain_id = \u0027,v_domain_id,\n    \u0027 AND v.value_code COLLATE utf8mb4_unicode_ci = \u0027,\n    \u0027     COALESCE(t.\u0027,p_old_col,\u0027,\\\u0027\u0027,p_default_code,\u0027\\\u0027) \u0027,\n    \u0027       COLLATE utf8mb4_unicode_ci \u0027,\n    \u0027SET t.\u0027,p_new_col,\u0027 = v.id \u0027,\n    \u0027WHERE t.\u0027,p_new_col,\u0027 IS NULL\u0027);\n  PREPARE s FROM @sql; EXECUTE s; DEALLOCATE PREPARE s;\n\n  \n  SET v_fk_name := CONCAT(\u0027fk_\u0027,p_table,\u0027_\u0027,p_new_col);\n  CALL add_fk_if_missing(\n        p_table,\n        v_fk_name,\n        CONCAT(\n          \u0027ALTER TABLE \u0027,p_table,\n          \u0027 ADD CONSTRAINT \u0027,v_fk_name,\n          \u0027 FOREIGN KEY (\u0027,p_new_col,\u0027) REFERENCES lookup_value(id)\u0027)\n  );\nEND"
.\tools\schema\snapshots\schema.json:30804:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 PROCEDURE \u0060ref_touch\u0060(\r\n    IN p_domain VARCHAR(64),\r\n    IN p_code   VARCHAR(255),\r\n    IN p_label  VARCHAR(255)\r\n)\nBEGIN\r\n    DECLARE v_domain_id INT;\r\n    DECLARE v_value_id  INT;\r\n\r\n    -- ensure domain exists; set LAST_INSERT_ID to its id\r\n    INSERT INTO ref_domain(\u0060name\u0060) VALUES (p_domain)\r\n    ON DUPLICATE KEY UPDATE \u0060id\u0060 = LAST_INSERT_ID(\u0060id\u0060);\r\n    SET v_domain_id = LAST_INSERT_ID();\r\n\r\n    -- ensure value exists; set LAST_INSERT_ID to its id (inserted or existing)\r\n    INSERT INTO ref_value(\u0060domain_id\u0060,\u0060code\u0060,\u0060label\u0060,\u0060is_active\u0060)\r\n    VALUES (v_domain_id, p_code, COALESCE(p_label, p_code), 1)\r\n    ON DUPLICATE KEY UPDATE \u0060id\u0060 = LAST_INSERT_ID(\u0060id\u0060), \u0060label\u0060=VALUES(\u0060label\u0060), \u0060is_active\u0060=1;\r\n    SET v_value_id = LAST_INSERT_ID();\r\n\r\n    -- expose value id via session LAST_INSERT_ID() without returning a result set\r\n    DO LAST_INSERT_ID(v_value_id);\r\nEND"
.\tools\schema\snapshots\schema.json:30809:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 PROCEDURE \u0060sp_emit_audit_triggers\u0060(IN p_table VARCHAR(64))\nBEGIN\n  /*\n    Emits a suggested 3-trigger audit block for p_table as a single TEXT column (ddl).\n    Usage:\n      CALL sp_emit_audit_triggers(\u0027your_table\u0027);\n    Notes:\n      - MySQL cannot PREPARE CREATE TRIGGER; copy the result into a script and run.\n      - related_module defaults to CONCAT(p_table, \u0027Page\u0027).\n  */\n  DECLARE has_id        BOOL DEFAULT FALSE;\n  DECLARE has_code      BOOL DEFAULT FALSE;\n  DECLARE has_name      BOOL DEFAULT FALSE;\n  DECLARE has_number    BOOL DEFAULT FALSE;\n  DECLARE has_username  BOOL DEFAULT FALSE;\n\n  SELECT COUNT(*)\u003E0 INTO has_id       FROM information_schema.columns WHERE table_schema = DATABASE() AND table_name = p_table AND column_name = \u0027id\u0027;\n  SELECT COUNT(*)\u003E0 INTO has_code     FROM information_schema.columns WHERE table_schema = DATABASE() AND table_name = p_table AND column_name = \u0027code\u0027;\n  SELECT COUNT(*)\u003E0 INTO has_name     FROM information_schema.columns WHERE table_schema = DATABASE() AND table_name = p_table AND column_name = \u0027name\u0027;\n  SELECT COUNT(*)\u003E0 INTO has_number   FROM information_schema.columns WHERE table_schema = DATABASE() AND table_name = p_table AND column_name = \u0027number\u0027;\n  SELECT COUNT(*)\u003E0 INTO has_username FROM information_schema.columns WHERE table_schema = DATABASE() AND table_name = p_table AND column_name = \u0027username\u0027;\n\n  SELECT CONCAT(\n\u0027-- ===== Triggers for \u0027, p_table, \u0027 =====\\n\u0027,\n\u0027DROP TRIGGER IF EXISTS trg_\u0027, p_table, \u0027_ai_audit;\\n\u0027,\n\u0027DROP TRIGGER IF EXISTS trg_\u0027, p_table, \u0027_au_audit;\\n\u0027,\n\u0027DROP TRIGGER IF EXISTS trg_\u0027, p_table, \u0027_ad_audit;\\n\u0027,\n\u0027DELIMITER $$\\n\\n\u0027,\n\n\u0027CREATE TRIGGER trg_\u0027, p_table, \u0027_ai_audit\\n\u0027,\n\u0027AFTER INSERT ON \u0027, p_table, \u0027\\nFOR EACH ROW\\nBEGIN\\n\u0027,\n\u0027  INSERT INTO system_event_log\\n\u0027,\n\u0027    (user_id, event_type, table_name, related_module, record_id, field_name,\\n\u0027,\n\u0027     old_value, new_value, description, source_ip, device_info, session_id, severity)\\n\u0027,\n\u0027  VALUES\\n\u0027,\n\u0027    (NULL, \u0027\u0027INSERT\u0027\u0027, \u0027\u0027\u0027, p_table, \u0027\u0027\u0027, \u0027\u0027\u0027, p_table, \u0027Page\u0027\u0027, NEW.\u0027, IF(has_id,\u0027id\u0027,\u0027id\u0027), \u0027, NULL,\\n\u0027,\n\u0027     NULL, NULL, CONCAT(\u0027\u0027\u0027, p_table, \u0027 insert\u0027\u0027\u0027,\nIF(has_code,     \u0027, CONCAT(\u0027\u0027; code=\u0027\u0027, COALESCE(NEW.code, \u0027\u0027\u0027\u0027))\u0027, \u0027\u0027),\nIF(has_name,     \u0027, CONCAT(\u0027\u0027; name=\u0027\u0027, COALESCE(NEW.name, \u0027\u0027\u0027\u0027))\u0027, \u0027\u0027),\nIF(has_number,   \u0027, CONCAT(\u0027\u0027; number=\u0027\u0027, COALESCE(NEW.number, \u0027\u0027\u0027\u0027))\u0027, \u0027\u0027),\nIF(has_username, \u0027, CONCAT(\u0027\u0027; username=\u0027\u0027, COALESCE(NEW.username, \u0027\u0027\u0027\u0027))\u0027, \u0027\u0027),\n\u0027), \u0027\u0027system\u0027\u0027, \u0027\u0027server\u0027\u0027, \u0027\u0027\u0027\u0027, \u0027\u0027info\u0027\u0027);\\n\u0027,\n\u0027END$$\\n\\n\u0027,\n\n\u0027CREATE TRIGGER trg_\u0027, p_table, \u0027_au_audit\\n\u0027,\n\u0027AFTER UPDATE ON \u0027, p_table, \u0027\\nFOR EACH ROW\\nBEGIN\\n\u0027,\n\u0027  INSERT INTO system_event_log\\n\u0027,\n\u0027    (user_id, event_type, table_name, related_module, record_id, field_name,\\n\u0027,\n\u0027     old_value, new_value, description, source_ip, device_info, session_id, severity)\\n\u0027,\n\u0027  VALUES\\n\u0027,\n\u0027    (NULL, \u0027\u0027UPDATE\u0027\u0027, \u0027\u0027\u0027, p_table, \u0027\u0027\u0027, \u0027\u0027\u0027, p_table, \u0027Page\u0027\u0027, NEW.\u0027, IF(has_id,\u0027id\u0027,\u0027id\u0027), \u0027, NULL,\\n\u0027,\n\u0027     NULL, NULL, CONCAT(\u0027\u0027\u0027, p_table, \u0027 update\u0027\u0027\u0027,\nIF(has_code,     \u0027, CONCAT(\u0027\u0027; code: \u0027\u0027, COALESCE(OLD.code, \u0027\u0027\u0027\u0027), \u0027\u0027 \u2192 \u0027\u0027, COALESCE(NEW.code, \u0027\u0027\u0027\u0027))\u0027, \u0027\u0027),\nIF(has_name,     \u0027, CONCAT(\u0027\u0027; name: \u0027\u0027, COALESCE(OLD.name, \u0027\u0027\u0027\u0027), \u0027\u0027 \u2192 \u0027\u0027, COALESCE(NEW.name, \u0027\u0027\u0027\u0027))\u0027, \u0027\u0027),\nIF(has_number,   \u0027, CONCAT(\u0027\u0027; number: \u0027\u0027, COALESCE(OLD.number, \u0027\u0027\u0027\u0027), \u0027\u0027 \u2192 \u0027\u0027, COALESCE(NEW.number, \u0027\u0027\u0027\u0027))\u0027, \u0027\u0027),\nIF(has_username, \u0027, CONCAT(\u0027\u0027; username: \u0027\u0027, COALESCE(OLD.username, \u0027\u0027\u0027\u0027), \u0027\u0027 \u2192 \u0027\u0027, COALESCE(NEW.username, \u0027\u0027\u0027\u0027))\u0027, \u0027\u0027),\n\u0027), \u0027\u0027system\u0027\u0027, \u0027\u0027server\u0027\u0027, \u0027\u0027\u0027\u0027, \u0027\u0027info\u0027\u0027);\\n\u0027,\nIF(has_code, CONCAT(\n\u0027  IF COALESCE(OLD.code, \u0027\u0027\u0027\u0027) \u003C\u003E COALESCE(NEW.code, \u0027\u0027\u0027\u0027) THEN\\n\u0027,\n\u0027    INSERT INTO system_event_log (user_id, event_type, table_name, related_module, record_id, field_name, old_value, new_value, description, source_ip, device_info, session_id, severity)\\n\u0027,\n\u0027    VALUES (NULL, \u0027\u0027UPDATE\u0027\u0027, \u0027\u0027\u0027, p_table, \u0027\u0027\u0027, \u0027\u0027\u0027, p_table, \u0027Page\u0027\u0027, NEW.\u0027, IF(has_id,\u0027id\u0027,\u0027id\u0027), \u0027, \u0027\u0027code\u0027\u0027, OLD.code, NEW.code, \u0027\u0027\u0027, p_table, \u0027 update: code changed\u0027\u0027, \u0027\u0027system\u0027\u0027, \u0027\u0027server\u0027\u0027, \u0027\u0027\u0027\u0027, \u0027\u0027info\u0027\u0027);\\n\u0027,\n\u0027  END IF;\\n\u0027), \u0027\u0027),\nIF(has_name, CONCAT(\n\u0027  IF COALESCE(OLD.name, \u0027\u0027\u0027\u0027) \u003C\u003E COALESCE(NEW.name, \u0027\u0027\u0027\u0027) THEN\\n\u0027,\n\u0027    INSERT INTO system_event_log (user_id, event_type, table_name, related_module, record_id, field_name, old_value, new_value, description, source_ip, device_info, session_id, severity)\\n\u0027,\n\u0027    VALUES (NULL, \u0027\u0027UPDATE\u0027\u0027, \u0027\u0027\u0027, p_table, \u0027\u0027\u0027, \u0027\u0027\u0027, p_table, \u0027Page\u0027\u0027, NEW.\u0027, IF(has_id,\u0027id\u0027,\u0027id\u0027), \u0027, \u0027\u0027name\u0027\u0027, OLD.name, NEW.name, \u0027\u0027\u0027, p_table, \u0027 update: name changed\u0027\u0027, \u0027\u0027system\u0027\u0027, \u0027\u0027server\u0027\u0027, \u0027\u0027\u0027\u0027, \u0027\u0027info\u0027\u0027);\\n\u0027,\n\u0027  END IF;\\n\u0027), \u0027\u0027),\n\u0027END$$\\n\\n\u0027,\n\n\u0027CREATE TRIGGER trg_\u0027, p_table, \u0027_ad_audit\\n\u0027,\n\u0027AFTER DELETE ON \u0027, p_table, \u0027\\nFOR EACH ROW\\nBEGIN\\n\u0027,\n\u0027  INSERT INTO system_event_log\\n\u0027,\n\u0027    (user_id, event_type, table_name, related_module, record_id, field_name,\\n\u0027,\n\u0027     old_value, new_value, description, source_ip, device_info, session_id, severity)\\n\u0027,\n\u0027  VALUES\\n\u0027,\n\u0027    (NULL, \u0027\u0027DELETE\u0027\u0027, \u0027\u0027\u0027, p_table, \u0027\u0027\u0027, \u0027\u0027\u0027, p_table, \u0027Page\u0027\u0027, OLD.\u0027, IF(has_id,\u0027id\u0027,\u0027id\u0027), \u0027, NULL,\\n\u0027,\n\u0027     NULL, NULL, CONCAT(\u0027\u0027\u0027, p_table, \u0027 delete\u0027\u0027\u0027,\nIF(has_code,     \u0027, CONCAT(\u0027\u0027; code=\u0027\u0027, COALESCE(OLD.code, \u0027\u0027\u0027\u0027))\u0027, \u0027\u0027),\nIF(has_name,     \u0027, CONCAT(\u0027\u0027; name=\u0027\u0027, COALESCE(OLD.name, \u0027\u0027\u0027\u0027))\u0027, \u0027\u0027),\n\u0027), \u0027\u0027system\u0027\u0027, \u0027\u0027server\u0027\u0027, \u0027\u0027\u0027\u0027, \u0027\u0027warning\u0027\u0027);\\n\u0027,\n\u0027END$$\\n\\n\u0027,\n\u0027DELIMITER ;\\n\u0027\n  ) AS ddl;\nEND"
.\tools\schema\snapshots\schema.json:30814:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 PROCEDURE \u0060sp_inspect_triggers_for_resultsets\u0060(IN p_table VARCHAR(64))\nBEGIN\n  /*\n    Scans trigger bodies for suspicious tokens that could emit result sets or do admin ops.\n    Usage:\n      CALL sp_inspect_triggers_for_resultsets(\u0027machines\u0027);\n      CALL sp_inspect_triggers_for_resultsets(NULL); -- all tables\n  */\n  SELECT\n      TRIGGER_NAME,\n      EVENT_OBJECT_TABLE AS table_name,\n      ACTION_TIMING,\n      EVENT_MANIPULATION AS event_op,\n      ACTION_STATEMENT\n  FROM INFORMATION_SCHEMA.TRIGGERS\n  WHERE TRIGGER_SCHEMA = DATABASE()\n    AND (p_table IS NULL OR EVENT_OBJECT_TABLE = p_table)\n    AND (\n      ACTION_STATEMENT REGEXP \u0027\\\\bSELECT\\\\b\u0027\n      OR ACTION_STATEMENT REGEXP \u0027\\\\bSHOW\\\\b\u0027\n      OR ACTION_STATEMENT REGEXP \u0027\\\\bCREATE\\\\s\u002BTEMPORARY\\\\s\u002BTABLE\\\\b\u0027\n      OR ACTION_STATEMENT REGEXP \u0027\\\\bALTER\\\\s\u002BTABLE\\\\b\u0027\n      OR ACTION_STATEMENT REGEXP \u0027\\\\bDROP\\\\s\u002BTABLE\\\\b\u0027\n    )\n  ORDER BY EVENT_OBJECT_TABLE, TRIGGER_NAME;\nEND"
.\tools\schema\snapshots\schema.json:30819:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 PROCEDURE \u0060sp_list_table_triggers\u0060(IN p_table VARCHAR(64))\nBEGIN\n  /*\n    CALL sp_list_table_triggers(\u0027machines\u0027);\n  */\n  SELECT\n      TRIGGER_NAME,\n      ACTION_TIMING,\n      EVENT_MANIPULATION AS event_op\n  FROM INFORMATION_SCHEMA.TRIGGERS\n  WHERE TRIGGER_SCHEMA = DATABASE()\n    AND EVENT_OBJECT_TABLE = p_table\n  ORDER BY TRIGGER_NAME;\nEND"
.\tools\schema\snapshots\schema.json:30824:      "CreateSql": "CREATE DEFINER=\u0060root\u0060@\u0060localhost\u0060 PROCEDURE \u0060sp_log_calibration_export\u0060(\n    IN p_user_id INT,\n    IN p_format ENUM(\u0027excel\u0027,\u0027pdf\u0027),\n    IN p_component_id INT,\n    IN p_date_from DATE,\n    IN p_date_to DATE,\n    IN p_file_path VARCHAR(255)\n)\nBEGIN\n    INSERT INTO calibration_export_log (\n        user_id, export_format, filter_component_id, filter_date_from, filter_date_to, file_path\n    ) VALUES (\n        p_user_id, p_format, p_component_id, p_date_from, p_date_to, p_file_path\n    );\nEND"
.\Services\UserService.cs:245:                "UPDATE users SET password_hash=@ph WHERE id=@id",
.\Services\DatabaseService.Audit.QueryExtensions.cs:36:                                     FROM system_event_log
.\Services\DatabaseService.Machines.CoreExtensions.cs:21:            var dt = await db.ExecuteSelectAsync("SELECT * FROM machines ORDER BY name, id", null, token).ConfigureAwait(false);
.\Services\DatabaseService.Machines.CoreExtensions.cs:50:            var dt = await db.ExecuteSelectAsync("SELECT * FROM machines WHERE id=@id LIMIT 1", new[] { new MySqlParameter("@id", id) }, token).ConfigureAwait(false);
.\Services\DatabaseService.Machines.CoreExtensions.cs:74:            string insert = @"INSERT INTO machines (code, name, description, model, manufacturer, location, install_date, procurement_date, status, urs_doc, serial_number, acquisition_cost, rfid_tag, qr_code, iot_device_id, cloud_device_guid)
.\Services\DatabaseService.Machines.CoreExtensions.cs:76:            string updateSql = @"UPDATE machines SET code=@code, name=@name, description=@desc, model=@model, manufacturer=@mf, location=@loc, install_date=@inst, procurement_date=@proc, status=@status, urs_doc=@urs, serial_number=@sn, acquisition_cost=@cost, rfid_tag=@rfid, qr_code=@qr, iot_device_id=@iot, cloud_device_guid=@cloud WHERE id=@id";
.\Services\DatabaseService.Machines.CoreExtensions.cs:151:                await db.ExecuteNonQueryAsync("DELETE FROM machines WHERE id=@id", new[] { new MySqlConnector.MySqlParameter("@id", machineId) }, token).ConfigureAwait(false);
.\Services\DatabaseService.Ppm.Extensions.cs:23:                var dt = await db.ExecuteSelectAsync("SELECT * FROM preventive_maintenance_plans ORDER BY id DESC", null, token).ConfigureAwait(false);
.\Services\DatabaseService.Ppm.Extensions.cs:28:                var dt = await db.ExecuteSelectAsync("SELECT * FROM ppm_plans ORDER BY id DESC", null, token).ConfigureAwait(false);
.\Services\DatabaseService.Ppm.Extensions.cs:37:                var dt = await db.ExecuteSelectAsync("SELECT * FROM preventive_maintenance_plans WHERE id=@id LIMIT 1", new[] { new MySqlParameter("@id", id) }, token).ConfigureAwait(false);
.\Services\DatabaseService.Ppm.Extensions.cs:42:                var dt = await db.ExecuteSelectAsync("SELECT * FROM ppm_plans WHERE id=@id LIMIT 1", new[] { new MySqlParameter("@id", id) }, token).ConfigureAwait(false);
.\Services\DatabaseService.Ppm.Extensions.cs:51:            string insert = @"INSERT INTO preventive_maintenance_plans (code, name, description, machine_id, component_id, frequency, checklist_file, next_due, status)
.\Services\DatabaseService.Ppm.Extensions.cs:53:            string updateSql = @"UPDATE preventive_maintenance_plans SET code=@code, name=@name, description=@desc, machine_id=@mid, component_id=@cid, frequency=@freq, checklist_file=@file, next_due=@due, status=@status WHERE id=@id";
.\Services\DatabaseService.Ppm.Extensions.cs:105:                await db.ExecuteNonQueryAsync("DELETE FROM preventive_maintenance_plans WHERE id=@id", new[] { new MySqlParameter("@id", id) }, token).ConfigureAwait(false);
.\Services\DatabaseService.Ppm.Extensions.cs:109:                await db.ExecuteNonQueryAsync("DELETE FROM ppm_plans WHERE id=@id", new[] { new MySqlParameter("@id", id) }, token).ConfigureAwait(false);
.\Services\DatabaseService.Notifications.Extensions.cs:20:            var dt = await db.ExecuteSelectAsync("SELECT * FROM notifications ORDER BY created_at DESC, id DESC", null, token).ConfigureAwait(false);
.\Services\DatabaseService.Notifications.Extensions.cs:29:            const string sql = @"INSERT INTO notifications (title, message, type, priority, status, entity, entity_id, link, recipients, recipient_id, sender_id, ip_address, device_info, session_id, created_at)
.\Services\DatabaseService.Notifications.Extensions.cs:70:            try { await db.ExecuteNonQueryAsync("UPDATE notifications SET status='acknowledged', acked_by=@u, acked_at=NOW() WHERE id=@id", new[] { new MySqlParameter("@u", actorUserId), new MySqlParameter("@id", notificationId) }, token).ConfigureAwait(false); } catch { }
.\Services\DatabaseService.Notifications.Extensions.cs:76:            try { await db.ExecuteNonQueryAsync("UPDATE notifications SET status='muted', muted_until=@until WHERE id=@id", new[] { new MySqlParameter("@until", mutedUntilUtc), new MySqlParameter("@id", notificationId) }, token).ConfigureAwait(false); } catch { }
.\Services\DatabaseService.Notifications.Extensions.cs:82:            try { await db.ExecuteNonQueryAsync("DELETE FROM notifications WHERE id=@id", new[] { new MySqlParameter("@id", notificationId) }, token).ConfigureAwait(false); } catch { }
.\Services\DatabaseService.Components.QueryExtensions.cs:23:            const string sql = @"SELECT * FROM machine_components ORDER BY id DESC";
.\Services\DatabaseService.Components.QueryExtensions.cs:36:            const string sql = @"SELECT * FROM machine_components WHERE id=@id LIMIT 1";
.\Views\MachinesPage.xaml.cs:62:                                     FROM machines";
.\Views\MachinesPage.xaml.cs:110:INSERT INTO machines (code, name, manufacturer, location, install_date, urs_doc, status, qr_code)
.\Views\MachinesPage.xaml.cs:164:UPDATE machines SET 
.\Views\MachinesPage.xaml.cs:206:                const string sql = "DELETE FROM machines WHERE id=@id";
.\Services\DatabaseService.ComponentOverloads.cs:49:                ? @"INSERT INTO machine_components
.\Services\DatabaseService.ComponentOverloads.cs:53:                : @"UPDATE machine_components SET
.\Services\DatabaseService.ComponentOverloads.cs:199:                "DELETE FROM machine_components WHERE id=@id",
.\Services\DatabaseService.ComponentOverloads.cs:231:                "DELETE FROM machine_components WHERE id=@id",
.\Services\ExportService.cs:318:            const string sql = @"INSERT INTO audit_log (action, details, user_id, timestamp)
.\Services\RBACService.cs:302:                INSERT INTO role_permissions (role_id, permission_id, allowed, assigned_by, assigned_at)
.\Services\RBACService.cs:335:            const string sql = "DELETE FROM role_permissions WHERE role_id=@r AND permission_id=@p";
.\Services\RBACService.cs:366:              INSERT INTO roles(name, description, org_unit, compliance_tags, is_deleted, notes, created_at, updated_at, created_by_id, last_modified_by_id, version)
.\Services\RBACService.cs:391:              UPDATE roles
.\Services\RBACService.cs:416:                "UPDATE roles SET is_deleted=1, updated_at=UTC_TIMESTAMP(), last_modified_by_id=@by, version=version+1 WHERE id=@id",
.\Services\RBACService.cs:421:                "DELETE FROM role_permissions WHERE role_id=@id",
.\Services\RBACService.cs:426:                "DELETE FROM user_roles WHERE role_id=@id",
.\Services\DatabaseService.TrainingRecords.Extensions.cs:37:FROM user_training
.\Services\DatabaseService.TrainingRecords.Extensions.cs:69:INSERT INTO user_training
.\Services\DatabaseService.TrainingRecords.Extensions.cs:108:UPDATE user_training
.\Services\DatabaseService.TrainingRecords.Extensions.cs:136:UPDATE user_training
.\Services\DatabaseService.TrainingRecords.Extensions.cs:160:UPDATE user_training
.\Services\DatabaseService.TrainingRecords.Extensions.cs:184:UPDATE user_training
.\Services\DatabaseService.TrainingRecords.Extensions.cs:217:INSERT INTO export_print_log (user_id, format, table_name, filter_used, file_path, source_ip, note)
.\Services\DatabaseService.TrainingRecords.Extensions.cs:308:INSERT INTO export_print_log (user_id, format, table_name, filter_used, file_path, source_ip, note)
.\Services\DatabaseService.TrainingRecords.Extensions.cs:352:INSERT INTO training_record_audit
.\Services\DatabaseService.WorkOrders.Extensions.cs:28:            const string sql = @"SELECT * FROM work_orders ORDER BY date_open DESC, id DESC";
.\Services\DatabaseService.WorkOrders.Extensions.cs:45:            const string sql = @"SELECT * FROM work_orders WHERE id=@id LIMIT 1";
.\Services\DatabaseService.WorkOrders.Extensions.cs:66:            string insert = @"INSERT INTO work_orders
.\Services\DatabaseService.WorkOrders.Extensions.cs:72:            string updateSql = @"UPDATE work_orders SET
.\Services\DatabaseService.WorkOrders.Extensions.cs:112:                string insertMin = @"INSERT INTO work_orders (machine_id, type, description, status, priority)
.\Services\DatabaseService.WorkOrders.Extensions.cs:114:                string updateMin = @"UPDATE work_orders SET machine_id=@mid, type=@type, description=@desc, status=@status, priority=@prio WHERE id=@id";
.\Services\DatabaseService.WorkOrders.Extensions.cs:191:            await db.ExecuteNonQueryAsync("DELETE FROM work_orders WHERE id=@id", new[] { new MySqlParameter("@id", id) }, token).ConfigureAwait(false);
.\Services\DatabaseService.WorkOrders.Extensions.cs:204:            await db.ExecuteNonQueryAsync("DELETE FROM work_orders WHERE id=@id", new[] { new MySqlParameter("@id", id) }, token).ConfigureAwait(false);
.\Services\DatabaseService.WorkOrders.Extensions.cs:231:            await db.ExecuteNonQueryAsync("UPDATE work_orders SET status='zavrsen' WHERE id=@id", new[] { new MySqlParameter("@id", workOrderId) }, token).ConfigureAwait(false);
.\Services\DatabaseService.WorkOrders.Extensions.cs:241:            await db.ExecuteNonQueryAsync("UPDATE work_orders SET status='zavrsen', date_close=NOW() WHERE id=@id", new[] { new MySqlParameter("@id", workOrderId) }, token).ConfigureAwait(false);
.\Services\DatabaseService.WorkOrders.Extensions.cs:280:                const string sql = @"INSERT INTO work_order_audit
.\Services\SupplierAuditService.cs:54:                        INSERT INTO supplier_audit
.\Services\DatabaseService.SystemEvents.QueryExtensions.cs:30:            string sql = "SELECT id, ts_utc, user_id, event_type, table_name, related_module, record_id, field_name, old_value, new_value, description, source_ip, device_info, session_id, severity, processed FROM system_event_log WHERE 1=1";
.\Services\DatabaseService.Validations.Extensions.cs:34:            const string sql = @"SELECT * FROM validations
.\Services\DatabaseService.Validations.Extensions.cs:50:            const string sql = @"SELECT * FROM validations WHERE id=@id LIMIT 1";
.\Services\DatabaseService.Validations.Extensions.cs:75:INSERT INTO validations
.\Services\DatabaseService.Validations.Extensions.cs:101:UPDATE validations SET
.\Services\DatabaseService.Validations.Extensions.cs:174:            const string sql = @"DELETE FROM validations WHERE id=@id";
.\Services\DatabaseService.Validations.Extensions.cs:289:INSERT INTO validation_audit
.\Services\DatabaseService.Validations.Extensions.cs:340:        /// Builds parameter array for INSERT/UPDATE against the <c>validations</c> table.
.\Services\DatabaseService.Suppliers.Extensions.cs:23:                var dt = await db.ExecuteSelectAsync("SELECT * FROM suppliers ORDER BY name, id", null, token).ConfigureAwait(false);
.\Services\DatabaseService.Suppliers.Extensions.cs:28:                var dt = await db.ExecuteSelectAsync("SELECT * FROM supplier ORDER BY name, id", null, token).ConfigureAwait(false);
.\Services\DatabaseService.Suppliers.Extensions.cs:37:                var dt = await db.ExecuteSelectAsync("SELECT * FROM suppliers WHERE id=@id LIMIT 1", new[] { new MySqlParameter("@id", id) }, token).ConfigureAwait(false);
.\Services\DatabaseService.Suppliers.Extensions.cs:42:                var dt = await db.ExecuteSelectAsync("SELECT * FROM supplier WHERE id=@id LIMIT 1", new[] { new MySqlParameter("@id", id) }, token).ConfigureAwait(false);
.\Services\DatabaseService.Suppliers.Extensions.cs:51:            string insert = @"INSERT INTO suppliers (name, vat_number, address, city, country, email, phone, website, supplier_type, notes, contract_file, status)
.\Services\DatabaseService.Suppliers.Extensions.cs:53:            string updateSql = @"UPDATE suppliers SET name=@name, vat_number=@vat, address=@addr, city=@city, country=@country, email=@em, phone=@ph, website=@web, supplier_type=@type, notes=@notes, contract_file=@contract, status=@status WHERE id=@id";
.\Services\DatabaseService.Suppliers.Extensions.cs:109:                await db.ExecuteNonQueryAsync("DELETE FROM suppliers WHERE id=@id", new[] { new MySqlParameter("@id", id) }, token).ConfigureAwait(false);
.\Services\DatabaseService.Suppliers.Extensions.cs:113:                await db.ExecuteNonQueryAsync("DELETE FROM supplier WHERE id=@id", new[] { new MySqlParameter("@id", id) }, token).ConfigureAwait(false);
.\Services\DatabaseService.Users.Extensions.cs:60:            const string sql = @"SELECT * FROM users WHERE id=@id LIMIT 1;";
.\Services\DatabaseService.Users.Extensions.cs:75:            const string sql = @"SELECT * FROM users WHERE LOWER(username)=LOWER(@u) LIMIT 1;";
.\Services\DatabaseService.Users.Extensions.cs:94:            var dt = await db.ExecuteSelectAsync("SELECT * FROM users ORDER BY username", null, token).ConfigureAwait(false);
.\Services\DatabaseService.Users.Extensions.cs:115:                ? @"INSERT INTO users
.\Services\DatabaseService.Users.Extensions.cs:118:                : @"UPDATE users SET
.\Services\DatabaseService.Users.Extensions.cs:143:                    ? @"INSERT INTO users
.\Services\DatabaseService.Users.Extensions.cs:146:                    : @"UPDATE users SET
.\Services\DatabaseService.Users.Extensions.cs:171:                    "UPDATE users SET last_login=NOW(), failed_login_attempts=0 WHERE id=@id",
.\Services\DatabaseService.Users.Extensions.cs:177:                    "UPDATE users SET last_login=NOW(), failed_logins=0 WHERE id=@id",
.\Services\DatabaseService.Users.Extensions.cs:191:                    @"UPDATE users
.\Services\DatabaseService.Users.Extensions.cs:200:                    @"UPDATE users
.\Services\DatabaseService.Users.Extensions.cs:214:            => db.ExecuteNonQueryAsync("UPDATE users SET is_locked=1 WHERE id=@id",
.\Services\DatabaseService.Users.Extensions.cs:230:                    "UPDATE users SET is_locked=0, failed_login_attempts=0 WHERE id=@id",
.\Services\DatabaseService.Users.Extensions.cs:236:                    "UPDATE users SET is_locked=0, failed_logins=0 WHERE id=@id",
.\Services\DatabaseService.Users.Extensions.cs:251:                "UPDATE users SET is_two_factor_enabled=@tfa WHERE id=@id",
.\Services\DatabaseService.Users.Extensions.cs:260:                    "UPDATE users SET password_reset_required=1 WHERE id=@id",
.\Services\DatabaseService.Users.Extensions.cs:282:            await db.ExecuteNonQueryAsync("DELETE FROM users WHERE id=@id",
.\Services\DatabaseService.SpareParts.Extensions.cs:23:            var dt = await db.ExecuteSelectAsync("SELECT * FROM parts WHERE id=@id LIMIT 1", new[] { new MySqlParameter("@id", id) }, token).ConfigureAwait(false);
.\Services\DatabaseService.SpareParts.Extensions.cs:38:            var dt = await db.ExecuteSelectAsync("SELECT * FROM parts ORDER BY name, id", null, token).ConfigureAwait(false);
.\Services\DatabaseService.SpareParts.Extensions.cs:47:            string insert = @"INSERT INTO parts (code, name, description, category, barcode, rfid, serial_or_lot, default_supplier_id, price, stock, min_stock_alert, location, image, status, blocked, regulatory_certificates, digital_signature, last_modified, last_modified_by_id, source_ip)
.\Services\DatabaseService.SpareParts.Extensions.cs:61:            string update = @"UPDATE parts SET code=@code, name=@name, description=@desc, category=@cat, barcode=@bar, rfid=@rfid, serial_or_lot=@serial, default_supplier_id=@supp, price=@price, stock=@stock, min_stock_alert=@min, location=@loc, image=@img, status=@status, blocked=@blocked, regulatory_certificates=@reg, digital_signature=@sig, last_modified=NOW(), last_modified_by_id=@lmb, source_ip=@ip WHERE id=@id";
.\Services\DatabaseService.SpareParts.Extensions.cs:70:            await db.ExecuteNonQueryAsync("DELETE FROM parts WHERE id=@id", new[] { new MySqlParameter("@id", id) }, token).ConfigureAwait(false);
.\Services\DatabaseService.Settings.Extensions.cs:18:            var dt = await db.ExecuteSelectAsync("SELECT * FROM settings ORDER BY `key`", null, token).ConfigureAwait(false);
.\Services\DatabaseService.Settings.Extensions.cs:58:            string insert = @"INSERT INTO settings (`key`, `value`, default_value, value_type, min_value, max_value, description, category, subcategory, is_sensitive, is_global, user_id, role_id, approved_by_id, approved_at, digital_signature, status, updated_at, updated_by_id)
.\Services\DatabaseService.Settings.Extensions.cs:60:            string updateSql = @"UPDATE settings SET `key`=@key, `value`=@val, default_value=@def, value_type=@type, min_value=@min, max_value=@max, description=@desc, category=@cat, subcategory=@sub, is_sensitive=@sens, is_global=@glob, user_id=@uid, role_id=@rid, approved_by_id=@apby, approved_at=@apat, digital_signature=@sig, status=@status, updated_at=NOW(), updated_by_id=@updby WHERE id=@id";
.\Services\DatabaseService.Settings.Extensions.cs:105:            await db.ExecuteNonQueryAsync("DELETE FROM settings WHERE id=@id", new[] { new MySqlParameter("@id", settingId) }, token).ConfigureAwait(false);
.\ViewModels\CalibrationsViewModel.cs:258:                    .ExecuteSelectAsync("SELECT * FROM calibrations ORDER BY calibration_date DESC")
.\ViewModels\CalibrationsViewModel.cs:310:                await _dbService.ExecuteNonQueryAsync("DELETE FROM calibrations WHERE id=@id", pars).ConfigureAwait(false);
.\Services\DatabaseService.Scheduler.Extensions.cs:17:            var dt = await db.ExecuteSelectAsync("SELECT * FROM scheduled_jobs ORDER BY next_due, id", null, token).ConfigureAwait(false);
.\ViewModels\ChangeControlViewModel.cs:141:                var controls = await _dbService.ExecuteSelectAsync("SELECT * FROM change_controls").ConfigureAwait(false);
.\ViewModels\ChangeControlViewModel.cs:194:                    "INSERT INTO change_controls (code, title, description, status, requested_by_id, date_requested) VALUES (@code, @title, @desc, @status, @rbid, @dt)",
.\ViewModels\ChangeControlViewModel.cs:225:                    "UPDATE change_controls SET status=@status WHERE id=@id",
.\ViewModels\ChangeControlViewModel.cs:269:                    "UPDATE change_controls SET status=@status WHERE id=@id",
.\ViewModels\ChangeControlViewModel.cs:296:                    "UPDATE change_controls SET status=@status WHERE id=@id",
